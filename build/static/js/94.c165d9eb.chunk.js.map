{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","modules/muiComponents/inputs/TransferList/SimpleTransferList.js","webpack:///./src/modules/muiComponents/inputs/TransferList/SimpleTransferList.js?dda3","modules/muiComponents/inputs/TransferList/EnhancedTransferList.js","modules/muiComponents/inputs/TransferList/index.js","webpack:///./src/modules/muiComponents/inputs/TransferList/EnhancedTransferList.js?746a"],"names":["useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","React","undefined","current","_React$useState","valueState","setValue","newValue","SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","FormControlContext","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","ListItemIcon","context","ListContext","alignItems","alignItemsFlexStart","minWidth","active","flexShrink","display","marginTop","useStyles","makeStyles","paper","overflow","button","spacing","not","a","b","filter","indexOf","intersection","TransferList","useState","setChecked","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","push","splice","customList","items","Paper","List","dense","map","labelId","ListItem","key","onClick","disableRipple","ListItemText","Grid","container","justify","item","direction","Button","variant","length","aria-label","cardHeader","list","background","numberOfChecked","handleToggleAll","title","Card","CardHeader","avatar","subheader","Divider","TransferLists","ComponentHeader","description","refUrl","GridContainer","xs","lg","ComponentCard","SimpleTransferList","source","EnhancedTransferList"],"mappings":"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","file":"static/js/94.c165d9eb.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper className={classes.paper}>\n      <List dense component='div' role='list'>\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role='listitem'\n              button\n              onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{'aria-labelledby': labelId}}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify='center'\n      alignItems='center'\n      className={classes.root}>\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction='column' alignItems='center'>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label='move all right'>\n            ≫\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label='move selected right'>\n            &gt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label='move selected left'>\n            &lt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label='move all left'>\n            ≪\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  paper: {\\n    width: 200,\\n    height: 230,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter((value) => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter((value) => b.indexOf(value) !== -1);\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = (value) => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const handleAllRight = () => {\\n    setRight(right.concat(left));\\n    setLeft([]);\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const handleAllLeft = () => {\\n    setLeft(left.concat(right));\\n    setRight([]);\\n  };\\n\\n  const customList = (items) => (\\n    <Paper className={classes.paper}>\\n      <List dense component='div' role='list'>\\n        {items.map((value) => {\\n          const labelId = `transfer-list-item-${value}-label`;\\n\\n          return (\\n            <ListItem\\n              key={value}\\n              role='listitem'\\n              button\\n              onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{'aria-labelledby': labelId}}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Paper>\\n  );\\n\\n  return (\\n    <Grid\\n      container\\n      spacing={2}\\n      justify='center'\\n      alignItems='center'\\n      className={classes.root}>\\n      <Grid item>{customList(left)}</Grid>\\n      <Grid item>\\n        <Grid container direction='column' alignItems='center'>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleAllRight}\\n            disabled={left.length === 0}\\n            aria-label='move all right'>\\n            ≫\\n          </Button>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label='move selected right'>\\n            &gt;\\n          </Button>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label='move selected left'>\\n            &lt;\\n          </Button>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleAllLeft}\\n            disabled={right.length === 0}\\n            aria-label='move all left'>\\n            ≪\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList(right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={\n              numberOfChecked(items) === items.length && items.length !== 0\n            }\n            indeterminate={\n              numberOfChecked(items) !== items.length &&\n              numberOfChecked(items) !== 0\n            }\n            disabled={items.length === 0}\n            inputProps={{'aria-label': 'all items selected'}}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <List className={classes.list} dense component='div' role='list'>\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role='listitem'\n              button\n              onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{'aria-labelledby': labelId}}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify='center'\n      alignItems='center'\n      className={classes.root}>\n      <Grid item>{customList('Choices', left)}</Grid>\n      <Grid item>\n        <Grid container direction='column' alignItems='center'>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label='move selected right'>\n            &gt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label='move selected left'>\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleTransferList from './SimpleTransferList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleTransferListSource from '!raw-loader!./SimpleTransferList';\nimport EnhancedTransferList from './EnhancedTransferList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport EnhancedTransferListSource from '!raw-loader!./EnhancedTransferList';\n\nconst TransferLists = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Transfer List'\n        description='transfer list (or shuttle) enables the user to move one or more list items between lists.'\n        refUrl='https://material-ui.com/components/transfer-list/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Transfer List'\n            component={SimpleTransferList}\n            source={SimpleTransferListSource}\n            description='For completeness, this example includes buttons for move all, but not every transfer list needs these.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Enhanced Transfer List'\n            component={EnhancedTransferList}\n            source={EnhancedTransferListSource}\n            description='This example exchanges the move all buttons for a select all / select none checkbox, and adds a counter.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default TransferLists;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport Card from '@material-ui/core/Card';\\nimport CardHeader from '@material-ui/core/CardHeader';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Divider from '@material-ui/core/Divider';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  cardHeader: {\\n    padding: theme.spacing(1, 2),\\n  },\\n  list: {\\n    width: 200,\\n    height: 230,\\n    backgroundColor: theme.palette.background.paper,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter((value) => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter((value) => b.indexOf(value) !== -1);\\n}\\n\\nfunction union(a, b) {\\n  return [...a, ...not(b, a)];\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = (value) => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const numberOfChecked = (items) => intersection(checked, items).length;\\n\\n  const handleToggleAll = (items) => () => {\\n    if (numberOfChecked(items) === items.length) {\\n      setChecked(not(checked, items));\\n    } else {\\n      setChecked(union(checked, items));\\n    }\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const customList = (title, items) => (\\n    <Card>\\n      <CardHeader\\n        className={classes.cardHeader}\\n        avatar={\\n          <Checkbox\\n            onClick={handleToggleAll(items)}\\n            checked={\\n              numberOfChecked(items) === items.length && items.length !== 0\\n            }\\n            indeterminate={\\n              numberOfChecked(items) !== items.length &&\\n              numberOfChecked(items) !== 0\\n            }\\n            disabled={items.length === 0}\\n            inputProps={{'aria-label': 'all items selected'}}\\n          />\\n        }\\n        title={title}\\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\\n      />\\n      <Divider />\\n      <List className={classes.list} dense component='div' role='list'>\\n        {items.map((value) => {\\n          const labelId = `transfer-list-all-item-${value}-label`;\\n\\n          return (\\n            <ListItem\\n              key={value}\\n              role='listitem'\\n              button\\n              onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{'aria-labelledby': labelId}}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Card>\\n  );\\n\\n  return (\\n    <Grid\\n      container\\n      spacing={2}\\n      justify='center'\\n      alignItems='center'\\n      className={classes.root}>\\n      <Grid item>{customList('Choices', left)}</Grid>\\n      <Grid item>\\n        <Grid container direction='column' alignItems='center'>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label='move selected right'>\\n            &gt;\\n          </Button>\\n          <Button\\n            variant='outlined'\\n            size='small'\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label='move selected left'>\\n            &lt;\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList('Chosen', right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";"],"sourceRoot":""}