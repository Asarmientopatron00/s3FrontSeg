(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[173],{3103:function(e,n,t){"use strict";t.r(n);var o=t(0),r=t.n(o),a=t(1082),i=t(306),l=t(305),s=t(304),c=t(1293),p=function(){var e=Object(c.b)(),n=e.acceptedFiles,t=e.getRootProps,o=e.getInputProps,a=n.map((function(e){return r.a.createElement("li",{key:e.path},e.path," - ",e.size," bytes")}));return r.a.createElement("section",{className:"container"},r.a.createElement("div",t({className:"dropzone"}),r.a.createElement("input",o()),r.a.createElement("p",null,"Drag 'n' drop some files here, or click to select files")),r.a.createElement("aside",null,r.a.createElement("h6",null,"Files"),r.a.createElement("ul",null,a)))},m=function(e){var n=Object(c.b)({noDragEventsBubbling:!0}).getRootProps;return r.a.createElement("div",n({className:"dropzone"}),r.a.createElement("p",null,"Inner dropzone"))},d=function(e){var n=Object(c.b)({onDrop:function(e){return console.log(e)}}).getRootProps;return r.a.createElement("div",{className:"container"},r.a.createElement("div",n({className:"dropzone"}),r.a.createElement(m,null),r.a.createElement("p",null,"Outer dropzone")))},u=t(8),f={flex:1,display:"flex",flexDirection:"column",alignItems:"center",padding:"20px",borderWidth:2,borderRadius:2,borderColor:"#eeeeee",borderStyle:"dashed",backgroundColor:"#ffffff",color:"#bdbdbd",outline:"none",transition:"border .24s ease-in-out"},g={borderColor:"#2196f3"},b={borderColor:"#00e676"},h={borderColor:"#ff1744"},E=function(e){var n=Object(c.b)({accept:"image/*"}),t=n.getRootProps,a=n.getInputProps,i=n.isDragActive,l=n.isDragAccept,s=n.isDragReject,p=Object(o.useMemo)((function(){return Object(u.a)(Object(u.a)(Object(u.a)(Object(u.a)({},f),i?g:{}),l?b:{}),s?h:{})}),[i,l,s]);return r.a.createElement("div",{className:"container"},r.a.createElement("div",t({style:p}),r.a.createElement("input",a()),r.a.createElement("p",null,"Drag 'n' drop some files here, or click to select files")))},v=function(e){var n=Object(c.b)({accept:"image/jpeg, image/png"}),t=n.acceptedFiles,o=n.rejectedFiles,a=n.getRootProps,i=n.getInputProps,l=t&&t.map((function(e){return r.a.createElement("li",{key:e.path},e.path," - ",e.size," bytes")})),s=o&&o.map((function(e){return r.a.createElement("li",{key:e.path},e.path," - ",e.size," bytes")}));return r.a.createElement("section",{className:"container"},r.a.createElement("div",a({className:"dropzone"}),r.a.createElement("input",i()),r.a.createElement("p",null,"Drag 'n' drop some files here, or click to select files"),r.a.createElement("em",null,"(Only *.jpeg and *.png images will be accepted)")),r.a.createElement("aside",null,r.a.createElement("h4",null,"Accepted files"),r.a.createElement("ul",null,l),r.a.createElement("h4",null,"Rejected files"),r.a.createElement("ul",null,s)))},y=t(495),D=t(67),z=function(e){var n=Object(c.b)({noClick:!0,noKeyboard:!0}),t=n.getRootProps,o=n.getInputProps,a=n.open,i=n.acceptedFiles.map((function(e){return r.a.createElement("li",{key:e.path},e.path," - ",e.size," bytes")}));return r.a.createElement("div",{className:"container"},r.a.createElement(D.a,Object.assign({mb:2},t({className:"dropzone"})),r.a.createElement("input",o()),r.a.createElement(D.a,{component:"p",mb:2},"Drag 'n' drop some files here"),r.a.createElement(y.a,{color:"primary",variant:"contained",onClick:a},"Open File Dialog")),r.a.createElement("aside",null,r.a.createElement("h6",null,"Files"),r.a.createElement("ul",null,i)))},R=t(22),P={display:"flex",flexDirection:"row",flexWrap:"wrap",marginTop:16},x={display:"inline-flex",borderRadius:2,border:"1px solid #eaeaea",marginBottom:8,marginRight:8,width:100,height:100,padding:4,boxSizing:"border-box"},j={display:"flex",minWidth:0,overflow:"hidden"},k={display:"block",width:"auto",height:"100%"},F=function(e){var n=Object(o.useState)([]),t=Object(R.a)(n,2),a=t[0],i=t[1],l=Object(c.b)({accept:"image/*",onDrop:function(e){i(e.map((function(e){return Object.assign(e,{preview:URL.createObjectURL(e)})})))}}),s=l.getRootProps,p=l.getInputProps,m=a.map((function(e){return r.a.createElement("div",{style:x,key:e.name},r.a.createElement("div",{style:j},r.a.createElement("img",{alt:"preview",src:e.preview,style:k})))}));return Object(o.useEffect)((function(){return function(){a.forEach((function(e){return URL.revokeObjectURL(e.preview)}))}}),[a]),r.a.createElement("section",{className:"container"},r.a.createElement("div",s({className:"dropzone"}),r.a.createElement("input",p()),r.a.createElement("p",null,"Drag 'n' drop some files here, or click to select files")),r.a.createElement("aside",{style:P},m))},O=t(313),I=t(314),N=t(316),w=t(315),C=function(e){Object(N.a)(t,e);var n=Object(w.a)(t);function t(){var e;return Object(O.a)(this,t),(e=n.call(this)).onDrop=function(n){e.setState({files:n})},e.state={files:[]},e}return Object(I.a)(t,[{key:"render",value:function(){var e=this.state.files.map((function(e){return r.a.createElement("li",{key:e.name},e.name," - ",e.size," bytes")}));return r.a.createElement(c.a,{onDrop:this.onDrop},(function(n){var t=n.getRootProps,o=n.getInputProps;return r.a.createElement("section",{className:"container"},r.a.createElement("div",t({className:"dropzone"}),r.a.createElement("input",o()),r.a.createElement("p",null,"Drag 'n' drop some files here, or click to select files")),r.a.createElement("aside",null,r.a.createElement("h6",null,"Files"),r.a.createElement("ul",null,e)))}))}}]),t}(o.Component);n.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.a,{title:"React Dropzone",description:"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.",refUrl:"https://react-dropzone.netlify.com/"}),r.a.createElement(s.a,null,r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Basic",component:p,source:"import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst Basic = () => {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h6>Files</h6>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n};\n\nexport default Basic;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Event Propagation",component:d,source:"import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst EventPropagation = (props) => {\n  const {getRootProps} = useDropzone({\n    // Note how this callback is never invoked if drop occurs on the inner dropzone\n    onDrop: (files) => console.log(files),\n  });\n\n  return (\n    <div className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <InnerDropzone />\n        <p>Outer dropzone</p>\n      </div>\n    </div>\n  );\n};\n\nconst InnerDropzone = (props) => {\n  const {getRootProps} = useDropzone({noDragEventsBubbling: true});\n  return (\n    <div {...getRootProps({className: 'dropzone'})}>\n      <p>Inner dropzone</p>\n    </div>\n  );\n};\n\nexport default EventPropagation;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Specific`File Types",component:v,source:"import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst SpecificFileTypes = (props) => {\n  const {\n    acceptedFiles,\n    rejectedFiles,\n    getRootProps,\n    getInputProps,\n  } = useDropzone({\n    accept: 'image/jpeg, image/png',\n  });\n\n  const acceptedFilesItems =\n    acceptedFiles &&\n    acceptedFiles.map((file) => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n\n  const rejectedFilesItems =\n    rejectedFiles &&\n    rejectedFiles.map((file) => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <ul>{acceptedFilesItems}</ul>\n        <h4>Rejected files</h4>\n        <ul>{rejectedFilesItems}</ul>\n      </aside>\n    </section>\n  );\n};\nexport default SpecificFileTypes;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Dialog Programmatically",component:z,source:"import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst DialogProgrammatically = (props) => {\n  const {getRootProps, getInputProps, open, acceptedFiles} = useDropzone({\n    // Disable click and keydown behavior\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <div className='container'>\n      <Box mb={2} {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <Box component='p' mb={2}>\n          Drag 'n' drop some files here\n        </Box>\n        <Button color='primary' variant='contained' onClick={open}>\n          Open File Dialog\n        </Button>\n      </Box>\n      <aside>\n        <h6>Files</h6>\n        <ul>{files}</ul>\n      </aside>\n    </div>\n  );\n};\nexport default DialogProgrammatically;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Styling Dropzone",component:E,source:"import React, {useMemo} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744',\n};\n\nconst StyledDropzone = (props) => {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({accept: 'image/*'});\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragAccept, isDragReject],\n  );\n\n  return (\n    <div className='container'>\n      <div {...getRootProps({style})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledDropzone;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Previews",component:F,source:"import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box',\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n};\n\nconst Previews = (props) => {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        ),\n      );\n    },\n  });\n\n  const thumbs = files.map((file) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img alt='preview' src={file.preview} style={img} />\n      </div>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the db uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files],\n  );\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>{thumbs}</aside>\n    </section>\n  );\n};\n\nexport default Previews;\n"})),r.a.createElement(a.a,{item:!0,xs:12,lg:6},r.a.createElement(i.a,{title:"Class Components",component:C,source:"import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\n\nclass ClassComponents extends Component {\n  constructor() {\n    super();\n    this.onDrop = (files) => {\n      this.setState({files});\n    };\n    this.state = {\n      files: [],\n    };\n  }\n\n  render() {\n    const files = this.state.files.map((file) => (\n      <li key={file.name}>\n        {file.name} - {file.size} bytes\n      </li>\n    ));\n\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <section className='container'>\n            <div {...getRootProps({className: 'dropzone'})}>\n              <input {...getInputProps()} />\n              <p>Drag 'n' drop some files here, or click to select files</p>\n            </div>\n            <aside>\n              <h6>Files</h6>\n              <ul>{files}</ul>\n            </aside>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nexport default ClassComponents;\n"}))))}}}]);
//# sourceMappingURL=173.4b00a2af.chunk.js.map