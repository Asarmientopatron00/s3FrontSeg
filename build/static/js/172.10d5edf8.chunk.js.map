{"version":3,"sources":["modules/thirdParty/reactDropzone/Basic/index.js","modules/thirdParty/reactDropzone/EventPropagation/index.js","modules/thirdParty/reactDropzone/StylingDropzone/index.js","modules/thirdParty/reactDropzone/SpecificFileTypes/index.js","modules/thirdParty/reactDropzone/DialogProgrammatically/index.js","modules/thirdParty/reactDropzone/Previews/index.js","modules/thirdParty/reactDropzone/ClassComponents/index.js","modules/thirdParty/reactDropzone/index.js","webpack:///./src/modules/thirdParty/reactDropzone/Basic/index.js?eaa9","webpack:///./src/modules/thirdParty/reactDropzone/EventPropagation/index.js?c971","webpack:///./src/modules/thirdParty/reactDropzone/SpecificFileTypes/index.js?59a9","webpack:///./src/modules/thirdParty/reactDropzone/DialogProgrammatically/index.js?614c","webpack:///./src/modules/thirdParty/reactDropzone/StylingDropzone/index.js?6267","webpack:///./src/modules/thirdParty/reactDropzone/Previews/index.js?bb73","webpack:///./src/modules/thirdParty/reactDropzone/ClassComponents/index.js?31d5"],"names":["Basic","useDropzone","acceptedFiles","getRootProps","getInputProps","files","map","file","key","path","size","className","InnerDropzone","props","noDragEventsBubbling","EventPropagation","onDrop","console","log","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","accept","isDragActive","isDragAccept","isDragReject","style","useMemo","SpecificFileTypes","rejectedFiles","acceptedFilesItems","rejectedFilesItems","DialogProgrammatically","noClick","noKeyboard","open","Box","mb","component","Button","variant","onClick","thumbsContainer","flexWrap","marginTop","thumb","border","marginBottom","marginRight","width","height","boxSizing","thumbInner","minWidth","overflow","img","Previews","useState","setFiles","Object","assign","preview","URL","createObjectURL","thumbs","name","alt","src","useEffect","forEach","revokeObjectURL","ClassComponents","setState","state","this","Component","ReactDropzone","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source","StylingDropzone"],"mappings":"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","file":"static/js/172.10d5edf8.chunk.js","sourcesContent":["import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst Basic = () => {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h6>Files</h6>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n};\n\nexport default Basic;\n","import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst EventPropagation = (props) => {\n  const {getRootProps} = useDropzone({\n    // Note how this callback is never invoked if drop occurs on the inner dropzone\n    onDrop: (files) => console.log(files),\n  });\n\n  return (\n    <div className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <InnerDropzone />\n        <p>Outer dropzone</p>\n      </div>\n    </div>\n  );\n};\n\nconst InnerDropzone = (props) => {\n  const {getRootProps} = useDropzone({noDragEventsBubbling: true});\n  return (\n    <div {...getRootProps({className: 'dropzone'})}>\n      <p>Inner dropzone</p>\n    </div>\n  );\n};\n\nexport default EventPropagation;\n","import React, {useMemo} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744',\n};\n\nconst StyledDropzone = (props) => {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({accept: 'image/*'});\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragAccept, isDragReject],\n  );\n\n  return (\n    <div className='container'>\n      <div {...getRootProps({style})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledDropzone;\n","import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst SpecificFileTypes = (props) => {\n  const {\n    acceptedFiles,\n    rejectedFiles,\n    getRootProps,\n    getInputProps,\n  } = useDropzone({\n    accept: 'image/jpeg, image/png',\n  });\n\n  const acceptedFilesItems =\n    acceptedFiles &&\n    acceptedFiles.map((file) => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n\n  const rejectedFilesItems =\n    rejectedFiles &&\n    rejectedFiles.map((file) => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <ul>{acceptedFilesItems}</ul>\n        <h4>Rejected files</h4>\n        <ul>{rejectedFilesItems}</ul>\n      </aside>\n    </section>\n  );\n};\nexport default SpecificFileTypes;\n","import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst DialogProgrammatically = (props) => {\n  const {getRootProps, getInputProps, open, acceptedFiles} = useDropzone({\n    // Disable click and keydown behavior\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <div className='container'>\n      <Box mb={2} {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <Box component='p' mb={2}>\n          Drag 'n' drop some files here\n        </Box>\n        <Button color='primary' variant='contained' onClick={open}>\n          Open File Dialog\n        </Button>\n      </Box>\n      <aside>\n        <h6>Files</h6>\n        <ul>{files}</ul>\n      </aside>\n    </div>\n  );\n};\nexport default DialogProgrammatically;\n","import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box',\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n};\n\nconst Previews = (props) => {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        ),\n      );\n    },\n  });\n\n  const thumbs = files.map((file) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img alt='preview' src={file.preview} style={img} />\n      </div>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the db uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files],\n  );\n\n  return (\n    <section className='container'>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>{thumbs}</aside>\n    </section>\n  );\n};\n\nexport default Previews;\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\n\nclass ClassComponents extends Component {\n  constructor() {\n    super();\n    this.onDrop = (files) => {\n      this.setState({files});\n    };\n    this.state = {\n      files: [],\n    };\n  }\n\n  render() {\n    const files = this.state.files.map((file) => (\n      <li key={file.name}>\n        {file.name} - {file.size} bytes\n      </li>\n    ));\n\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <section className='container'>\n            <div {...getRootProps({className: 'dropzone'})}>\n              <input {...getInputProps()} />\n              <p>Drag 'n' drop some files here, or click to select files</p>\n            </div>\n            <aside>\n              <h6>Files</h6>\n              <ul>{files}</ul>\n            </aside>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nexport default ClassComponents;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport Basic from './Basic';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BasicSource from '!raw-loader!./Basic';\nimport EventPropagation from './EventPropagation';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport EventPropagationSource from '!raw-loader!./EventPropagation';\nimport StylingDropzone from './StylingDropzone';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport StylingDropzoneSource from '!raw-loader!./StylingDropzone';\nimport SpecificFileTypes from './SpecificFileTypes';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SpecificFileTypesSource from '!raw-loader!./SpecificFileTypes';\nimport DialogProgrammatically from './DialogProgrammatically';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport DialogProgrammaticallySource from '!raw-loader!./DialogProgrammatically';\nimport Previews from './Previews';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PreviewsSource from '!raw-loader!./Previews';\nimport ClassComponents from './ClassComponents';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ClassComponentsSource from '!raw-loader!./ClassComponents';\n\nconst ReactDropzone = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='React Dropzone'\n        description=\"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.\"\n        refUrl='https://react-dropzone.netlify.com/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Basic' component={Basic} source={BasicSource} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Event Propagation'\n            component={EventPropagation}\n            source={EventPropagationSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Specific`File Types'\n            component={SpecificFileTypes}\n            source={SpecificFileTypesSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Dialog Programmatically'\n            component={DialogProgrammatically}\n            source={DialogProgrammaticallySource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Styling Dropzone'\n            component={StylingDropzone}\n            source={StylingDropzoneSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Previews'\n            component={Previews}\n            source={PreviewsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Class Components'\n            component={ClassComponents}\n            source={ClassComponentsSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ReactDropzone;\n","export default \"import React from 'react';\\nimport {useDropzone} from 'react-dropzone';\\n\\nconst Basic = () => {\\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\\n\\n  const files = acceptedFiles.map((file) => (\\n    <li key={file.path}>\\n      {file.path} - {file.size} bytes\\n    </li>\\n  ));\\n\\n  return (\\n    <section className='container'>\\n      <div {...getRootProps({className: 'dropzone'})}>\\n        <input {...getInputProps()} />\\n        <p>Drag 'n' drop some files here, or click to select files</p>\\n      </div>\\n      <aside>\\n        <h6>Files</h6>\\n        <ul>{files}</ul>\\n      </aside>\\n    </section>\\n  );\\n};\\n\\nexport default Basic;\\n\";","export default \"import React from 'react';\\nimport {useDropzone} from 'react-dropzone';\\n\\nconst EventPropagation = (props) => {\\n  const {getRootProps} = useDropzone({\\n    // Note how this callback is never invoked if drop occurs on the inner dropzone\\n    onDrop: (files) => console.log(files),\\n  });\\n\\n  return (\\n    <div className='container'>\\n      <div {...getRootProps({className: 'dropzone'})}>\\n        <InnerDropzone />\\n        <p>Outer dropzone</p>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nconst InnerDropzone = (props) => {\\n  const {getRootProps} = useDropzone({noDragEventsBubbling: true});\\n  return (\\n    <div {...getRootProps({className: 'dropzone'})}>\\n      <p>Inner dropzone</p>\\n    </div>\\n  );\\n};\\n\\nexport default EventPropagation;\\n\";","export default \"import React from 'react';\\nimport {useDropzone} from 'react-dropzone';\\n\\nconst SpecificFileTypes = (props) => {\\n  const {\\n    acceptedFiles,\\n    rejectedFiles,\\n    getRootProps,\\n    getInputProps,\\n  } = useDropzone({\\n    accept: 'image/jpeg, image/png',\\n  });\\n\\n  const acceptedFilesItems =\\n    acceptedFiles &&\\n    acceptedFiles.map((file) => (\\n      <li key={file.path}>\\n        {file.path} - {file.size} bytes\\n      </li>\\n    ));\\n\\n  const rejectedFilesItems =\\n    rejectedFiles &&\\n    rejectedFiles.map((file) => (\\n      <li key={file.path}>\\n        {file.path} - {file.size} bytes\\n      </li>\\n    ));\\n\\n  return (\\n    <section className='container'>\\n      <div {...getRootProps({className: 'dropzone'})}>\\n        <input {...getInputProps()} />\\n        <p>Drag 'n' drop some files here, or click to select files</p>\\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\\n      </div>\\n      <aside>\\n        <h4>Accepted files</h4>\\n        <ul>{acceptedFilesItems}</ul>\\n        <h4>Rejected files</h4>\\n        <ul>{rejectedFilesItems}</ul>\\n      </aside>\\n    </section>\\n  );\\n};\\nexport default SpecificFileTypes;\\n\";","export default \"import React from 'react';\\nimport {useDropzone} from 'react-dropzone';\\nimport Button from '@material-ui/core/Button';\\nimport Box from '@material-ui/core/Box';\\n\\nconst DialogProgrammatically = (props) => {\\n  const {getRootProps, getInputProps, open, acceptedFiles} = useDropzone({\\n    // Disable click and keydown behavior\\n    noClick: true,\\n    noKeyboard: true,\\n  });\\n\\n  const files = acceptedFiles.map((file) => (\\n    <li key={file.path}>\\n      {file.path} - {file.size} bytes\\n    </li>\\n  ));\\n\\n  return (\\n    <div className='container'>\\n      <Box mb={2} {...getRootProps({className: 'dropzone'})}>\\n        <input {...getInputProps()} />\\n        <Box component='p' mb={2}>\\n          Drag 'n' drop some files here\\n        </Box>\\n        <Button color='primary' variant='contained' onClick={open}>\\n          Open File Dialog\\n        </Button>\\n      </Box>\\n      <aside>\\n        <h6>Files</h6>\\n        <ul>{files}</ul>\\n      </aside>\\n    </div>\\n  );\\n};\\nexport default DialogProgrammatically;\\n\";","export default \"import React, {useMemo} from 'react';\\nimport {useDropzone} from 'react-dropzone';\\n\\nconst baseStyle = {\\n  flex: 1,\\n  display: 'flex',\\n  flexDirection: 'column',\\n  alignItems: 'center',\\n  padding: '20px',\\n  borderWidth: 2,\\n  borderRadius: 2,\\n  borderColor: '#eeeeee',\\n  borderStyle: 'dashed',\\n  backgroundColor: '#ffffff',\\n  color: '#bdbdbd',\\n  outline: 'none',\\n  transition: 'border .24s ease-in-out',\\n};\\n\\nconst activeStyle = {\\n  borderColor: '#2196f3',\\n};\\n\\nconst acceptStyle = {\\n  borderColor: '#00e676',\\n};\\n\\nconst rejectStyle = {\\n  borderColor: '#ff1744',\\n};\\n\\nconst StyledDropzone = (props) => {\\n  const {\\n    getRootProps,\\n    getInputProps,\\n    isDragActive,\\n    isDragAccept,\\n    isDragReject,\\n  } = useDropzone({accept: 'image/*'});\\n\\n  const style = useMemo(\\n    () => ({\\n      ...baseStyle,\\n      ...(isDragActive ? activeStyle : {}),\\n      ...(isDragAccept ? acceptStyle : {}),\\n      ...(isDragReject ? rejectStyle : {}),\\n    }),\\n    [isDragActive, isDragAccept, isDragReject],\\n  );\\n\\n  return (\\n    <div className='container'>\\n      <div {...getRootProps({style})}>\\n        <input {...getInputProps()} />\\n        <p>Drag 'n' drop some files here, or click to select files</p>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default StyledDropzone;\\n\";","export default \"import React, {useEffect, useState} from 'react';\\nimport {useDropzone} from 'react-dropzone';\\n\\nconst thumbsContainer = {\\n  display: 'flex',\\n  flexDirection: 'row',\\n  flexWrap: 'wrap',\\n  marginTop: 16,\\n};\\n\\nconst thumb = {\\n  display: 'inline-flex',\\n  borderRadius: 2,\\n  border: '1px solid #eaeaea',\\n  marginBottom: 8,\\n  marginRight: 8,\\n  width: 100,\\n  height: 100,\\n  padding: 4,\\n  boxSizing: 'border-box',\\n};\\n\\nconst thumbInner = {\\n  display: 'flex',\\n  minWidth: 0,\\n  overflow: 'hidden',\\n};\\n\\nconst img = {\\n  display: 'block',\\n  width: 'auto',\\n  height: '100%',\\n};\\n\\nconst Previews = (props) => {\\n  const [files, setFiles] = useState([]);\\n  const {getRootProps, getInputProps} = useDropzone({\\n    accept: 'image/*',\\n    onDrop: (acceptedFiles) => {\\n      setFiles(\\n        acceptedFiles.map((file) =>\\n          Object.assign(file, {\\n            preview: URL.createObjectURL(file),\\n          }),\\n        ),\\n      );\\n    },\\n  });\\n\\n  const thumbs = files.map((file) => (\\n    <div style={thumb} key={file.name}>\\n      <div style={thumbInner}>\\n        <img alt='preview' src={file.preview} style={img} />\\n      </div>\\n    </div>\\n  ));\\n\\n  useEffect(\\n    () => () => {\\n      // Make sure to revoke the db uris to avoid memory leaks\\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\\n    },\\n    [files],\\n  );\\n\\n  return (\\n    <section className='container'>\\n      <div {...getRootProps({className: 'dropzone'})}>\\n        <input {...getInputProps()} />\\n        <p>Drag 'n' drop some files here, or click to select files</p>\\n      </div>\\n      <aside style={thumbsContainer}>{thumbs}</aside>\\n    </section>\\n  );\\n};\\n\\nexport default Previews;\\n\";","export default \"import React, {Component} from 'react';\\nimport Dropzone from 'react-dropzone';\\n\\nclass ClassComponents extends Component {\\n  constructor() {\\n    super();\\n    this.onDrop = (files) => {\\n      this.setState({files});\\n    };\\n    this.state = {\\n      files: [],\\n    };\\n  }\\n\\n  render() {\\n    const files = this.state.files.map((file) => (\\n      <li key={file.name}>\\n        {file.name} - {file.size} bytes\\n      </li>\\n    ));\\n\\n    return (\\n      <Dropzone onDrop={this.onDrop}>\\n        {({getRootProps, getInputProps}) => (\\n          <section className='container'>\\n            <div {...getRootProps({className: 'dropzone'})}>\\n              <input {...getInputProps()} />\\n              <p>Drag 'n' drop some files here, or click to select files</p>\\n            </div>\\n            <aside>\\n              <h6>Files</h6>\\n              <ul>{files}</ul>\\n            </aside>\\n          </section>\\n        )}\\n      </Dropzone>\\n    );\\n  }\\n}\\n\\nexport default ClassComponents;\\n\";"],"sourceRoot":""}