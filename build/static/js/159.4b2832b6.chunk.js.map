{"version":3,"sources":["modules/muiComponents/util/Rating/SimpleRatings.js","webpack:///./src/modules/muiComponents/util/Rating/SimpleRatings.js?526e","modules/muiComponents/util/Rating/CustomizedRatings.js","webpack:///./src/modules/muiComponents/util/Rating/CustomizedRatings.js?0702","modules/muiComponents/util/Rating/HoverFeedback.js","webpack:///./src/modules/muiComponents/util/Rating/HoverFeedback.js?969d","modules/muiComponents/util/Rating/HalfRating.js","modules/muiComponents/util/Rating/index.js","webpack:///./src/modules/muiComponents/util/Rating/HalfRating.js?8453"],"names":["SimpleRating","React","useState","value","setValue","Box","component","mb","borderColor","Typography","Rating","name","onChange","event","newValue","readOnly","disabled","StyledRating","withStyles","iconFilled","color","iconHover","getLabelText","CustomizedRatings","precision","emptyIcon","fontSize","icon","max","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","IconContainer","props","other","Tooltip","title","useStyles","makeStyles","rating1","width","display","alignItems","HoverRating","hover","setHover","classes","className","onChangeActive","newHover","ml","IconContainerComponent","HalfRating","Ratings","ComponentHeader","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","SimpleRatings","source","HoverFeedback","HoverFeedbacksSource"],"mappings":"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","file":"static/js/159.4b2832b6.chunk.js","sourcesContent":["import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function SimpleRating() {\n  const [value, setValue] = React.useState(2);\n\n  return (\n    <div>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Controlled</Typography>\n        <Rating\n          name='simple-controlled'\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n        />\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Read only</Typography>\n        <Rating value={value} readOnly />\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Disabled</Typography>\n        <Rating name='disabled' value={value} disabled />\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Pristine</Typography>\n        <Rating name='pristine' value={null} />\n      </Box>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Rating from '@material-ui/lab/Rating';\\nimport Typography from '@material-ui/core/Typography';\\nimport Box from '@material-ui/core/Box';\\n\\nexport default function SimpleRating() {\\n  const [value, setValue] = React.useState(2);\\n\\n  return (\\n    <div>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Controlled</Typography>\\n        <Rating\\n          name='simple-controlled'\\n          value={value}\\n          onChange={(event, newValue) => {\\n            setValue(newValue);\\n          }}\\n        />\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Read only</Typography>\\n        <Rating value={value} readOnly />\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Disabled</Typography>\\n        <Rating name='disabled' value={value} disabled />\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Pristine</Typography>\\n        <Rating name='pristine' value={null} />\\n      </Box>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n})(Rating);\n\nfunction getLabelText(value) {\n  return `${value} Heart${value !== 1 ? 's' : ''}`;\n}\n\nexport default function CustomizedRatings() {\n  return (\n    <div>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Custom empty icon</Typography>\n        <Rating\n          name='customized-empty'\n          value={2}\n          precision={0.5}\n          emptyIcon={<StarBorderIcon fontSize='inherit' />}\n        />\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Custom icon and color</Typography>\n        <StyledRating\n          name='customized-color'\n          value={2}\n          getLabelText={getLabelText}\n          precision={0.5}\n          icon={<FavoriteIcon fontSize='inherit' />}\n        />\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>10 stars</Typography>\n        <Rating name='customized-10' value={2} max={10} />\n      </Box>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Rating from '@material-ui/lab/Rating';\\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\\nimport FavoriteIcon from '@material-ui/icons/Favorite';\\nimport Typography from '@material-ui/core/Typography';\\nimport Box from '@material-ui/core/Box';\\n\\nconst StyledRating = withStyles({\\n  iconFilled: {\\n    color: '#ff6d75',\\n  },\\n  iconHover: {\\n    color: '#ff3d47',\\n  },\\n})(Rating);\\n\\nfunction getLabelText(value) {\\n  return `${value} Heart${value !== 1 ? 's' : ''}`;\\n}\\n\\nexport default function CustomizedRatings() {\\n  return (\\n    <div>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Custom empty icon</Typography>\\n        <Rating\\n          name='customized-empty'\\n          value={2}\\n          precision={0.5}\\n          emptyIcon={<StarBorderIcon fontSize='inherit' />}\\n        />\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Custom icon and color</Typography>\\n        <StyledRating\\n          name='customized-color'\\n          value={2}\\n          getLabelText={getLabelText}\\n          precision={0.5}\\n          icon={<FavoriteIcon fontSize='inherit' />}\\n        />\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>10 stars</Typography>\\n        <Rating name='customized-10' value={2} max={10} />\\n      </Box>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst labels = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+',\n};\n\nfunction IconContainer(props) {\n  const {value, ...other} = props;\n  return (\n    <Tooltip title={labels[value] || ''}>\n      <div {...other} />\n    </Tooltip>\n  );\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles({\n  rating1: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default function HoverRating() {\n  const value = 2;\n  const [hover, setHover] = React.useState(-1);\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Side</Typography>\n        <div className={classes.rating1}>\n          <Rating\n            name='hover-side'\n            value={value}\n            precision={0.5}\n            onChangeActive={(event, newHover) => {\n              setHover(newHover);\n            }}\n          />\n          <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>\n        </div>\n      </Box>\n      <Box component='fieldset' mb={3} borderColor='transparent'>\n        <Typography component='legend'>Tooltip</Typography>\n        <Rating\n          name='hover-tooltip'\n          value={value}\n          precision={0.5}\n          IconContainerComponent={IconContainer}\n        />\n      </Box>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Rating from '@material-ui/lab/Rating';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport Typography from '@material-ui/core/Typography';\\nimport Box from '@material-ui/core/Box';\\n\\nconst labels = {\\n  0.5: 'Useless',\\n  1: 'Useless+',\\n  1.5: 'Poor',\\n  2: 'Poor+',\\n  2.5: 'Ok',\\n  3: 'Ok+',\\n  3.5: 'Good',\\n  4: 'Good+',\\n  4.5: 'Excellent',\\n  5: 'Excellent+',\\n};\\n\\nfunction IconContainer(props) {\\n  const {value, ...other} = props;\\n  return (\\n    <Tooltip title={labels[value] || ''}>\\n      <div {...other} />\\n    </Tooltip>\\n  );\\n}\\n\\nIconContainer.propTypes = {\\n  value: PropTypes.number.isRequired,\\n};\\n\\nconst useStyles = makeStyles({\\n  rating1: {\\n    width: 200,\\n    display: 'flex',\\n    alignItems: 'center',\\n  },\\n});\\n\\nexport default function HoverRating() {\\n  const value = 2;\\n  const [hover, setHover] = React.useState(-1);\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Side</Typography>\\n        <div className={classes.rating1}>\\n          <Rating\\n            name='hover-side'\\n            value={value}\\n            precision={0.5}\\n            onChangeActive={(event, newHover) => {\\n              setHover(newHover);\\n            }}\\n          />\\n          <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>\\n        </div>\\n      </Box>\\n      <Box component='fieldset' mb={3} borderColor='transparent'>\\n        <Typography component='legend'>Tooltip</Typography>\\n        <Rating\\n          name='hover-tooltip'\\n          value={value}\\n          precision={0.5}\\n          IconContainerComponent={IconContainer}\\n        />\\n      </Box>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\n\nexport default function HalfRating() {\n  return (\n    <div>\n      <Rating name='half-rating' value={2.5} precision={0.5} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleRatings from './SimpleRatings';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleRatingsSource from '!raw-loader!./SimpleRatings';\nimport CustomizedRatings from './CustomizedRatings';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedRatingsSource from '!raw-loader!./CustomizedRatings';\nimport HoverFeedback from './HoverFeedback';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport HoverFeedbacksSource from '!raw-loader!./HoverFeedback';\nimport HalfRating from './HalfRating';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport HalfRatingSource from '!raw-loader!./HalfRating';\n\nconst Ratings = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Rating'\n        description='Ratings provide insight regarding others’ opinions and experiences with a product. Users can also rate products they’ve purchased.'\n        refUrl='https://material-ui.com/components/rating/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple ratings'\n            component={SimpleRatings}\n            source={SimpleRatingsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized ratings'\n            component={CustomizedRatings}\n            source={CustomizedRatingsSource}\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Hover feedback'\n            component={HoverFeedback}\n            source={HoverFeedbacksSource}\n            description='You can display a label on hover to help users pick the correct rating value. The first demo uses the onChangeActive prop while the last one uses the IconContainerComponent prop.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Sizes ratings'\n            component={HoverFeedback}\n            source={HoverFeedbacksSource}\n            description='Fancy larger or smaller ratings? Use the size prop.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Half ratings'\n            component={HalfRating}\n            source={HalfRatingSource}\n            description='The rating can display any float number with the value prop. Use the precision prop to define the minimum increment value change allowed.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Ratings;\n","export default \"import React from 'react';\\nimport Rating from '@material-ui/lab/Rating';\\n\\nexport default function HalfRating() {\\n  return (\\n    <div>\\n      <Rating name='half-rating' value={2.5} precision={0.5} />\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}