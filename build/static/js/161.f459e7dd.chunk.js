(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[161],{3132:function(n,e,o){"use strict";o.r(e);var t=o(0),a=o.n(t),r=o(1086),i=o(306),l=o(304),c=o(303),p=o(22),m=o(164),s=o(1075),h=o(114),u=o(499),d=Object(m.a)((function(n){return{typography:{padding:n.spacing(2)}}}));function v(){var n=d(),e=a.a.useState(null),o=Object(p.a)(e,2),t=o[0],r=o[1];var i=Boolean(t),l=i?"simple-popover":void 0;return a.a.createElement("div",null,a.a.createElement(u.a,{"aria-describedby":l,variant:"contained",onClick:function(n){r(n.currentTarget)}},"Open Popover"),a.a.createElement(s.a,{id:l,open:i,anchorEl:t,onClose:function(){r(null)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},a.a.createElement(h.a,{className:n.typography},"The content of the Popover.")))}var g=o(2),f=o(312),b=o(313),E=o(315),O=o(314),C=o(34),y=o(1337),P=o(1258),R=o(1477),F=o(1346),L=o(1295),T=o(1433),z=o(1437),S=o(67),H=function(n){Object(E.a)(o,n);var e=Object(O.a)(o);function o(){var n;Object(f.a)(this,o);for(var t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(n=e.call.apply(e,[this].concat(a))).state={open:!1,anchorEl:null,anchorOriginVertical:"bottom",anchorOriginHorizontal:"center",transformOriginVertical:"top",transformOriginHorizontal:"center",positionTop:200,positionLeft:400,anchorReference:"anchorEl"},n.button=null,n.handleChange=function(e){return function(o,t){n.setState(Object(g.a)({},e,t))}},n.handleNumberInputChange=function(e){return function(o){n.setState(Object(g.a)({},e,parseInt(o.target.value,10)))}},n.handleClickButton=function(){n.setState({open:!0,anchorEl:Object(C.findDOMNode)(n.button)})},n.handleRequestClose=function(){n.setState({open:!1})},n}return Object(b.a)(o,[{key:"render",value:function(){var n=this,e=this.state,o=e.open,t=e.anchorEl,i=e.anchorOriginVertical,l=e.anchorOriginHorizontal,c=e.transformOriginVertical,p=e.transformOriginHorizontal,m=e.positionTop,h=e.positionLeft,d=e.anchorReference;return a.a.createElement("div",null,a.a.createElement(S.a,{mb:5,clone:!0},a.a.createElement(u.a,{ref:function(e){n.button=e},variant:"contained",onClick:this.handleClickButton},"Open Popover")),a.a.createElement(s.a,{open:o,anchorEl:t,anchorReference:d,anchorPosition:{top:m,left:h},onClose:this.handleRequestClose,anchorOrigin:{vertical:i,horizontal:l},transformOrigin:{vertical:c,horizontal:p}},a.a.createElement(S.a,{component:"p",m:3},"The content of the Popover.")),a.a.createElement(r.a,{container:!0},a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,{component:"fieldset"},a.a.createElement(R.a,{component:"legend"},"Anchor Reference"),a.a.createElement(L.a,{row:!0,"aria-label":"anchorReference",name:"anchorReference",value:this.state.anchorReference,onChange:this.handleChange("anchorReference")},a.a.createElement(P.a,{value:"anchorEl",control:a.a.createElement(F.a,null),label:"Anchor El"}),a.a.createElement(P.a,{value:"anchorPosition",control:a.a.createElement(F.a,null),label:"Anchor Position"})))),a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,null,a.a.createElement(z.a,{htmlFor:"position-top"},"Anchor Position Top"),a.a.createElement(T.a,{id:"position-top",type:"number",value:this.state.positionTop,onChange:this.handleNumberInputChange("positionTop")})),"\xa0",a.a.createElement(y.a,null,a.a.createElement(z.a,{htmlFor:"position-left"},"Anchor Position Left"),a.a.createElement(T.a,{id:"position-left",type:"number",value:this.state.positionLeft,onChange:this.handleNumberInputChange("positionLeft")}))),a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,{component:"fieldset"},a.a.createElement(R.a,{component:"legend"},"Anchor Origin Vertical"),a.a.createElement(L.a,{"aria-label":"anchorOriginVertical",name:"anchorOriginVertical",value:this.state.anchorOriginVertical,onChange:this.handleChange("anchorOriginVertical")},a.a.createElement(P.a,{value:"top",control:a.a.createElement(F.a,null),label:"Top"}),a.a.createElement(P.a,{value:"center",control:a.a.createElement(F.a,null),label:"Center"}),a.a.createElement(P.a,{value:"bottom",control:a.a.createElement(F.a,null),label:"Bottom"})))),a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,{component:"fieldset"},a.a.createElement(R.a,{component:"legend"},"Transform Origin Vertical"),a.a.createElement(L.a,{"aria-label":"transformOriginVertical",name:"transformOriginVertical",value:this.state.transformOriginVertical,onChange:this.handleChange("transformOriginVertical")},a.a.createElement(P.a,{value:"top",control:a.a.createElement(F.a,null),label:"Top"}),a.a.createElement(P.a,{value:"center",control:a.a.createElement(F.a,null),label:"Center"}),a.a.createElement(P.a,{value:"bottom",control:a.a.createElement(F.a,null),label:"Bottom"})))),a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,{component:"fieldset"},a.a.createElement(R.a,{component:"legend"},"Anchor Origin Horizontal"),a.a.createElement(L.a,{row:!0,"aria-label":"anchorOriginHorizontal",name:"anchorOriginHorizontal",value:this.state.anchorOriginHorizontal,onChange:this.handleChange("anchorOriginHorizontal")},a.a.createElement(P.a,{value:"left",control:a.a.createElement(F.a,null),label:"Left"}),a.a.createElement(P.a,{value:"center",control:a.a.createElement(F.a,null),label:"Center"}),a.a.createElement(P.a,{value:"right",control:a.a.createElement(F.a,null),label:"Right"})))),a.a.createElement(r.a,{item:!0,xs:12,sm:6},a.a.createElement(y.a,{component:"fieldset"},a.a.createElement(R.a,{component:"legend"},"Transform Origin Horizontal"),a.a.createElement(L.a,{row:!0,"aria-label":"transformOriginHorizontal",name:"transformOriginHorizontal",value:this.state.transformOriginHorizontal,onChange:this.handleChange("transformOriginHorizontal")},a.a.createElement(P.a,{value:"left",control:a.a.createElement(F.a,null),label:"Left"}),a.a.createElement(P.a,{value:"center",control:a.a.createElement(F.a,null),label:"Center"}),a.a.createElement(P.a,{value:"right",control:a.a.createElement(F.a,null),label:"Right"}))))))}}]),o}(a.a.Component),B=Object(m.a)((function(n){return{popover:{pointerEvents:"none"},paper:{padding:n.spacing(1)}}}));function V(){var n=B(),e=a.a.useState(null),o=Object(p.a)(e,2),t=o[0],r=o[1];function i(){r(null)}var l=Boolean(t);return a.a.createElement("div",null,a.a.createElement(h.a,{"aria-owns":l?"mouse-over-popover":void 0,"aria-haspopup":"true",onMouseEnter:function(n){r(n.currentTarget)},onMouseLeave:i},"Hover with a Popover."),a.a.createElement(s.a,{id:"mouse-over-popover",className:n.popover,classes:{paper:n.paper},open:l,anchorEl:t,anchorOrigin:{vertical:"bottom",horizontal:"left"},transformOrigin:{vertical:"top",horizontal:"left"},onClose:i,disableRestoreFocus:!0},a.a.createElement(h.a,null,"I use Popover.")))}var k=o(1751),G=o.n(k),x=Object(m.a)((function(n){return{typography:{margin:n.spacing(2)}}}));function A(){var n=x();return a.a.createElement(G.a,{variant:"popover",popupId:"demo-popup-popover"},(function(e){return a.a.createElement("div",null,a.a.createElement(u.a,Object.assign({variant:"contained"},Object(k.bindTrigger)(e)),"Open Popover"),a.a.createElement(s.a,Object.assign({},Object(k.bindPopover)(e),{anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}}),a.a.createElement(h.a,{className:n.typography},"The content of the Popover.")))}))}e.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.a,{title:"Popover",description:"A Popover can be used to display some content on top of another.",refUrl:"https://material-ui.com/components/popover/"}),a.a.createElement(c.a,null,a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Simple Popover",component:v,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\n        Open Popover\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}>\n        <Typography className={classes.typography}>\n          The content of the Popover.\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n",description:"The scroll and click away are blocked unlike with the Popper component."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Mouse over interaction",component:V,source:"import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MouseOverPopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handlePopoverOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handlePopoverClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <Typography\n        aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup='true'\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}>\n        Hover with a Popover.\n      </Typography>\n      <Popover\n        id='mouse-over-popover'\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus>\n        <Typography>I use Popover.</Typography>\n      </Popover>\n    </div>\n  );\n}\n",description:"This demonstrates how to use the Popover component to implement a popover behavior based on the mouse over event."})),a.a.createElement(r.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Anchor playground",component:H,source:"import React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Box from '@material-ui/core/Box';\n\nclass AnchorPlayground extends React.Component {\n  state = {\n    open: false,\n    anchorEl: null,\n    anchorOriginVertical: 'bottom',\n    anchorOriginHorizontal: 'center',\n    transformOriginVertical: 'top',\n    transformOriginHorizontal: 'center',\n    positionTop: 200, // Just so the popover can be spotted more easily\n    positionLeft: 400, // Same as above\n    anchorReference: 'anchorEl',\n  };\n  button = null;\n\n  handleChange = (key) => (event, value) => {\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  handleNumberInputChange = (key) => (event) => {\n    this.setState({\n      [key]: parseInt(event.target.value, 10),\n    });\n  };\n\n  handleClickButton = () => {\n    this.setState({\n      open: true,\n      anchorEl: findDOMNode(this.button),\n    });\n  };\n\n  handleRequestClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    const {\n      open,\n      anchorEl,\n      anchorOriginVertical,\n      anchorOriginHorizontal,\n      transformOriginVertical,\n      transformOriginHorizontal,\n      positionTop,\n      positionLeft,\n      anchorReference,\n    } = this.state;\n\n    return (\n      <div>\n        <Box mb={5} clone>\n          <Button\n            ref={(node) => {\n              this.button = node;\n            }}\n            variant='contained'\n            onClick={this.handleClickButton}>\n            Open Popover\n          </Button>\n        </Box>\n        <Popover\n          open={open}\n          anchorEl={anchorEl}\n          anchorReference={anchorReference}\n          anchorPosition={{top: positionTop, left: positionLeft}}\n          onClose={this.handleRequestClose}\n          anchorOrigin={{\n            vertical: anchorOriginVertical,\n            horizontal: anchorOriginHorizontal,\n          }}\n          transformOrigin={{\n            vertical: transformOriginVertical,\n            horizontal: transformOriginHorizontal,\n          }}>\n          <Box component='p' m={3}>\n            The content of the Popover.\n          </Box>\n        </Popover>\n        <Grid container>\n          <Grid item xs={12} sm={6}>\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>Anchor Reference</FormLabel>\n              <RadioGroup\n                row\n                aria-label='anchorReference'\n                name='anchorReference'\n                value={this.state.anchorReference}\n                onChange={this.handleChange('anchorReference')}>\n                <FormControlLabel\n                  value='anchorEl'\n                  control={<Radio />}\n                  label='Anchor El'\n                />\n                <FormControlLabel\n                  value='anchorPosition'\n                  control={<Radio />}\n                  label='Anchor Position'\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl>\n              <InputLabel htmlFor='position-top'>\n                Anchor Position Top\n              </InputLabel>\n              <Input\n                id='position-top'\n                type='number'\n                value={this.state.positionTop}\n                onChange={this.handleNumberInputChange('positionTop')}\n              />\n            </FormControl>\n            &nbsp;\n            <FormControl>\n              <InputLabel htmlFor='position-left'>\n                Anchor Position Left\n              </InputLabel>\n              <Input\n                id='position-left'\n                type='number'\n                value={this.state.positionLeft}\n                onChange={this.handleNumberInputChange('positionLeft')}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>Anchor Origin Vertical</FormLabel>\n              <RadioGroup\n                aria-label='anchorOriginVertical'\n                name='anchorOriginVertical'\n                value={this.state.anchorOriginVertical}\n                onChange={this.handleChange('anchorOriginVertical')}>\n                <FormControlLabel value='top' control={<Radio />} label='Top' />\n                <FormControlLabel\n                  value='center'\n                  control={<Radio />}\n                  label='Center'\n                />\n                <FormControlLabel\n                  value='bottom'\n                  control={<Radio />}\n                  label='Bottom'\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>\n                Transform Origin Vertical\n              </FormLabel>\n              <RadioGroup\n                aria-label='transformOriginVertical'\n                name='transformOriginVertical'\n                value={this.state.transformOriginVertical}\n                onChange={this.handleChange('transformOriginVertical')}>\n                <FormControlLabel value='top' control={<Radio />} label='Top' />\n                <FormControlLabel\n                  value='center'\n                  control={<Radio />}\n                  label='Center'\n                />\n                <FormControlLabel\n                  value='bottom'\n                  control={<Radio />}\n                  label='Bottom'\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>Anchor Origin Horizontal</FormLabel>\n              <RadioGroup\n                row\n                aria-label='anchorOriginHorizontal'\n                name='anchorOriginHorizontal'\n                value={this.state.anchorOriginHorizontal}\n                onChange={this.handleChange('anchorOriginHorizontal')}>\n                <FormControlLabel\n                  value='left'\n                  control={<Radio />}\n                  label='Left'\n                />\n                <FormControlLabel\n                  value='center'\n                  control={<Radio />}\n                  label='Center'\n                />\n                <FormControlLabel\n                  value='right'\n                  control={<Radio />}\n                  label='Right'\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>\n                Transform Origin Horizontal\n              </FormLabel>\n              <RadioGroup\n                row\n                aria-label='transformOriginHorizontal'\n                name='transformOriginHorizontal'\n                value={this.state.transformOriginHorizontal}\n                onChange={this.handleChange('transformOriginHorizontal')}>\n                <FormControlLabel\n                  value='left'\n                  control={<Radio />}\n                  label='Left'\n                />\n                <FormControlLabel\n                  value='center'\n                  control={<Radio />}\n                  label='Center'\n                />\n                <FormControlLabel\n                  value='right'\n                  control={<Radio />}\n                  label='Right'\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AnchorPlayground;\n",description:"Use the radio buttons to adjust the anchorOrigin and transformOrigin positions. You can also set the anchorReference to anchorPosition or anchorEl. When it is anchorPosition, the component will, instead of anchorEl, refer to the anchorPosition prop which you can adjust to set the position of the popover."})),a.a.createElement(r.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"PopupState helper",component:A,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport PopupState, {bindPopover, bindTrigger} from 'material-ui-popup-state';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function PopoverPopupState() {\n  const classes = useStyles();\n\n  return (\n    <PopupState variant='popover' popupId='demo-popup-popover'>\n      {(popupState) => (\n        <div>\n          <Button variant='contained' {...bindTrigger(popupState)}>\n            Open Popover\n          </Button>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}>\n            <Typography className={classes.typography}>\n              The content of the Popover.\n            </Typography>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n}\n",description:"There is a 3rd party package material-ui-popup-state that takes care of popover state for you in most cases."}))))}}}]);
//# sourceMappingURL=161.f459e7dd.chunk.js.map