{"version":3,"sources":["@crema/core/AppCard/index.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppAnimateGroup/index.js","@crema/core/AppSelect/index.js","@crema/core/AppTableContainer/index.js","modules/dashboard/HealthCare/DrCard/index.js","modules/dashboard/HealthCare/HealthStatics/StaticsGraph.js","modules/dashboard/HealthCare/HealthStatics/index.js","modules/dashboard/HealthCare/NewPatients/PatientGraph.js","@crema/core/AppMenu/index.js","modules/dashboard/HealthCare/NewPatients/index.js","modules/dashboard/HealthCare/CancelVisits/VisitsGraph.js","modules/dashboard/HealthCare/CancelVisits/index.js","modules/dashboard/HealthCare/TopDoctors/DoctorCell.js","modules/dashboard/HealthCare/TopDoctors/index.js","modules/dashboard/HealthCare/UpcomingAppointments/AppointmentCell.js","modules/dashboard/HealthCare/UpcomingAppointments/index.js","modules/dashboard/HealthCare/Notifications/NotificationCell.js","modules/dashboard/HealthCare/Notifications/index.js","modules/dashboard/HealthCare/HospitalStatics/index.js","modules/dashboard/HealthCare/RecentPatients/PatientsTable/TableHeading.js","modules/dashboard/HealthCare/RecentPatients/PatientsTable/TableItem.style.js","modules/dashboard/HealthCare/RecentPatients/PatientsTable/TableItem.js","modules/dashboard/HealthCare/RecentPatients/PatientsTable/index.js","modules/dashboard/HealthCare/RecentPatients/index.js","modules/dashboard/HealthCare/InfoWidget/index.js","modules/dashboard/HealthCare/HospitalActivity/StatGraphs.js","modules/dashboard/HealthCare/HospitalActivity/index.js","modules/dashboard/HealthCare/ProfileCard/index.js","modules/dashboard/HealthCare/AppointmentCard/Graph.js","modules/dashboard/HealthCare/AppointmentCard/index.js","modules/dashboard/HealthCare/HeartRate/ViewGraph.js","modules/dashboard/HealthCare/HeartRate/index.js","modules/dashboard/HealthCare/YourActivity/ActivityGraph.js","modules/dashboard/HealthCare/YourActivity/index.js","modules/dashboard/HealthCare/index.js"],"names":["useStyles","makeStyles","theme","link","fontSize","textTruncate","overflow","textOverflow","whiteSpace","cardHeader","paddingLeft","paddingRight","paddingBottom","marginTop","marginRight","AppCard","title","titleStyle","headerStyle","contentStyle","action","actionStyle","footer","footerPosition","footerStyle","children","rest","classes","display","flexDirection","clone","className","style","alignItems","justifyContent","component","color","alignSelf","fontWeight","Fonts","BOLD","ml","mt","mr","href","underline","height","prototype","PropTypes","oneOfType","string","object","defaultProps","ListView","renderRow","onEndReached","data","animation","delay","duration","containerStyle","border","ListFooterComponent","ListEmptyComponent","ItemSeparatorComponent","useTheme","borderStyle","grey","backgroundColor","palette","background","paper","borderRadius","useBottomScrollListener","AppAnimateGroup","flex","enter","length","map","item","index","React","isValidElement","getEmptyContainer","getFooterContainer","listFooterRoot","padding","text","secondary","listFooterLoaderRoot","width","borderTop","boxSizing","ListFooter","loading","footerText","Box","CircularProgress","size","clsx","bool","AppList","footerProps","props","enterAnimationDefaults","stagger","visibility","leaveAnimationDefaults","backwards","leave","easing","runOnMount","enterHideStyle","enterShowStyle","memo","AppSelect","menus","onChange","defaultValue","selectionKey","useState","selectionType","setSelectionType","selectBox","marginLeft","cursor","breakpoints","up","selectOption","value","event","target","disableUnderline","menu","key","array","tableResponsiveMaterial","minHeight","overflowX","marginBottom","overflowY","AppTableContainer","drTime","drCardContent","DrCard","bgColor","icon","time","category","name","src","alt","Typography","variant","pt","StaticsGraph","useContext","AppContext","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","primary","main","stopOpacity","dataKey","tickLine","axisLine","labelStyle","strokeDasharray","horizontal","vertical","type","stroke","strokeWidth","fillOpacity","fill","HealthStatics","dataOne","graphData","setGraphData","messages","useIntl","dataTwo","dataThree","PatientGraph","options","AppMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","onClick","currentTarget","Menu","keepMounted","onClose","option","MenuItem","selected","arrowIconRoot","NewPatients","mb","mx","VisitsGraph","CancelVisits","contentArea","avatarSize","listItemRoot","DoctorCell","doctor","Avatar","profile_pic","MEDIUM","speciality","scheduled","Button","TopDoctors","Scrollbar","maxHeight","AppointmentCell","appointment","my","appointmentTime","appointmentDate","UpcomingAppointments","NotificationCell","notification","minWidth","Notifications","titleRoot","cardContentRoot","HospitalStatics","tableRowRoot","TableHeading","TableRow","TableCell","tableCell","anchar","borderBottom","badgeRoot","TableItem","scope","align","gender","weight","assignedDr","date","status","PatientsTable","recentPatients","Table","TableHead","TableBody","RecentPatients","console","log","InfoWidget","textAlign","measurement","StatGraphs","dot","activeDot","r","HospitalActivity","topBorder","rightBorder","borderRight","ProfileCard","p","py","px","Graph","barSize","truncate","AppointmentCard","chartValue","chartTime","chartData","ViewGraph","unitTitle","fade","common","black","HeartRate","xs","xl","unit","ActivityGraph","YourActivity","HealthCare","dispatch","useDispatch","useEffect","onGetHCData","healthCare","useSelector","dashboard","AppAnimate","GridContainer","salesState","Grid","sm","lg","md","hospitalActivity","appointmentCards","heartCard","yourActivity","temperatureCard","doses","topDoctors","upcomingAppointment","notifications","heathStatics","newPatients","cancelVisits","hospitalStatics","bloodCard","InfoView"],"mappings":"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","file":"static/js/91.1106fb39.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport PropTypes from 'prop-types';\nimport {Box, CardHeader, makeStyles} from '@material-ui/core';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport Link from '@material-ui/core/Link';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    fontSize: 14,\n  },\n  textTruncate: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  cardHeader: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 4,\n    '& .MuiCardHeader-action': {\n      marginTop: 0,\n      marginRight: 0,\n    },\n  },\n}));\n\nconst AppCard = ({\n  title,\n  titleStyle,\n  headerStyle,\n  contentStyle,\n  action,\n  actionStyle,\n  footer,\n  footerPosition,\n  footerStyle,\n  children,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return (\n    <Box display='flex' flexDirection='column' {...rest} clone>\n      <Card>\n        {title || action ? (\n          <CardHeader\n            className={classes.cardHeader}\n            style={{\n              ...headerStyle,\n            }}\n            title={\n              <Box\n                display='flex'\n                flexDirection='row'\n                alignItems='center'\n                justifyContent='space-between'>\n                {typeof title === 'object' ? (\n                  title\n                ) : (\n                  <Box\n                    component='h3'\n                    className={classes.textTruncate}\n                    color='text.primary'\n                    alignSelf='flex-start'\n                    fontWeight={Fonts.BOLD}\n                    fontSize={16}\n                    {...titleStyle}>\n                    {title}\n                  </Box>\n                )}\n              </Box>\n            }\n            action={\n              typeof action === 'object' ? (\n                action\n              ) : (\n                <Box component='span' ml='auto' mt={2} mr={2} {...actionStyle}>\n                  <Link\n                    href='#'\n                    color='secondary'\n                    component='button'\n                    underline='none'\n                    className={classes.link}>\n                    <Box component='span'>{action}</Box>\n                  </Link>\n                </Box>\n              )\n            }\n          />\n        ) : null}\n        <CardContent\n          style={{\n            paddingLeft: 20,\n            paddingRight: 20,\n            height: '100%',\n            ...contentStyle,\n          }}>\n          {children}\n        </CardContent>\n        {footer ? (\n          <CardActions\n            style={{\n              paddingLeft: 20,\n              paddingRight: 20,\n              paddingBottom: 16,\n              ...footerStyle,\n            }}>\n            {typeof footer === 'object' ? (\n              footer\n            ) : (\n              <Box\n                component='span'\n                ml={footerPosition === 'right' ? 'auto' : 0}>\n                <Link\n                  color='secondary'\n                  component='button'\n                  underline='none'\n                  className={classes.link}>\n                  {footer}\n                </Link>\n              </Box>\n            )}\n          </CardActions>\n        ) : null}\n      </Card>\n    </Box>\n  );\n};\n\nexport default AppCard;\n\nAppCard.prototype = {\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nAppCard.defaultProps = {\n  footerPosition: 'left',\n};\n","import React from 'react';\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\nimport AppAnimateGroup from '../AppAnimateGroup';\n\nconst getEmptyContainer = (ListEmptyComponent) => {\n  if (ListEmptyComponent)\n    return React.isValidElement(ListEmptyComponent) ? (\n      ListEmptyComponent\n    ) : (\n      <ListEmptyComponent />\n    );\n  return null;\n};\n\nconst getFooterContainer = (ListFooterComponent) => {\n  if (ListFooterComponent)\n    return React.isValidElement(ListFooterComponent) ? (\n      ListFooterComponent\n    ) : (\n      <ListFooterComponent />\n    );\n  return null;\n};\nconst ListView = ({\n  renderRow,\n  onEndReached,\n  data,\n  animation,\n  delay = 0,\n  duration = 200,\n  containerStyle,\n  border,\n  ListFooterComponent,\n  ListEmptyComponent,\n  ItemSeparatorComponent,\n  ...rest\n}) => {\n  const theme = useTheme();\n  const borderStyle = {\n    border: `1px solid ${grey[300]}`,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 4,\n    overflow: 'hidden',\n  };\n\n  if (!onEndReached) {\n    onEndReached = () => {};\n  }\n\n  let style = containerStyle;\n  if (border) {\n    style = {...style, ...borderStyle};\n  }\n  useBottomScrollListener(onEndReached, 200);\n  return (\n    <AppAnimateGroup\n      style={{...style}}\n      {...rest}\n      flex={1}\n      enter={{delay, duration, animation}}>\n      {data.length > 0\n        ? data.map((item, index) => renderRow(item, index))\n        : getEmptyContainer(ListEmptyComponent)}\n      {getFooterContainer(ListFooterComponent)}\n    </AppAnimateGroup>\n  );\n};\n\nexport default ListView;\nListView.propTypes = {\n  border: PropTypes.bool,\n  animation: PropTypes.string,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nListView.defaultProps = {\n  border: false,\n  animation: 'transition.slideUpIn',\n  data: [],\n  onEndReached: () => {},\n};\n","import React from 'react';\nimport {Box, CircularProgress, makeStyles} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  listFooterRoot: {\n    padding: 10,\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  listFooterLoaderRoot: {\n    width: '100%',\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    justifyContent: 'center',\n    padding: 8,\n    borderTop: `1px solid ${theme.palette.grey[200]}`,\n    boxSizing: 'border-box',\n  },\n}));\n\nconst ListFooter = ({loading, footerText}) => {\n  const classes = useStyles();\n\n  return loading ? (\n    <Box className={classes.listFooterLoaderRoot}>\n      <CircularProgress size={16} />\n      <Box component='span' ml={2}>\n        Loading...\n      </Box>\n    </Box>\n  ) : (\n    <Box className={clsx(classes.listFooterRoot, 'list-footer')}>\n      <Box component='p'>{footerText}</Box>\n    </Box>\n  );\n};\n\nListFooter.prototype = {\n  loading: PropTypes.bool,\n  footerText: PropTypes.string,\n};\n\nListFooter.defaultProps = {\n  loading: false,\n};\n\nexport default ListFooter;\n","import React from 'react';\nimport ListView from './ListView';\nimport PropTypes from 'prop-types';\nimport ListFooter from './ListFooter';\n\nconst AppList = ({footerProps, ...props}) => {\n  return (\n    <ListView\n      {...props}\n      ListFooterComponent={\n        footerProps ? (\n          <ListFooter\n            loading={footerProps.loading}\n            footerText={footerProps.footerText}\n          />\n        ) : null\n      }\n    />\n  );\n};\n\nexport default AppList;\nAppList.propTypes = {\n  border: PropTypes.bool,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nAppList.defaultProps = {\n  border: false,\n  data: [],\n};\n","import PropTypes from 'prop-types';\nimport React, {memo} from 'react';\nimport {VelocityTransitionGroup} from 'velocity-react';\nimport 'velocity-animate/velocity.ui';\n\nconst enterAnimationDefaults = {\n  animation: 'transition.fadeIn',\n  stagger: 50,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nconst leaveAnimationDefaults = {\n  animation: 'transition.slideUpOut',\n  backwards: 150,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nfunction AppAnimateGroup({loading, ...props}) {\n  return (\n    <VelocityTransitionGroup\n      {...props}\n      enter={{...enterAnimationDefaults, ...props.enter}}\n      leave={{...leaveAnimationDefaults, ...props.leave}}\n    />\n  );\n}\n\nAppAnimateGroup.propTypes = {\n  children: PropTypes.any,\n};\n\nAppAnimateGroup.defaultProps = {\n  enter: enterAnimationDefaults,\n  leave: leaveAnimationDefaults,\n  easing: [0.4, 0.0, 0.2, 1],\n  runOnMount: true,\n  enterHideStyle: {\n    visibility: 'visible',\n  },\n  enterShowStyle: {\n    visibility: 'hidden',\n  },\n};\n\nexport default memo(AppAnimateGroup);\n","import React, {useState} from 'react';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport clsx from 'clsx';\n\nconst AppSelect = ({menus, onChange, defaultValue, selectionKey}) => {\n  const [selectionType, setSelectionType] = useState(defaultValue);\n\n  const handleSelectionType = (event) => {\n    setSelectionType(event.target.value);\n    onChange(event.target.value);\n  };\n  const useStyles = makeStyles((theme) => ({\n    selectBox: {\n      marginLeft: 8,\n      cursor: 'pointer',\n      fontSize: 14,\n      [theme.breakpoints.up('xl')]: {\n        marginLeft: 24,\n      },\n      '& .MuiSelect-select': {\n        paddingLeft: 10,\n      },\n    },\n    selectOption: {\n      cursor: 'pointer',\n      padding: 8,\n      fontSize: 14,\n    },\n  }));\n  const classes = useStyles();\n  return (\n    <Select\n      defaultValue={defaultValue}\n      value={selectionType}\n      onChange={handleSelectionType}\n      disableUnderline={true}\n      className={clsx(classes.selectBox, 'select-box')}>\n      {menus.map((menu, index) => (\n        <MenuItem\n          key={index}\n          value={selectionKey ? menu[selectionKey] : menu}\n          className={classes.selectOption}>\n          {selectionKey ? menu[selectionKey] : menu}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nexport default AppSelect;\nAppSelect.prototype = {\n  menus: PropTypes.array,\n  onChange: PropTypes.array,\n  defaultValue: PropTypes.array,\n  selectionKey: PropTypes.array,\n};\nAppSelect.defaultProps = {\n  menus: [],\n  defaultValue: '',\n  selectionKey: '',\n};\n","import React from 'react';\nimport {Box, makeStyles} from '@material-ui/core';\nimport {grey} from '@material-ui/core/colors/index';\n\nconst useStyles = makeStyles((theme) => ({\n  tableResponsiveMaterial: {\n    minHeight: '.01%',\n    overflowX: 'auto',\n    '-webkit-overflow-scrolling': 'auto',\n    '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\n      whiteSpace: 'nowrap',\n    },\n    '@media (max-width: 767px)': {\n      width: '100%',\n      marginBottom: 15,\n      overflowY: 'hidden',\n      border: `1px solid ${grey[300]}`,\n      '& > table': {\n        marginBottom: 0,\n      },\n    },\n  },\n}));\n\nconst AppTableContainer = ({children}) => {\n  const classes = useStyles();\n\n  return <Box className={classes.tableResponsiveMaterial}>{children}</Box>;\n};\n\nexport default AppTableContainer;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box, makeStyles, Typography} from '@material-ui/core';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  drTime: {\n    fontWeight: Fonts.BOLD,\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.background.paper,\n    '@media screen and (max-width: 1600px) and (min-width: 1280px)': {\n      display: 'none',\n    },\n  },\n  drCardContent: {\n    width: 'calc(100% - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textTruncate: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    width: '100%',\n  },\n}));\n\nconst DrCard = ({data}) => {\n  const {bgColor, icon, time, category, name} = data;\n  const classes = useStyles();\n  return (\n    <AppCard\n      height={1}\n      style={{backgroundColor: bgColor}}\n      className='card-hover'>\n      <Box display='flex'>\n        <Box mr={3} clone alignSelf='center'>\n          <img src={icon} alt='icon' />\n        </Box>\n        <Box className={classes.drCardContent}>\n          <Box flex={1} color='white' overflow='hidden' mr={2}>\n            <Typography\n              className={classes.textTruncate}\n              component='h5'\n              variant='inherit'\n              color='inherit'>\n              {category}\n            </Typography>\n            <Box className={classes.textTruncate} component='p' pt={1.5}>\n              {name}\n            </Box>\n          </Box>\n          <Box\n            className={classes.drTime}\n            ml='auto'\n            display='flex'\n            alignItems='center'\n            borderRadius='50%'\n            justifyContent='center'\n            style={{height: 50, width: 50}}>\n            {time}\n          </Box>\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default DrCard;\n","import React, {useContext} from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n} from 'recharts';\nimport AppContext from '../../../../@crema/utility/AppContext';\n\nconst StaticsGraph = ({data}) => {\n  const {theme} = useContext(AppContext);\n  return (\n    <ResponsiveContainer width='100%' height={258}>\n      <AreaChart data={data} margin={{top: 25, right: 0, left: 0, bottom: 0}}>\n        <defs>\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\n            <stop\n              offset='5%'\n              stopColor={theme.palette.primary.main}\n              stopOpacity={0.1}\n            />\n            <stop\n              offset='95%'\n              stopColor={theme.palette.primary.main}\n              stopOpacity={0}\n            />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey='month'\n          tickLine={false}\n          axisLine={false}\n          padding={{left: 20, right: 20}}\n        />\n        <Tooltip labelStyle={{color: 'black'}} />\n        <CartesianGrid\n          strokeDasharray='2 10'\n          horizontal={false}\n          vertical={false}\n        />\n        <Area\n          type='monotone'\n          dataKey='number'\n          stroke={theme.palette.primary.main}\n          strokeWidth={3}\n          fillOpacity={1}\n          fill='url(#colorPv)'\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default StaticsGraph;\n","import React, {useState} from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport AppSelect from '../../../../@crema/core/AppSelect';\nimport {useIntl} from 'react-intl';\nimport StaticsGraph from './StaticsGraph';\nimport {Box} from '@material-ui/core';\n\nconst HealthStatics = ({data}) => {\n  const [graphData, setGraphData] = useState(data.dataOne);\n  const handleYearChange = (value) => {\n    switch (value) {\n      case 2017:\n        setGraphData(data.dataTwo);\n        break;\n      case 2018:\n        setGraphData(data.dataThree);\n        break;\n      case 2019:\n        setGraphData(data.dataOne);\n        break;\n      default:\n        setGraphData(data.dataOne);\n    }\n  };\n\n  const handleMonthChange = (value) => {\n    switch (value) {\n      case 'June':\n        setGraphData(data.dataTwo);\n        break;\n      case 'July':\n        setGraphData(data.dataThree);\n        break;\n      case 'August':\n        setGraphData(data.dataOne);\n        break;\n      default:\n        setGraphData(data.dataThree);\n    }\n  };\n\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      title={messages['healthCare.staticsHealthCare']}\n      action={\n        <Box ml='auto' display='flex' alignItems='center'>\n          <AppSelect\n            menus={[2019, 2018, 2017]}\n            defaultValue={2019}\n            onChange={handleYearChange}\n          />\n          <AppSelect\n            menus={[\n              messages['common.june'],\n              messages['common.july'],\n              messages['common.august'],\n            ]}\n            defaultValue={messages['common.june']}\n            onChange={handleMonthChange}\n          />\n        </Box>\n      }>\n      <StaticsGraph data={graphData} />\n    </AppCard>\n  );\n};\n\nexport default HealthStatics;\n","import React, {useContext} from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n} from 'recharts';\nimport AppContext from '../../../../@crema/utility/AppContext';\n\nconst PatientGraph = ({data}) => {\n  const {theme} = useContext(AppContext);\n  return (\n    <ResponsiveContainer width='100%' height={230}>\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\n        <defs>\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\n            <stop\n              offset='5%'\n              stopColor={theme.palette.primary.main}\n              stopOpacity={0.1}\n            />\n            <stop\n              offset='95%'\n              stopColor={theme.palette.primary.main}\n              stopOpacity={0}\n            />\n          </linearGradient>\n        </defs>\n        <Tooltip labelStyle={{color: 'black'}} />\n        <CartesianGrid\n          strokeDasharray='2 10'\n          horizontal={false}\n          vertical={false}\n        />\n        <Area\n          type='monotone'\n          dataKey='number'\n          stroke={theme.palette.primary.main}\n          strokeWidth={3}\n          fillOpacity={1}\n          fill='url(#colorPv)'\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PatientGraph;\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Box} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst options = ['View More', 'Update Data', 'Clear Data'];\nconst AppMenu = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <IconButton\n        style={{height: 30, width: 30}}\n        aria-label='more'\n        onClick={handleClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id='long-menu'\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}>\n        {options.map((option) => (\n          <MenuItem\n            key={option}\n            selected={option === 'Pyxis'}\n            onClick={handleClose}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Box>\n  );\n};\n\nexport default AppMenu;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {useIntl} from 'react-intl';\nimport PatientGraph from './PatientGraph';\nimport {Box, makeStyles} from '@material-ui/core';\nimport AppMenu from '../../../../@crema/core/AppMenu';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  arrowIconRoot: {\n    '& img': {\n      height: 12,\n    },\n  },\n}));\n\nconst NewPatients = ({data}) => {\n  const {messages} = useIntl();\n  const classes = useStyles();\n  return (\n    <AppCard title={messages['healthCare.newPatient']} action={<AppMenu />}>\n      <Box>\n        <Box mb={6} display='flex' alignItems='center'>\n          <Box component='span' mr={2} fontSize={20} fontWeight={Fonts.BOLD}>\n            214\n          </Box>\n          <Box className={classes.arrowIconRoot}>\n            <img\n              src={'/assets/images/dashboard/metrics_icon_active.png'}\n              alt='down'\n            />\n          </Box>\n        </Box>\n        <Box mx={-6} mb={-6}>\n          <PatientGraph data={data} />\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default NewPatients;\n","import React, {useContext} from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n} from 'recharts';\nimport AppContext from '../../../../@crema/utility/AppContext';\n\nconst VisitsGraph = ({data}) => {\n  const {theme} = useContext(AppContext);\n  return (\n    <ResponsiveContainer width='100%' height={230}>\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\n        <defs>\n          <linearGradient id='colorVisit' x1='0' y1='0' x2='0' y2='1'>\n            <stop\n              offset='5%'\n              stopColor={theme.palette.secondary.main}\n              stopOpacity={0.1}\n            />\n            <stop\n              offset='95%'\n              stopColor={theme.palette.secondary.main}\n              stopOpacity={0}\n            />\n          </linearGradient>\n        </defs>\n        <Tooltip labelStyle={{color: 'black'}} />\n        <CartesianGrid\n          strokeDasharray='2 10'\n          horizontal={false}\n          vertical={false}\n        />\n        <Area\n          type='monotone'\n          dataKey='number'\n          stroke={theme.palette.secondary.main}\n          strokeWidth={3}\n          fillOpacity={1}\n          fill='url(#colorVisit)'\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default VisitsGraph;\n","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box, makeStyles} from '@material-ui/core';\nimport VisitsGraph from './VisitsGraph';\nimport AppMenu from '../../../../@crema/core/AppMenu';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  arrowIconRoot: {\n    '& img': {\n      height: 12,\n    },\n  },\n}));\n\nconst CancelVisits = ({data}) => {\n  const {messages} = useIntl();\n  const classes = useStyles();\n  return (\n    <AppCard\n      title={messages['healthCare.cancelledVisits']}\n      action={<AppMenu />}>\n      <Box>\n        <Box mb={6} display='flex' alignItems='center'>\n          <Box component='span' mr={2} fontSize={20} fontWeight={Fonts.BOLD}>\n            32\n          </Box>\n          <Box className={classes.arrowIconRoot}>\n            <img src={'/assets/images/dashboard/decries_icon.png'} alt='down' />\n          </Box>\n        </Box>\n        <Box mx={-6} mb={-6}>\n          <VisitsGraph data={data} />\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default CancelVisits;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button} from '@material-ui/core';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  contentArea: {\n    fontSize: 14,\n  },\n  avatarSize: {\n    width: 48,\n    height: 48,\n  },\n  listItemRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 20px',\n  },\n}));\n\nconst DoctorCell = ({doctor}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.listItemRoot, 'item-hover')}>\n      <Box mr={4} clone>\n        <Avatar className={classes.avatarSize} src={doctor.profile_pic} />\n      </Box>\n      <Box className={classes.contentArea}>\n        <Box fontWeight={Fonts.MEDIUM} component='h5' mb={0.5}>\n          {doctor.name}\n        </Box>\n        <Box color='text.secondary' component='p'>\n          {doctor.speciality}\n        </Box>\n      </Box>\n      <Box display='flex' alignItems='center' ml='auto'>\n        {doctor.scheduled ? (\n          <Button color='secondary' variant='outlined'>\n            Remove\n          </Button>\n        ) : (\n          <Button color='primary' variant='outlined'>\n            Schedule\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default DoctorCell;\n\nDoctorCell.propTypes = {\n  doctor: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport AppMenu from '../../../../@crema/core/AppMenu';\nimport AppList from '../../../../@crema/core/AppList';\nimport DoctorCell from './DoctorCell';\nimport Scrollbar from '../../../../@crema/core/Scrollbar';\n\nconst TopDoctors = ({data}) => {\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      title={messages['healthCare.topDoctors']}\n      contentStyle={{paddingLeft: 0, paddingRight: 0}}\n      action={<AppMenu />}>\n      <Scrollbar style={{maxHeight: 280}}>\n        <AppList\n          data={data}\n          renderRow={(doctor) => <DoctorCell key={doctor.id} doctor={doctor} />}\n        />\n      </Scrollbar>\n    </AppCard>\n  );\n};\n\nexport default TopDoctors;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  contentArea: {\n    fontSize: 14,\n  },\n  avatarSize: {\n    width: 48,\n    height: 48,\n  },\n  listItemRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 20px',\n  },\n}));\n\nconst AppointmentCell = ({appointment}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.listItemRoot, 'item-hover')}>\n      <Box mr={4} clone>\n        <Avatar className={classes.avatarSize} src={appointment.profile_pic} />\n      </Box>\n      <Box className={classes.contentArea}>\n        <Box component='h5' fontWeight={Fonts.MEDIUM} mb={0.5}>\n          {appointment.name}\n        </Box>\n        <Box component='p' color='primary.main'>\n          {appointment.speciality}\n        </Box>\n      </Box>\n      <Box display='flex' flexDirection='column' alignItems='center' ml='auto'>\n        <Box\n          color='primary.main'\n          component='p'\n          my={1}\n          fontSize={13}\n          fontWeight={Fonts.BOLD}>\n          {appointment.appointmentTime}\n        </Box>\n        <Box component='p'>{appointment.appointmentDate}</Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AppointmentCell;\n\nAppointmentCell.propTypes = {\n  appointment: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport AppMenu from '../../../../@crema/core/AppMenu';\nimport AppList from '../../../../@crema/core/AppList';\nimport AppointmentCell from './AppointmentCell';\nimport Scrollbar from '../../../../@crema/core/Scrollbar';\n\nconst UpcomingAppointments = ({data}) => {\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      contentStyle={{paddingLeft: 0, paddingRight: 0}}\n      title={messages['healthCare.upcomingAppointments']}\n      action={<AppMenu />}>\n      <Scrollbar style={{maxHeight: 280}}>\n        <AppList\n          data={data}\n          renderRow={(appointment) => (\n            <AppointmentCell key={appointment.id} appointment={appointment} />\n          )}\n        />\n      </Scrollbar>\n    </AppCard>\n  );\n};\n\nexport default UpcomingAppointments;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  contentArea: {\n    fontSize: 14,\n  },\n  avatarSize: {\n    width: 48,\n    height: 48,\n  },\n  listItemRoot: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: '12px 20px',\n  },\n}));\n\nconst NotificationCell = ({notification}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.listItemRoot, 'item-hover')}>\n      <Box\n        mr={4}\n        mt={1.5}\n        style={{\n          height: 10,\n          minWidth: 10,\n          borderRadius: '50%',\n          backgroundColor: notification.color,\n        }}\n      />\n      <Box className={classes.contentArea}>\n        <Box component='h5' fontWeight={Fonts.MEDIUM} mb={0.5}>\n          {notification.title}\n        </Box>\n        <Box component='span' color='text.secondary'>\n          {notification.time}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NotificationCell;\n\nNotificationCell.propTypes = {\n  notification: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {useIntl} from 'react-intl';\nimport AppMenu from '../../../../@crema/core/AppMenu';\nimport Scrollbar from '../../../../@crema/core/Scrollbar';\nimport AppList from '../../../../@crema/core/AppList';\nimport NotificationCell from './NotificationCell';\n\nconst Notifications = ({data}) => {\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      contentStyle={{paddingLeft: 0, paddingRight: 0}}\n      title={messages['healthCare.notification']}\n      action={<AppMenu />}>\n      <Scrollbar style={{maxHeight: 280}}>\n        <AppList\n          data={data}\n          renderRow={(notification) => (\n            <NotificationCell\n              key={notification.id}\n              notification={notification}\n            />\n          )}\n        />\n      </Scrollbar>\n    </AppCard>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box, makeStyles, Typography} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  titleRoot: {\n    fontSize: 16,\n  },\n  textTruncate: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    width: '100%',\n  },\n  cardContentRoot: {\n    width: 'calc(100% - 70px)',\n  },\n}));\n\nconst HospitalStatics = ({data}) => {\n  const {bgColor, icon, value, name} = data;\n  const classes = useStyles();\n  return (\n    <AppCard\n      height={1}\n      style={{backgroundColor: bgColor}}\n      className='card-hover'>\n      <Box display='flex' alignItems='center'>\n        <Box mr={4} clone alignSelf='flex-start'>\n          <img src={icon} alt='icon' />\n        </Box>\n        <Box className={classes.cardContentRoot}>\n          <Typography\n            className={clsx(classes.textTruncate, classes.titleRoot)}\n            component='h5'\n            variant='inherit'\n            color='inherit'>\n            {value}\n          </Typography>\n          <Box\n            component='p'\n            pt={0.5}\n            className={classes.textTruncate}\n            color='text.secondary'>\n            {name}\n          </Box>\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default HospitalStatics;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  tableRowRoot: {\n    '& th': {\n      fontSize: 13,\n      padding: 8,\n      fontWeight: Fonts.BOLD,\n      '&:first-child': {\n        paddingLeft: 20,\n      },\n      '&:last-child': {\n        paddingRight: 20,\n      },\n    },\n  },\n}));\n\nconst TableHeading = (props) => {\n  const classes = useStyles(props);\n  return (\n    <TableRow className={classes.tableRowRoot}>\n      <TableCell>Name</TableCell>\n      <TableCell>Gender</TableCell>\n      <TableCell>Weight</TableCell>\n      <TableCell>Assigned Dr</TableCell>\n      <TableCell>Admit Date</TableCell>\n      <TableCell>Status</TableCell>\n      <TableCell>Actions</TableCell>\n    </TableRow>\n  );\n};\n\nexport default TableHeading;\n","import {makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  tableCell: {\n    fontSize: 13,\n    padding: 8,\n    whiteSpace: 'nowrap',\n    '&:first-child': {\n      paddingLeft: 20,\n    },\n    '&:last-child': {\n      paddingRight: 20,\n    },\n  },\n  whiteSpace: {\n    whiteSpace: 'no-wrap',\n  },\n  anchar: {\n    color: theme.palette.primary.main,\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n    display: 'inline-block',\n  },\n  badgeRoot: {\n    padding: '3px 10px',\n    borderRadius: 4,\n    display: 'inline-block',\n  },\n}));\nexport default useStyles;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport useStyles from './TableItem.style';\nimport AppMenu from '../../../../../@crema/core/AppMenu';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\n\nconst TableItem = ({data}) => {\n  const classes = useStyles();\n\n  return (\n    <TableRow key={data.name} className='item-hover'>\n      <TableCell component='th' scope='row' className={classes.tableCell}>\n        <Box display='flex' alignItems='center'>\n          <Box mr={3} clone>\n            <Avatar src={data.profile_pic} />\n          </Box>\n          <Box fontWeight={Fonts.BOLD}>{data.name}</Box>\n        </Box>\n      </TableCell>\n      <TableCell align='left' className={classes.tableCell}>\n        {data.gender}\n      </TableCell>\n      <TableCell align='left' className={classes.tableCell}>\n        {data.weight}\n      </TableCell>\n      <TableCell align='left' className={classes.tableCell}>\n        {data.assignedDr}\n      </TableCell>\n      <TableCell align='left'>{data.date}</TableCell>\n      <TableCell align='left'>\n        <Box\n          className={classes.badgeRoot}\n          style={{\n            color: data.color,\n            backgroundColor: data.color + '44',\n          }}>\n          {data.status}\n        </Box>\n      </TableCell>\n      <TableCell align='right'>\n        <AppMenu />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default TableItem;\n\nTableItem.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport PropTypes from 'prop-types';\nimport TableHeading from './TableHeading';\nimport TableItem from './TableItem';\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\n\nconst PatientsTable = ({recentPatients}) => {\n  return (\n    <AppTableContainer>\n      <Table className='table'>\n        <TableHead>\n          <TableHeading />\n        </TableHead>\n        <TableBody>\n          {recentPatients.map((data) => (\n            <TableItem data={data} key={data.id} />\n          ))}\n        </TableBody>\n      </Table>\n    </AppTableContainer>\n  );\n};\n\nexport default PatientsTable;\n\nPatientsTable.defaultProps = {\n  recentPatients: [],\n};\n\nPatientsTable.propTypes = {\n  recentPatients: PropTypes.array,\n};\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {useIntl} from 'react-intl';\nimport AppSelect from '../../../../@crema/core/AppSelect';\nimport PatientsTable from './PatientsTable';\n\nconst RecentPatients = ({recentPatients}) => {\n  const {messages} = useIntl();\n  const handleSelectionType = (data) => {\n    console.log('data: ', data);\n  };\n  return (\n    <AppCard\n      contentStyle={{paddingLeft: 0, paddingRight: 0}}\n      title={messages['healthCare.recentPatient']}\n      action={\n        <AppSelect\n          menus={[\n            messages['dashboard.thisWeek'],\n            messages['dashboard.lastWeeks'],\n            messages['dashboard.lastMonth'],\n          ]}\n          defaultValue={messages['dashboard.thisWeek']}\n          onChange={handleSelectionType}\n        />\n      }>\n      <PatientsTable recentPatients={recentPatients} />\n    </AppCard>\n  );\n};\n\nexport default RecentPatients;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box} from '@material-ui/core';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst InfoWidget = ({data}) => {\n  return (\n    <AppCard\n      height={1}\n      className='card-hover'\n      contentStyle={{paddingLeft: 8, paddingRight: 8}}>\n      <Box\n        display='flex'\n        flexDirection='column'\n        flex={1}\n        alignItems='center'\n        justifyContent='center'>\n        <Box mt={1} mb={3}>\n          <img src={data.icon} alt='icon' style={{height: 60, width: 60}} />\n        </Box>\n        <Box textAlign='center'>\n          <Box color='text.secondary' mb={3}>\n            {data.name}\n          </Box>\n          <Box\n            component='p'\n            fontSize={14}\n            fontWeight={Fonts.BOLD}\n            style={{color: data.color}}>\n            {data.measurement}\n          </Box>\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default InfoWidget;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\nconst StatGraphs = ({data}) => {\n  return (\n    <ResponsiveContainer width='100%' height={250}>\n      <LineChart data={data} margin={{top: 50, right: 0, left: -25, bottom: 0}}>\n        <XAxis\n          dataKey='name'\n          tickLine={false}\n          axisLine={false}\n          padding={{left: 20, right: 20}}\n        />\n        <Tooltip labelStyle={{color: 'black'}} />\n        <CartesianGrid stroke='#eee' horizontal={true} vertical={false} />\n        <Line\n          type='monotone'\n          dataKey='Consultations'\n          stroke='#0698ec'\n          dot={false}\n          strokeWidth={2}\n          activeDot={{r: 4}}\n        />\n        <Line\n          type='monotone'\n          dot={false}\n          strokeWidth={2}\n          dataKey='Patients'\n          stroke='#f44d50'\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default StatGraphs;\n\nStatGraphs.defaultProps = {\n  data: [],\n};\n\nStatGraphs.propTypes = {\n  data: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatGraphs from './StatGraphs';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport AppSelect from '../../../../@crema/core/AppSelect';\nimport {useIntl} from 'react-intl';\n\nconst HospitalActivity = ({data}) => {\n  const handleSelectionType = (data) => {\n    console.log('data: ', data);\n  };\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      height={1}\n      title={messages['healthCare.hospitalActivity']}\n      action={\n        <AppSelect\n          menus={[\n            messages['dashboard.thisWeek'],\n            messages['dashboard.lastWeeks'],\n            messages['dashboard.lastMonth'],\n          ]}\n          defaultValue={messages['dashboard.thisWeek']}\n          onChange={handleSelectionType}\n        />\n      }>\n      <StatGraphs data={data} />\n    </AppCard>\n  );\n};\nexport default HospitalActivity;\n\nHospitalActivity.defaultProps = {\n  data: [],\n};\n\nHospitalActivity.propTypes = {\n  data: PropTypes.array,\n};\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Box, makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topBorder: {\r\n    borderTop: `solid 1px ${theme.palette.grey[200]}`,\r\n  },\r\n  rightBorder: {\r\n    borderRight: `solid 1px ${theme.palette.grey[200]}`,\r\n  },\r\n}));\r\n\r\nconst ProfileCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppCard>\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        alignItems='center'\r\n        justifyContent='center'>\r\n        <Avatar\r\n          style={{height: 80, width: 80}}\r\n          src={'https://via.placeholder.com/150'}\r\n        />\r\n        <Box p={3} mb={4} mt={2} component='h5'>\r\n          Talan Phips\r\n        </Box>\r\n\r\n        <Box display='flex' flexDirection='column' width={1}>\r\n          <Box display='flex' alignItems='center' textAlign='center'>\r\n            <Box py={5} px={2} className={classes.rightBorder} width={1 / 2}>\r\n              <Box component='h5'>24</Box>\r\n              <Box color='text.secondary'>Years</Box>\r\n            </Box>\r\n            <Box py={5} px={2} width={1 / 2}>\r\n              <Box component='h5'>A+</Box>\r\n              <Box color='text.secondary'>Blood</Box>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            textAlign='center'\r\n            className={classes.topBorder}>\r\n            <Box py={5} px={2} className={classes.rightBorder} width={1 / 2}>\r\n              <Box component='h5'>185 cm</Box>\r\n              <Box color='text.secondary'>Height</Box>\r\n            </Box>\r\n            <Box py={5} px={2} width={1 / 2}>\r\n              <Box component='h5'>84 kg</Box>\r\n              <Box color='text.secondary'>Weight</Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\nimport PropTypes from 'prop-types';\n\nconst Graph = ({data}) => {\n  return (\n    <ResponsiveContainer width='100%' height={70}>\n      <BarChart barSize={4} data={data}>\n        <Bar dataKey='users' fill='#E2E8F0' />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default Graph;\n\nGraph.defaultProps = {\n  data: [],\n};\n\nGraph.propTypes = {\n  data: PropTypes.array,\n};\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box, makeStyles} from '@material-ui/core';\nimport Graph from './Graph';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  arrowIconRoot: {\n    fontSize: 18,\n    marginRight: 2,\n  },\n  truncate: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    width: '100%',\n  },\n}));\n\nconst AppointmentCard = ({data}) => {\n  const classes = useStyles();\n  return (\n    <AppCard style={{backgroundColor: data.color}} className='card-hover'>\n      <Box display='flex' flexDirection='row' color='white'>\n        <Box width={1 / 2} display='flex' flexDirection='column'>\n          <Box>\n            <img src={data.icon} alt={data.name} />\n          </Box>\n          <Box py={2} className={classes.truncate}>\n            {data.name}\n          </Box>\n          <Box fontSize={20} fontWeight={Fonts.BOLD}>\n            {data.value}\n          </Box>\n        </Box>\n        <Box\n          width={1 / 2}\n          display='flex'\n          flexDirection='column'\n          alignItems='flex-end'>\n          <Box display='flex' alignItems='center'>\n            <ArrowUpwardIcon className={classes.arrowIconRoot} />\n            <Box>{data.chartValue}</Box>\n          </Box>\n          <Box\n            fontSize={12}\n            mb={3}\n            fontWeight={Fonts.BOLD}\n            className={classes.truncate}\n            textAlign='right'>\n            {data.chartTime}\n          </Box>\n          <Graph data={data.chartData} />\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default AppointmentCard;\n","import React from 'react';\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\n\nconst ViewGraph = ({data}) => {\n  return (\n    <ResponsiveContainer width='100%' height={178}>\n      <LineChart data={data} margin={{top: 30, right: 0, left: 0, bottom: 20}}>\n        <Line\n          type='monotone'\n          dataKey='rate'\n          stroke='#ffffff'\n          dot={false}\n          strokeWidth={2}\n          activeDot={{r: 4}}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ViewGraph;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport {Box, fade, makeStyles} from '@material-ui/core';\nimport ViewGraph from './ViewGraph';\nimport {Fonts} from '../../../../shared/constants/AppEnums';\n\nconst useStyles = makeStyles((theme) => ({\n  unitTitle: {\n    backgroundColor: fade(theme.palette.common.black, 0.04),\n    margin: '0 -24px -20px',\n    padding: '12px 24px',\n    fontSize: 20,\n    fontWeight: Fonts.BOLD,\n    [theme.breakpoints.up('xl')]: {\n      fontSize: 24,\n      padding: '8px 24px',\n    },\n  },\n}));\n\nconst HeartRate = ({data}) => {\n  const classes = useStyles();\n  return (\n    <AppCard style={{backgroundColor: data.color}}>\n      <Box\n        color='white'\n        display='flex'\n        flexDirection='column'\n        justifyContent='space-between'>\n        <Box fontSize={16} fontWeight={Fonts.BOLD}>\n          {data.title}\n        </Box>\n        <Box display='flex' justifyContent='flex-end' width={1} mb={-10}>\n          <Box width={{xs: 3 / 4, xl: 1 / 2}}>\n            <ViewGraph data={data.graphData} />\n          </Box>\n        </Box>\n        <Box className={classes.unitTitle}>\n          {data.measurement}\n          <Box fontSize={16} ml={2} component='span'>\n            {data.unit}\n          </Box>\n        </Box>\n      </Box>\n    </AppCard>\n  );\n};\n\nexport default HeartRate;\n","import React from 'react';\nimport {Bar, BarChart, ResponsiveContainer, Tooltip} from 'recharts';\n\nconst ActivityGraph = ({data}) => {\n  return (\n    <ResponsiveContainer width='100%' height={143}>\n      <BarChart\n        data={data}\n        margin={{\n          top: 0,\n          right: 0,\n          left: 0,\n          bottom: 0,\n        }}\n        barSize={20}>\n        <Tooltip labelStyle={{color: 'black'}} />\n        <Bar dataKey='visits' fill='#0A8FDC33' />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ActivityGraph;\n","import React from 'react';\nimport AppCard from '../../../../@crema/core/AppCard';\nimport AppSelect from '../../../../@crema/core/AppSelect';\nimport {useIntl} from 'react-intl';\nimport ActivityGraph from './ActivityGraph';\n\nconst YourActivity = ({data}) => {\n  const handleChange = (value) => {\n    console.log('value', value);\n  };\n  const {messages} = useIntl();\n  return (\n    <AppCard\n      title={messages['healthCare.yourActivity']}\n      action={\n        <AppSelect\n          menus={['This Week', 'Last Week', 'This Month']}\n          defaultValue='This Week'\n          onChange={handleChange}\n        />\n      }>\n      <ActivityGraph data={data} />\n    </AppCard>\n  );\n};\n\nexport default YourActivity;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {onGetHCData} from '../../../redux/actions';\nimport InfoView from '../../../@crema/core/InfoView';\nimport {Box, Grid} from '@material-ui/core';\nimport GridContainer from '../../../@crema/core/GridContainer';\nimport DrCard from './DrCard';\nimport AppAnimate from '../../../@crema/core/AppAnimate';\nimport HealthStatics from './HealthStatics';\nimport NewPatients from './NewPatients';\nimport CancelVisits from './CancelVisits';\nimport TopDoctors from './TopDoctors';\nimport UpcomingAppointments from './UpcomingAppointments';\nimport Notifications from './Notifications';\nimport HospitalStatics from './HospitalStatics';\nimport RecentPatients from './RecentPatients';\nimport InfoWidget from './InfoWidget';\nimport HospitalActivity from './HospitalActivity';\nimport ProfileCard from './ProfileCard';\nimport AppointmentCard from './AppointmentCard';\nimport HeartRate from './HeartRate';\nimport YourActivity from './YourActivity';\n\nconst HealthCare = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(onGetHCData());\n  }, [dispatch]);\n\n  const {healthCare} = useSelector(({dashboard}) => dashboard);\n\n  return (\n    <>\n      {healthCare ? (\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\n          <Box pt={{xl: 4}} clone>\n            <GridContainer>\n              {healthCare.salesState.map((data, index) => (\n                <Grid item xs={12} sm={6} lg={3} key={index}>\n                  <DrCard data={data} />\n                </Grid>\n              ))}\n\n              <Grid item xs={12} sm={12} md={6}>\n                <HospitalActivity data={healthCare.hospitalActivity} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <ProfileCard />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <GridContainer>\n                  {healthCare.appointmentCards.map((data, index) => (\n                    <Grid item xs={12} key={index}>\n                      <AppointmentCard data={data} />\n                    </Grid>\n                  ))}\n                </GridContainer>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <HeartRate data={healthCare.heartCard} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <YourActivity data={healthCare.yourActivity} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <HeartRate data={healthCare.temperatureCard} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <GridContainer>\n                  {healthCare.doses.map((data, index) => (\n                    <Grid item xs={12} key={index}>\n                      <HospitalStatics data={data} />\n                    </Grid>\n                  ))}\n                </GridContainer>\n              </Grid>\n              <Grid item xs={12} sm={12} lg={4}>\n                <TopDoctors data={healthCare.topDoctors} />\n              </Grid>\n              <Grid item xs={12} sm={6} lg={4}>\n                <UpcomingAppointments data={healthCare.upcomingAppointment} />\n              </Grid>\n              <Grid item xs={12} sm={6} lg={4}>\n                <Notifications data={healthCare.notifications} />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <HealthStatics data={healthCare.heathStatics} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <NewPatients data={healthCare.newPatients} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <CancelVisits data={healthCare.cancelVisits} />\n              </Grid>\n\n              {healthCare.hospitalStatics.map((data, index) => (\n                <Grid item xs={12} sm={6} md={3} key={index}>\n                  <HospitalStatics data={data} />\n                </Grid>\n              ))}\n              <Grid item xs={12} sm={12} md={8}>\n                <RecentPatients recentPatients={healthCare.recentPatients} />\n              </Grid>\n              <Grid item xs={12} sm={12} md={4}>\n                <GridContainer>\n                  {healthCare.bloodCard.map((data, index) => (\n                    <Grid item xs={12} sm={6} key={'grid-' + index}>\n                      <InfoWidget data={data} />\n                    </Grid>\n                  ))}\n                </GridContainer>\n              </Grid>\n            </GridContainer>\n          </Box>\n        </AppAnimate>\n      ) : null}\n      <InfoView />\n    </>\n  );\n};\n\nexport default HealthCare;\n"],"sourceRoot":""}