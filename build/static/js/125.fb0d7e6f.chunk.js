(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[125],{2686:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DrawingManager=void 0;var a=u(t(1254)),o=u(t(1244)),r=u(t(1245)),l=u(t(1246)),i=u(t(1247)),p=u(t(1248)),s=u(t(1289)),c=u(t(0)),g=u(t(11)),d=t(1264),m=t(1255);function u(e){return e&&e.__esModule?e:{default:e}}var f=n.DrawingManager=function(e){function n(e,t){(0,r.default)(this,n);var l=(0,i.default)(this,(n.__proto__||(0,o.default)(n)).call(this,e,t));(0,s.default)(google.maps.drawing,'Did you include "libraries=drawing" in the URL?');var p=new google.maps.drawing.DrawingManager;return(0,d.construct)(n.propTypes,y,l.props,p),p.setMap(l.context[m.MAP]),l.state=(0,a.default)({},m.DRAWING_MANAGER,p),l}return(0,p.default)(n,e),(0,l.default)(n,[{key:"componentDidMount",value:function(){(0,d.componentDidMount)(this,this.state[m.DRAWING_MANAGER],w)}},{key:"componentDidUpdate",value:function(e){(0,d.componentDidUpdate)(this,this.state[m.DRAWING_MANAGER],w,y,e)}},{key:"componentWillUnmount",value:function(){(0,d.componentWillUnmount)(this);var e=this.state[m.DRAWING_MANAGER];e&&e.setMap(null)}},{key:"render",value:function(){return!1}},{key:"getDrawingMode",value:function(){return this.state[m.DRAWING_MANAGER].getDrawingMode()}}]),n}(c.default.PureComponent);f.propTypes={defaultDrawingMode:g.default.any,defaultOptions:g.default.any,drawingMode:g.default.any,options:g.default.any,onCircleComplete:g.default.func,onMarkerComplete:g.default.func,onOverlayComplete:g.default.func,onPolygonComplete:g.default.func,onPolylineComplete:g.default.func,onRectangleComplete:g.default.func},f.contextTypes=(0,a.default)({},m.MAP,g.default.object),n.default=f;var w={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},y={drawingMode:function(e,n){e.setDrawingMode(n)},options:function(e,n){e.setOptions(n)}}},3161:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(306),l=t(305),i=t(304),p=t(1081),s=t(313),c=t(314),g=t(316),d=t(315),m=t(1306),u=t(2686),f=t.n(u),w=window.google,y=Object(m.withGoogleMap)((function(e){return o.a.createElement(m.GoogleMap,{defaultZoom:15,defaultCenter:new w.maps.LatLng(47.646935,-122.303763)},o.a.createElement(f.a,{defaultDrawingMode:w.maps.drawing.OverlayType.CIRCLE,defaultOptions:{drawingControl:!0,drawingControlOptions:{position:w.maps.ControlPosition.TOP_CENTER,drawingModes:[w.maps.drawing.OverlayType.CIRCLE,w.maps.drawing.OverlayType.POLYGON,w.maps.drawing.OverlayType.POLYLINE,w.maps.drawing.OverlayType.RECTANGLE]},circleOptions:{fillColor:"#ff0000",fillOpacity:.2,strokeWeight:3,clickable:!1,editable:!0,zIndex:1},rectangleOptions:{fillColor:"#ff0000",fillOpacity:.2,strokeWeight:3,clickable:!1,editable:!0,zIndex:1}}}))})),M=function(e){Object(g.a)(t,e);var n=Object(d.a)(t);function t(){return Object(s.a)(this,t),n.apply(this,arguments)}return Object(c.a)(t,[{key:"render",value:function(){return o.a.createElement(y,{containerElement:o.a.createElement("div",{className:"cr-embed-responsive cr-embed-responsive-21by9"}),mapElement:o.a.createElement("div",{className:"cr-embed-responsive-item"})})}}]),t}(a.Component);n.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(l.a,{title:"Drawing View Google Map",description:"A wrapper around google.maps.drawing.DrawingManager",refUrl:"https://developers.google.com/maps/documentation/javascript/reference/#DrawingManager/"}),o.a.createElement(i.a,null,o.a.createElement(p.a,{item:!0,xs:12},o.a.createElement(r.a,{title:"Drawing View Map",component:M,source:"import React, {Component} from 'react';\nimport {GoogleMap, withGoogleMap} from 'react-google-maps';\nimport DrawingManager from 'react-google-maps/lib/components/drawing/DrawingManager';\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"><\/script> to your HTML to provide google.maps reference\n */\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/drawing-tools\n *\n * Note: requires the Google Maps drawing API library in your script src\n *\n * Credits: thanks @idolize for the contribution!\n */\n\nconst google = window.google;\n\nconst DrawingExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={new google.maps.LatLng(47.646935, -122.303763)}>\n    <DrawingManager\n      defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\n      defaultOptions={{\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [\n            google.maps.drawing.OverlayType.CIRCLE,\n            google.maps.drawing.OverlayType.POLYGON,\n            google.maps.drawing.OverlayType.POLYLINE,\n            google.maps.drawing.OverlayType.RECTANGLE,\n          ],\n        },\n        circleOptions: {\n          fillColor: '#ff0000',\n          fillOpacity: 0.2,\n          strokeWeight: 3,\n          clickable: false,\n          editable: true,\n          zIndex: 1,\n        },\n        rectangleOptions: {\n          fillColor: '#ff0000',\n          fillOpacity: 0.2,\n          strokeWeight: 3,\n          clickable: false,\n          editable: true,\n          zIndex: 1,\n        },\n      }}\n    />\n  </GoogleMap>\n));\nexport default class DrawingView extends Component {\n  render() {\n    return (\n      <DrawingExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n      />\n    );\n  }\n}\n"}))))}}}]);
//# sourceMappingURL=125.fb0d7e6f.chunk.js.map