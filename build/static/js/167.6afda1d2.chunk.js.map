{"version":3,"sources":["modules/thirdParty/googleMap/EventHandler/Components/EventHandler.js","modules/thirdParty/googleMap/EventHandler/index.js","webpack:///./src/modules/thirdParty/googleMap/EventHandler/Components/EventHandler.js?76bd"],"names":["google","window","GettingPropertiesExampleGoogleMap","withGoogleMap","props","ref","onMapMounted","onZoomChanged","defaultCenter","center","zoom","defaultPosition","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","this","_map","nextZoom","getZoom","setState","containerElement","className","mapElement","maps","LatLng","Component","EventHandlerEx","ComponentHeader","title","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"0NAGMA,EAASC,OAAOD,OAEhBE,EAAoCC,yBAAc,SAACC,GAAD,OACtD,kBAAC,YAAD,CACEC,IAAKD,EAAME,aACXC,cAAeH,EAAMG,cACrBC,cAAeJ,EAAMK,OACrBC,KAAMN,EAAMM,MACZ,kBAAC,aAAD,CAAYC,gBAAiBP,EAAMK,QACjC,6BAAML,EAAMQ,cAUGC,E,4MACnBC,MAAQ,CACNJ,KAAM,GACNE,QAAQ,yB,EAGVG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gB,EACnBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,+DAEHE,GACfC,KAAKC,KAAOF,I,0CAIZ,IAAMG,EAAWF,KAAKC,KAAKE,UACvBD,IAAaF,KAAKL,MAAMJ,MAG1BS,KAAKI,SAAS,CACZb,KAAMW,EACNT,QAAQ,SAAD,OAAWS,O,+BAMtB,OACE,kBAACnB,EAAD,CACEsB,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BnB,aAAca,KAAKJ,iBACnBR,cAAeY,KAAKF,kBACpBR,OAAQ,IAAIT,EAAO2B,KAAKC,OAAO,WAAY,YAC3ClB,KAAMS,KAAKL,MAAMJ,KACjBE,QAASO,KAAKL,MAAMF,c,GApCciB,aCU3BC,UArBQ,WACrB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,2BACNC,OAAO,uEAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEN,MAAM,oBACNO,UAAW1B,EACX2B,OCxBG","file":"static/js/167.6afda1d2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\n\nconst google = window.google;\n\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}>\n    <InfoWindow defaultPosition={props.center}>\n      <div>{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport EventHandler from './Components/EventHandler';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport EventHandlerSource from '!raw-loader!./Components/EventHandler';\n\nconst EventHandlerEx = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Event Handler Google Map'\n        refUrl='http://google-map-react.github.io/google-map-react/map/balderdash/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Event Handler Map'\n            component={EventHandler}\n            source={EventHandlerSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default EventHandlerEx;\n","export default \"import React, {Component} from 'react';\\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\\n\\nconst google = window.google;\\n\\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\\n  <GoogleMap\\n    ref={props.onMapMounted}\\n    onZoomChanged={props.onZoomChanged}\\n    defaultCenter={props.center}\\n    zoom={props.zoom}>\\n    <InfoWindow defaultPosition={props.center}>\\n      <div>{props.content}</div>\\n    </InfoWindow>\\n  </GoogleMap>\\n));\\n\\n/*\\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\\n *\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\n */\\nexport default class EventHandler extends Component {\\n  state = {\\n    zoom: 15,\\n    content: `Change the zoom level`,\\n  };\\n\\n  handleMapMounted = this.handleMapMounted.bind(this);\\n  handleZoomChanged = this.handleZoomChanged.bind(this);\\n\\n  handleMapMounted(map) {\\n    this._map = map;\\n  }\\n\\n  handleZoomChanged() {\\n    const nextZoom = this._map.getZoom();\\n    if (nextZoom !== this.state.zoom) {\\n      // Notice: Check zoom equality here,\\n      // or it will fire zoom_changed event infinitely\\n      this.setState({\\n        zoom: nextZoom,\\n        content: `Zoom: ${nextZoom}`,\\n      });\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <GettingPropertiesExampleGoogleMap\\n        containerElement={\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\n        }\\n        mapElement={<div className='cr-embed-responsive-item' />}\\n        onMapMounted={this.handleMapMounted}\\n        onZoomChanged={this.handleZoomChanged}\\n        center={new google.maps.LatLng(47.646935, -122.303763)}\\n        zoom={this.state.zoom}\\n        content={this.state.content}\\n      />\\n    );\\n  }\\n}\\n\";"],"sourceRoot":""}