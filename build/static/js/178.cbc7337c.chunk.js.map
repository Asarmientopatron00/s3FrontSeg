{"version":3,"sources":["modules/thirdParty/reactNotification/helpers/randomize.js","modules/thirdParty/reactNotification/helpers/notification.js","modules/thirdParty/reactNotification/AnimationEntrance/index.js","modules/thirdParty/reactNotification/AnimationExit/index.js","modules/thirdParty/reactNotification/Insert/index.js","modules/thirdParty/reactNotification/Container/index.js","modules/thirdParty/reactNotification/CustomContent/index.js","modules/thirdParty/reactNotification/Type/index.js","modules/thirdParty/reactNotification/index.js","webpack:///./src/modules/thirdParty/reactNotification/AnimationEntrance/index.js?707b","webpack:///./src/modules/thirdParty/reactNotification/AnimationExit/index.js?ac27","webpack:///./src/modules/thirdParty/reactNotification/Container/index.js?c48c","webpack:///./src/modules/thirdParty/reactNotification/CustomContent/index.js?3c36","webpack:///./src/modules/thirdParty/reactNotification/Insert/index.js?0058","webpack:///./src/modules/thirdParty/reactNotification/Type/index.js?9c14"],"names":["containers","types","successMessages","errorMessages","warningMessages","defaultMessages","infoMessages","customMessages","getContainer","Math","floor","random","length","getType","index","getTitle","type","getMessage","notifications","title","message","container","insert","animationIn","animationOut","slidingEnter","duration","timingFunction","delay","slidingExit","touchRevert","touchSlidingExit","swipe","fade","dismiss","onScreen","pauseOnHover","waitForAnimation","showIcon","click","touch","AnimationEntrance","add","htmlClasses","store","addNotification","Object","assign","notification","Box","display","flexWrap","mr","my","Button","color","variant","onClick","AnimationExit","InsertExample","props","classes","makeStyles","theme","btnRoot","marginBottom","marginTop","marginLeft","marginRight","useStyles","className","ContainerExample","React","Component","CustomContentExample","addCustomIcon","iconClassName","width","content","Typography","flexDirection","src","alt","component","px","py","this","TypeExample","ReactNotificationEx","ComponentHeader","description","refUrl","name","isMobile","GridContainer","Grid","item","xs","ComponentCard","source","Container","CustomContent","Insert","Type"],"mappings":"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","file":"static/js/178.cbc7337c.chunk.js","sourcesContent":["const containers = [\n  'top-left',\n  'top-right',\n  'top-center',\n  'bottom-left',\n  'bottom-right',\n  'bottom-center',\n];\n\nconst types = ['success', 'danger', 'warning', 'default', 'info', 'awesome'];\n\nconst successMessages = [\n  'All your db has been successfully updated',\n  'Your meeting has been successfully attended',\n  'Document has been successfully updated',\n];\n\nconst errorMessages = [\n  'You have no access rights',\n  'An error occurred while saving',\n  'Document has been permanently removed',\n];\n\nconst warningMessages = [\n  'Your connection is not private',\n  \"Your local datetime is not in sync with server's date\",\n  \"You've already done this action\",\n];\n\nconst defaultMessages = [\n  'All your messages have been logged',\n  'A new issue has been reported by Office Desk',\n];\n\nconst infoMessages = [\n  'A new appointment has been created in your agenda',\n  'You have an appointment at 4PM today',\n];\n\nconst customMessages = [\n  'Custom types can be used as well. Pretty cool, huh!?',\n  'Types are easily configurable. Nice, huh?!',\n];\n\nexport const getContainer = () => {\n  return containers[Math.floor(Math.random() * containers.length)];\n};\n\nexport const getType = () => {\n  const index = Math.floor(Math.random() * types.length);\n  return types[index];\n};\n\nexport const getTitle = (type) => {\n  switch (type) {\n    case 'success':\n      return 'Success';\n    case 'danger':\n      return 'Error';\n    case 'warning':\n      return 'Warning';\n    case 'info':\n      return undefined;\n    case 'default':\n    case 'awesome':\n      return undefined;\n    default:\n      return undefined;\n  }\n};\n\nexport const getMessage = (type) => {\n  switch (type) {\n    case 'success':\n      return successMessages[\n        Math.floor(Math.random() * successMessages.length)\n      ];\n    case 'danger':\n      return errorMessages[Math.floor(Math.random() * errorMessages.length)];\n    case 'warning':\n      return warningMessages[\n        Math.floor(Math.random() * warningMessages.length)\n      ];\n    case 'info':\n      return infoMessages[Math.floor(Math.random() * infoMessages.length)];\n    case 'default':\n      return defaultMessages[\n        Math.floor(Math.random() * defaultMessages.length)\n      ];\n    case 'awesome':\n      return customMessages[Math.floor(Math.random() * customMessages.length)];\n    default:\n      return defaultMessages[\n        Math.floor(Math.random() * defaultMessages.length)\n      ];\n  }\n};\n","const notifications = {\n  title: 'Awesomeness',\n  message: 'Awesome Notifications!',\n  type: 'success',\n  container: 'top-right',\n  insert: 'top',\n\n  animationIn: ['animated', 'fadeIn'],\n  animationOut: ['animated', 'faster', 'fadeOut'],\n\n  slidingEnter: {\n    duration: 300,\n    timingFunction: 'linear',\n    delay: 0,\n  },\n\n  slidingExit: {\n    duration: 300,\n    timingFunction: 'linear',\n    delay: 0,\n  },\n\n  touchRevert: {\n    duration: 600,\n    timingFunction: 'linear',\n    delay: 0,\n  },\n\n  touchSlidingExit: {\n    swipe: {\n      duration: 600,\n      timingFunction: 'linear',\n      delay: 0,\n    },\n    fade: {\n      duration: 300,\n      timingFunction: 'linear',\n      delay: 0,\n    },\n  },\n\n  dismiss: {\n    duration: 5000,\n    onScreen: false,\n    pauseOnHover: true,\n    waitForAnimation: false,\n    showIcon: true,\n    click: true,\n    touch: true,\n  },\n};\nexport default notifications;\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\nimport notification from '../helpers/notification';\nimport Box from '@material-ui/core/Box';\n\nconst AnimationEntrance = () => {\n  const add = (htmlClasses) => {\n    const type = getType();\n    return store.addNotification(\n      Object.assign({}, notification, {\n        animationIn: htmlClasses,\n        container: getContainer(),\n        message: getMessage(type),\n        type,\n      }),\n    );\n  };\n\n  return (\n    <Box display='flex' flexWrap='wrap'>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated bounceIn'])}>\n          Bounce In\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated fadeIn'])}>\n          Fade In\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated flipInX'])}>\n          Flip In X\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated flipInY'])}>\n          Flip In Y\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated zoomIn'])}>\n          Zoom In\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated flash'])}>\n          Flash\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated jackInTheBox'])}>\n          Jack In The Box\n        </Button>\n      </Box>\n    </Box>\n  );\n};\nexport default AnimationEntrance;\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\n\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\nimport notification from '../helpers/notification';\nimport Box from '@material-ui/core/Box';\n\nconst AnimationExit = () => {\n  const add = (htmlClasses) => {\n    const type = getType();\n    return store.addNotification(\n      Object.assign({}, notification, {\n        slidingExit: {delay: 300},\n        animationOut: htmlClasses,\n        container: getContainer(),\n        message: getMessage(type),\n        type,\n      }),\n    );\n  };\n\n  return (\n    <Box display='flex' flexWrap='wrap'>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated bounceOut'])}>\n          Bounce Out\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated fadeOut'])}>\n          Fade Out\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated flipOutX'])}>\n          Flip Out X\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated flipOutY'])}>\n          Flip Out Y\n        </Button>\n      </Box>\n      <Box mr={2} my={1}>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={() => add(['animated zoomOut'])}>\n          Zoom Out\n        </Button>\n      </Box>\n    </Box>\n  );\n};\nexport default AnimationExit;\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\n\nimport notification from '../helpers/notification';\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\nimport Box from '@material-ui/core/Box';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst InsertExample = (props) => {\n  const add = (insert) => {\n    const type = getType();\n    return store.addNotification(\n      Object.assign({}, notification, {\n        type,\n        insert,\n        message: getMessage(type),\n        title: getTitle(type),\n      }),\n    );\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    btnRoot: {\n      marginBottom: 4,\n      marginTop: 4,\n      marginLeft: 8,\n      marginRight: 8,\n    },\n  }));\n  const classes = useStyles(props);\n\n  return (\n    <Box>\n      <Button\n        className={classes.btnRoot}\n        color='primary'\n        variant='contained'\n        onClick={() => add('top')}>\n        Top\n      </Button>\n      <Button\n        className={classes.btnRoot}\n        color='primary'\n        variant='contained'\n        onClick={() => add('bottom')}>\n        Bottom\n      </Button>\n    </Box>\n  );\n};\nexport default InsertExample;\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\n\nimport notification from '../helpers/notification';\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\nimport Box from '@material-ui/core/Box';\n\nexport default class ContainerExample extends React.Component {\n  add = (container) => {\n    const type = getType();\n\n    return store.addNotification(\n      Object.assign({}, notification, {\n        title: getTitle(type),\n        message: getMessage(type),\n        container,\n        type,\n      }),\n    );\n  };\n\n  render() {\n    return (\n      <Box display='flex' flexWrap='wrap'>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('top-left')}>\n            Top Left\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('top-right')}>\n            Top Right\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('top-center')}>\n            Top Center\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('bottom-left')}>\n            Bottom Left\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('bottom-right')}>\n            Bottom Right\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('bottom-center')}>\n            Bottom Center\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\n\nimport notification from '../helpers/notification';\nimport {getContainer} from '../helpers/randomize';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class CustomContentExample extends React.Component {\n  addCustomIcon = (type, iconClassName) => {\n    let message;\n    if (type === 'success') {\n      message = 'Your agenda has been successfully synced';\n    } else if (type === 'warning') {\n      message = 'Warning! All your db will be lost if you proceed';\n    } else if (type === 'danger') {\n      message = 'Error! You have no update rights';\n    }\n\n    store.addNotification(\n      Object.assign({}, notification, {\n        width: 275,\n        container: getContainer(),\n        content: (\n          <Box className={`notification-custom-${type}`}>\n            <Box className='notification-custom-icon'>\n              <i className={iconClassName} />\n            </Box>\n            <Box className='notification-custom-content'>\n              <Typography className='notification-message'>\n                {message}\n              </Typography>\n            </Box>\n          </Box>\n        ),\n      }),\n    );\n  };\n\n  add = () => {\n    store.addNotification(\n      Object.assign({}, notification, {\n        width: 325,\n        container: getContainer(),\n        content: (\n          <Box\n            display='flex'\n            flexDirection='row'\n            className='custom-image-content'>\n            <img src='/assets/images/logo.png' alt='' />\n            <Box component='span' px={8} py={2}>\n              Crema Admin\n            </Box>\n          </Box>\n        ),\n      }),\n    );\n  };\n\n  render() {\n    return (\n      <Box display='flex' flexWrap='wrap'>\n        <Box mr={2} my={1}>\n          <Button color='primary' variant='contained' onClick={this.add}>\n            Custom Image Content\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() =>\n              this.addCustomIcon('success', 'fas fa-check-circle')\n            }>\n            Success with Icon\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() =>\n              this.addCustomIcon('danger', 'fas fa-exclamation-circle')\n            }>\n            Danger with Icon\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() =>\n              this.addCustomIcon('warning', 'fas fa-exclamation-triangle')\n            }>\n            Warning with Icon\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport {store} from 'react-notifications-component';\nimport Button from '@material-ui/core/Button';\n\nimport notification from '../helpers/notification';\nimport {getContainer, getMessage, getTitle} from '../helpers/randomize';\nimport Box from '@material-ui/core/Box';\n\nexport default class TypeExample extends React.Component {\n  add = (type) => {\n    return store.addNotification(\n      Object.assign({}, notification, {\n        type,\n        title: getTitle(type),\n        message: getMessage(type),\n        container: getContainer(),\n      }),\n    );\n  };\n\n  render() {\n    return (\n      <Box display='flex' flexWrap='wrap'>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('success')}>\n            Success\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('default')}>\n            Default\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('warning')}>\n            Warning\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('info')}>\n            Info\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('danger')}>\n            Danger\n          </Button>\n        </Box>\n        <Box mr={2} my={1}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => this.add('awesome')}>\n            Custom\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport AnimationEntrance from './AnimationEntrance';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AnimationEntranceSource from '!raw-loader!./AnimationEntrance';\nimport AnimationExit from './AnimationExit';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AnimationExitSource from '!raw-loader!./AnimationExit';\nimport Insert from './Insert';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InsertSource from '!raw-loader!./Insert';\nimport Container from './Container';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ContainerSource from '!raw-loader!./Container';\nimport CustomContent from './CustomContent';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomContentSource from '!raw-loader!./CustomContent';\nimport Type from './Type';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TypeSource from '!raw-loader!./Type';\nimport ReactNotification from 'react-notifications-component';\n\nconst ReactNotificationEx = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='React Notifications'\n        description='Delightful and highly customisable React Component to notify your users.'\n        refUrl='https://teodosii.github.io/react-notifications-component//'\n      />\n\n      <ReactNotification\n        types={[\n          {\n            htmlClasses: ['notification-awesome'],\n            name: 'awesome',\n          },\n        ]}\n        isMobile={true}\n      />\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Animation Entrance'\n            description='Entrance animation can be customised by specifying CSS classes'\n            component={AnimationEntrance}\n            source={AnimationEntranceSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Animation Exit'\n            description='Exit animation can be customised by specifying CSS classes'\n            component={AnimationExit}\n            source={AnimationExitSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Container'\n            description='Container can be set from predefined values top-left, top-right, top-center, bottom-left, bottom-right, bottom-center'\n            component={Container}\n            source={ContainerSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Custom Content'\n            description=\"With react-notifications-component notification's content can be customised to suit your needs.\"\n            component={CustomContent}\n            source={CustomContentSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Insert'\n            description='Insertion in react-notifications can be done either at the top or at the bottom of the container'\n            component={Insert}\n            source={InsertSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Type'\n            description='Type can be set from predefined values success, default, warning, info, danger or custom to suit your needs'\n            component={Type}\n            source={TypeSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ReactNotificationEx;\n","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\\nimport notification from '../helpers/notification';\\nimport Box from '@material-ui/core/Box';\\n\\nconst AnimationEntrance = () => {\\n  const add = (htmlClasses) => {\\n    const type = getType();\\n    return store.addNotification(\\n      Object.assign({}, notification, {\\n        animationIn: htmlClasses,\\n        container: getContainer(),\\n        message: getMessage(type),\\n        type,\\n      }),\\n    );\\n  };\\n\\n  return (\\n    <Box display='flex' flexWrap='wrap'>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated bounceIn'])}>\\n          Bounce In\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated fadeIn'])}>\\n          Fade In\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated flipInX'])}>\\n          Flip In X\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated flipInY'])}>\\n          Flip In Y\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated zoomIn'])}>\\n          Zoom In\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated flash'])}>\\n          Flash\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated jackInTheBox'])}>\\n          Jack In The Box\\n        </Button>\\n      </Box>\\n    </Box>\\n  );\\n};\\nexport default AnimationEntrance;\\n\";","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\n\\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\\nimport notification from '../helpers/notification';\\nimport Box from '@material-ui/core/Box';\\n\\nconst AnimationExit = () => {\\n  const add = (htmlClasses) => {\\n    const type = getType();\\n    return store.addNotification(\\n      Object.assign({}, notification, {\\n        slidingExit: {delay: 300},\\n        animationOut: htmlClasses,\\n        container: getContainer(),\\n        message: getMessage(type),\\n        type,\\n      }),\\n    );\\n  };\\n\\n  return (\\n    <Box display='flex' flexWrap='wrap'>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated bounceOut'])}>\\n          Bounce Out\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated fadeOut'])}>\\n          Fade Out\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated flipOutX'])}>\\n          Flip Out X\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated flipOutY'])}>\\n          Flip Out Y\\n        </Button>\\n      </Box>\\n      <Box mr={2} my={1}>\\n        <Button\\n          color='primary'\\n          variant='contained'\\n          onClick={() => add(['animated zoomOut'])}>\\n          Zoom Out\\n        </Button>\\n      </Box>\\n    </Box>\\n  );\\n};\\nexport default AnimationExit;\\n\";","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\n\\nimport notification from '../helpers/notification';\\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\\nimport Box from '@material-ui/core/Box';\\n\\nexport default class ContainerExample extends React.Component {\\n  add = (container) => {\\n    const type = getType();\\n\\n    return store.addNotification(\\n      Object.assign({}, notification, {\\n        title: getTitle(type),\\n        message: getMessage(type),\\n        container,\\n        type,\\n      }),\\n    );\\n  };\\n\\n  render() {\\n    return (\\n      <Box display='flex' flexWrap='wrap'>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('top-left')}>\\n            Top Left\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('top-right')}>\\n            Top Right\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('top-center')}>\\n            Top Center\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('bottom-left')}>\\n            Bottom Left\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('bottom-right')}>\\n            Bottom Right\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('bottom-center')}>\\n            Bottom Center\\n          </Button>\\n        </Box>\\n      </Box>\\n    );\\n  }\\n}\\n\";","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\n\\nimport notification from '../helpers/notification';\\nimport {getContainer} from '../helpers/randomize';\\nimport Box from '@material-ui/core/Box';\\nimport Typography from '@material-ui/core/Typography';\\n\\nexport default class CustomContentExample extends React.Component {\\n  addCustomIcon = (type, iconClassName) => {\\n    let message;\\n    if (type === 'success') {\\n      message = 'Your agenda has been successfully synced';\\n    } else if (type === 'warning') {\\n      message = 'Warning! All your db will be lost if you proceed';\\n    } else if (type === 'danger') {\\n      message = 'Error! You have no update rights';\\n    }\\n\\n    store.addNotification(\\n      Object.assign({}, notification, {\\n        width: 275,\\n        container: getContainer(),\\n        content: (\\n          <Box className={`notification-custom-${type}`}>\\n            <Box className='notification-custom-icon'>\\n              <i className={iconClassName} />\\n            </Box>\\n            <Box className='notification-custom-content'>\\n              <Typography className='notification-message'>\\n                {message}\\n              </Typography>\\n            </Box>\\n          </Box>\\n        ),\\n      }),\\n    );\\n  };\\n\\n  add = () => {\\n    store.addNotification(\\n      Object.assign({}, notification, {\\n        width: 325,\\n        container: getContainer(),\\n        content: (\\n          <Box\\n            display='flex'\\n            flexDirection='row'\\n            className='custom-image-content'>\\n            <img src='/assets/images/logo.png' alt='' />\\n            <Box component='span' px={8} py={2}>\\n              Crema Admin\\n            </Box>\\n          </Box>\\n        ),\\n      }),\\n    );\\n  };\\n\\n  render() {\\n    return (\\n      <Box display='flex' flexWrap='wrap'>\\n        <Box mr={2} my={1}>\\n          <Button color='primary' variant='contained' onClick={this.add}>\\n            Custom Image Content\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            variant='contained'\\n            color='primary'\\n            onClick={() =>\\n              this.addCustomIcon('success', 'fas fa-check-circle')\\n            }>\\n            Success with Icon\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            variant='contained'\\n            color='primary'\\n            onClick={() =>\\n              this.addCustomIcon('danger', 'fas fa-exclamation-circle')\\n            }>\\n            Danger with Icon\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() =>\\n              this.addCustomIcon('warning', 'fas fa-exclamation-triangle')\\n            }>\\n            Warning with Icon\\n          </Button>\\n        </Box>\\n      </Box>\\n    );\\n  }\\n}\\n\";","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\n\\nimport notification from '../helpers/notification';\\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\\nimport Box from '@material-ui/core/Box';\\nimport {makeStyles} from '@material-ui/core/styles';\\n\\nconst InsertExample = (props) => {\\n  const add = (insert) => {\\n    const type = getType();\\n    return store.addNotification(\\n      Object.assign({}, notification, {\\n        type,\\n        insert,\\n        message: getMessage(type),\\n        title: getTitle(type),\\n      }),\\n    );\\n  };\\n\\n  const useStyles = makeStyles((theme) => ({\\n    btnRoot: {\\n      marginBottom: 4,\\n      marginTop: 4,\\n      marginLeft: 8,\\n      marginRight: 8,\\n    },\\n  }));\\n  const classes = useStyles(props);\\n\\n  return (\\n    <Box>\\n      <Button\\n        className={classes.btnRoot}\\n        color='primary'\\n        variant='contained'\\n        onClick={() => add('top')}>\\n        Top\\n      </Button>\\n      <Button\\n        className={classes.btnRoot}\\n        color='primary'\\n        variant='contained'\\n        onClick={() => add('bottom')}>\\n        Bottom\\n      </Button>\\n    </Box>\\n  );\\n};\\nexport default InsertExample;\\n\";","export default \"import React from 'react';\\nimport {store} from 'react-notifications-component';\\nimport Button from '@material-ui/core/Button';\\n\\nimport notification from '../helpers/notification';\\nimport {getContainer, getMessage, getTitle} from '../helpers/randomize';\\nimport Box from '@material-ui/core/Box';\\n\\nexport default class TypeExample extends React.Component {\\n  add = (type) => {\\n    return store.addNotification(\\n      Object.assign({}, notification, {\\n        type,\\n        title: getTitle(type),\\n        message: getMessage(type),\\n        container: getContainer(),\\n      }),\\n    );\\n  };\\n\\n  render() {\\n    return (\\n      <Box display='flex' flexWrap='wrap'>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('success')}>\\n            Success\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('default')}>\\n            Default\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('warning')}>\\n            Warning\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('info')}>\\n            Info\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('danger')}>\\n            Danger\\n          </Button>\\n        </Box>\\n        <Box mr={2} my={1}>\\n          <Button\\n            color='primary'\\n            variant='contained'\\n            onClick={() => this.add('awesome')}>\\n            Custom\\n          </Button>\\n        </Box>\\n      </Box>\\n    );\\n  }\\n}\\n\";"],"sourceRoot":""}