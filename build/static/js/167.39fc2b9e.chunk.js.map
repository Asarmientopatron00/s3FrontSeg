{"version":3,"sources":["modules/thirdParty/googleMap/PopUpInfo/Components/MapPopupInfo.js","modules/thirdParty/googleMap/PopUpInfo/index.js","webpack:///./src/modules/thirdParty/googleMap/PopUpInfo/Components/MapPopupInfo.js?9341"],"names":["google","window","PopUpInfoWindowExampleGoogleMap","withGoogleMap","props","defaultZoom","center","markers","map","marker","index","defaultIcon","key","position","onClick","onMarkerClick","showInfo","onCloseClick","onMarkerClose","infoContent","MapPopupInfo","state","lat","lng","maps","LatLng","Box","display","id","xmlns","width","height","viewBox","d","ml","handleMarkerClick","bind","handleMarkerClose","targetMarker","this","setState","containerElement","className","mapElement","Component","PopUpInfoEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","PopUpInfo","source"],"mappings":"yOAIMA,EAASC,OAAOD,OAEhBE,EAAkCC,yBAAc,SAACC,GAAD,OACpD,kBAAC,YAAD,CAAWC,YAAa,GAAIC,OAAQF,EAAME,QACvCF,EAAMG,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,kBAAC,SAAD,CACEC,YAAa,4BACbC,IAAKF,EACLG,SAAUJ,EAAOI,SACjBC,QAAS,kBAAMV,EAAMW,cAAcN,KAMlCA,EAAOO,UACN,kBAAC,aAAD,CAAYC,aAAc,kBAAMb,EAAMc,cAAcT,KAClD,6BAAMA,EAAOU,sBAeJC,E,4MACnBC,MAAQ,CACNf,OAAQ,CACNgB,IAAK,UACLC,KAAM,YAIRhB,QAAS,CACP,CACEM,SAAU,IAAIb,EAAOwB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,kBAACO,EAAA,EAAD,CAAKC,QAAQ,QACX,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BACEC,EAAE,sQAQR,kBAACP,EAAA,EAAD,CAAKQ,GAAI,GACP,gDACA,iDACA,mDAKR,CACErB,SAAU,IAAIb,EAAOwB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,kBAACO,EAAA,EAAD,CAAKC,QAAQ,QACX,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BACEC,EAAE,sSAQR,kBAACP,EAAA,EAAD,CAAKQ,GAAI,GACP,4FAGA,oDACA,qD,EAQZC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gB,EACpBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,gEAGFE,GAChBC,KAAKC,SAAS,CACZjC,QAASgC,KAAKlB,MAAMd,QAAQC,KAAI,SAACC,GAC/B,OAAIA,IAAW6B,EACN,2BACF7B,GADL,IAEEO,UAAU,IAGPP,S,wCAKK6B,GAChBC,KAAKC,SAAS,CACZjC,QAASgC,KAAKlB,MAAMd,QAAQC,KAAI,SAACC,GAC/B,OAAIA,IAAW6B,EACN,2BACF7B,GADL,IAEEO,UAAU,IAGPP,S,+BAMX,OACE,kBAACP,EAAD,CACEuC,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BpC,OAAQiC,KAAKlB,MAAMf,OACnBC,QAASgC,KAAKlB,MAAMd,QACpBQ,cAAewB,KAAKJ,kBACpBjB,cAAeqB,KAAKF,wB,GAlHcO,aCH3BC,UAtBK,WAClB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,wBACNC,YAAY,0CACZC,OAAO,2FAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,wBACNQ,UAAWC,EACXC,OCzBG","file":"static/js/167.39fc2b9e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from 'react-google-maps';\nimport Box from '@material-ui/core/Box';\n\nconst google = window.google;\n\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap defaultZoom={15} center={props.center}>\n    {props.markers.map((marker, index) => (\n      <Marker\n        defaultIcon={'/assets/images/marker.png'}\n        key={index}\n        position={marker.position}\n        onClick={() => props.onMarkerClick(marker)}>\n        {/*\n          Show info window only if the 'showInfo' key of the marker is true.\n          That is, when the Marker pin has been clicked and 'onCloseClick' has been\n          Successfully fired.\n        */}\n        {marker.showInfo && (\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\n            <div>{marker.infoContent}</div>\n          </InfoWindow>\n        )}\n      </Marker>\n    ))}\n  </GoogleMap>\n));\n\n/*\n *\n *  Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script>\n *  to your HTML to provide google.maps reference\n *\n *  @author: @chiwoojo\n */\nexport default class MapPopupInfo extends Component {\n  state = {\n    center: {\n      lat: 47.646935,\n      lng: -122.303763,\n    },\n\n    // array of objects of markers\n    markers: [\n      {\n        position: new google.maps.LatLng(47.646145, -122.303763),\n        showInfo: false,\n        infoContent: (\n          <Box display='flex'>\n            <div>\n              <svg\n                id='Layer_1'\n                xmlns='http://www.w3.org/2000/svg'\n                width='16'\n                height='16'\n                viewBox='0 0 16 16'>\n                <path\n                  d='M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z'\n                />\n              </svg>\n            </div>\n            <Box ml={4}>\n              <p>UW Medical Center</p>\n              <p>1959 NE Pacific St</p>\n              <p>Seattle, WA 98195</p>\n            </Box>\n          </Box>\n        ),\n      },\n      {\n        position: new google.maps.LatLng(47.647935, -122.303763),\n        showInfo: false,\n        infoContent: (\n          <Box display='flex'>\n            <div>\n              <svg\n                id='Layer_1'\n                xmlns='http://www.w3.org/2000/svg'\n                width='16'\n                height='16'\n                viewBox='0 0 16 16'>\n                <path\n                  d='M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z'\n                />\n              </svg>\n            </div>\n            <Box ml={4}>\n              <p>\n                University of Washington Intramural Activities (IMA) Building\n              </p>\n              <p>3924 Montlake Blvd NE</p>\n              <p>Seattle, WA 98195</p>\n            </Box>\n          </Box>\n        ),\n      },\n    ],\n  };\n\n  handleMarkerClick = this.handleMarkerClick.bind(this);\n  handleMarkerClose = this.handleMarkerClose.bind(this);\n\n  // Toggle to 'true' to show InfoWindow and re-renders Simple\n  handleMarkerClick(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map((marker) => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            showInfo: true,\n          };\n        }\n        return marker;\n      }),\n    });\n  }\n\n  handleMarkerClose(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map((marker) => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            showInfo: false,\n          };\n        }\n        return marker;\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <PopUpInfoWindowExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n        center={this.state.center}\n        markers={this.state.markers}\n        onMarkerClick={this.handleMarkerClick}\n        onMarkerClose={this.handleMarkerClose}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport PopUpInfo from './Components/MapPopupInfo';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PopUpInfoSource from '!raw-loader!./Components/MapPopupInfo';\n\nconst PopUpInfoEx = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='InfoWindow Google Map'\n        description='A wrapper around google.maps.InfoWindow'\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoWindow'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Google Map InfoWindow'\n            component={PopUpInfo}\n            source={PopUpInfoSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default PopUpInfoEx;\n","export default \"import React, {Component} from 'react';\\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from 'react-google-maps';\\nimport Box from '@material-ui/core/Box';\\n\\nconst google = window.google;\\n\\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap((props) => (\\n  <GoogleMap defaultZoom={15} center={props.center}>\\n    {props.markers.map((marker, index) => (\\n      <Marker\\n        defaultIcon={'/assets/images/marker.png'}\\n        key={index}\\n        position={marker.position}\\n        onClick={() => props.onMarkerClick(marker)}>\\n        {/*\\n          Show info window only if the 'showInfo' key of the marker is true.\\n          That is, when the Marker pin has been clicked and 'onCloseClick' has been\\n          Successfully fired.\\n        */}\\n        {marker.showInfo && (\\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\\n            <div>{marker.infoContent}</div>\\n          </InfoWindow>\\n        )}\\n      </Marker>\\n    ))}\\n  </GoogleMap>\\n));\\n\\n/*\\n *\\n *  Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script>\\n *  to your HTML to provide google.maps reference\\n *\\n *  @author: @chiwoojo\\n */\\nexport default class MapPopupInfo extends Component {\\n  state = {\\n    center: {\\n      lat: 47.646935,\\n      lng: -122.303763,\\n    },\\n\\n    // array of objects of markers\\n    markers: [\\n      {\\n        position: new google.maps.LatLng(47.646145, -122.303763),\\n        showInfo: false,\\n        infoContent: (\\n          <Box display='flex'>\\n            <div>\\n              <svg\\n                id='Layer_1'\\n                xmlns='http://www.w3.org/2000/svg'\\n                width='16'\\n                height='16'\\n                viewBox='0 0 16 16'>\\n                <path\\n                  d='M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z'\\n                />\\n              </svg>\\n            </div>\\n            <Box ml={4}>\\n              <p>UW Medical Center</p>\\n              <p>1959 NE Pacific St</p>\\n              <p>Seattle, WA 98195</p>\\n            </Box>\\n          </Box>\\n        ),\\n      },\\n      {\\n        position: new google.maps.LatLng(47.647935, -122.303763),\\n        showInfo: false,\\n        infoContent: (\\n          <Box display='flex'>\\n            <div>\\n              <svg\\n                id='Layer_1'\\n                xmlns='http://www.w3.org/2000/svg'\\n                width='16'\\n                height='16'\\n                viewBox='0 0 16 16'>\\n                <path\\n                  d='M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z'\\n                />\\n              </svg>\\n            </div>\\n            <Box ml={4}>\\n              <p>\\n                University of Washington Intramural Activities (IMA) Building\\n              </p>\\n              <p>3924 Montlake Blvd NE</p>\\n              <p>Seattle, WA 98195</p>\\n            </Box>\\n          </Box>\\n        ),\\n      },\\n    ],\\n  };\\n\\n  handleMarkerClick = this.handleMarkerClick.bind(this);\\n  handleMarkerClose = this.handleMarkerClose.bind(this);\\n\\n  // Toggle to 'true' to show InfoWindow and re-renders Simple\\n  handleMarkerClick(targetMarker) {\\n    this.setState({\\n      markers: this.state.markers.map((marker) => {\\n        if (marker === targetMarker) {\\n          return {\\n            ...marker,\\n            showInfo: true,\\n          };\\n        }\\n        return marker;\\n      }),\\n    });\\n  }\\n\\n  handleMarkerClose(targetMarker) {\\n    this.setState({\\n      markers: this.state.markers.map((marker) => {\\n        if (marker === targetMarker) {\\n          return {\\n            ...marker,\\n            showInfo: false,\\n          };\\n        }\\n        return marker;\\n      }),\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <PopUpInfoWindowExampleGoogleMap\\n        containerElement={\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\n        }\\n        mapElement={<div className='cr-embed-responsive-item' />}\\n        center={this.state.center}\\n        markers={this.state.markers}\\n        onMarkerClick={this.handleMarkerClick}\\n        onMarkerClose={this.handleMarkerClose}\\n      />\\n    );\\n  }\\n}\\n\";"],"sourceRoot":""}