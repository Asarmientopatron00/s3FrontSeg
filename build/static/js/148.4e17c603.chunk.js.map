{"version":3,"sources":["modules/muiComponents/navigation/BreadCrumbs/SimpleBreadcrumbs.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/SimpleBreadcrumbs.js?ab23","modules/muiComponents/navigation/BreadCrumbs/CustomSeparator.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/CustomSeparator.js?8535","modules/muiComponents/navigation/BreadCrumbs/BreadcrumbsWithIcons.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/BreadcrumbsWithIcons.js?13c0","modules/muiComponents/navigation/BreadCrumbs/CollapsedBreadcrumbs.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/CollapsedBreadcrumbs.js?3dc1","modules/muiComponents/navigation/BreadCrumbs/CustomizedBreadcrumbs.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/CustomizedBreadcrumbs.js?8230","modules/muiComponents/navigation/BreadCrumbs/IntegrationWithRreactRouter.js","modules/muiComponents/navigation/BreadCrumbs/index.js","webpack:///./src/modules/muiComponents/navigation/BreadCrumbs/IntegrationWithRreactRouter.js?681f"],"names":["useStyles","makeStyles","theme","root","justifyContent","flexWrap","paper","padding","spacing","handleClick","event","preventDefault","alert","SimpleBreadcrumbs","classes","className","Paper","elevation","Breadcrumbs","aria-label","Link","color","href","onClick","Typography","aria-current","CustomSeparator","separator","fontSize","link","display","icon","marginRight","width","height","IconBreadcrumbs","CollapsedBreadcrumbs","maxItems","StyledBreadcrumb","withStyles","backgroundColor","palette","grey","fontWeight","typography","fontWeightRegular","boxShadow","shadows","emphasize","Chip","avatar","background","linkRoot","text","primary","CustomizedBreadcrumbs","component","label","Avatar","deleteIcon","onDelete","breadcrumbNameMap","ListItemLink","props","to","open","other","ListItem","button","RouterLink","ListItemText","flexDirection","lists","marginTop","nested","paddingLeft","LinkRouter","RouterBreadcrumbs","React","useState","setOpen","initialEntries","initialIndex","pathnames","location","pathname","split","filter","x","map","value","index","last","length","slice","join","key","List","prevOpen","Collapse","in","timeout","unmountOnExit","disablePadding","BreadCrumbs","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source","BreadcrumbsWithIcons","IntegrationWithRreactRouter"],"mappings":"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","file":"static/js/148.4e17c603.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function SimpleBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Link\n            color='text.primary'\n            href='/components/breadcrumbs/'\n            onClick={handleClick}\n            aria-current='page'>\n            Breadcrumb\n          </Link>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Link\n            color='text.primary'\n            href='/components/breadcrumbs/'\n            onClick={handleClick}\n            aria-current='page'>\n            Breadcrumb\n          </Link>\n        </Breadcrumbs>\n      </Paper>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport Link from '@material-ui/core/Link';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    justifyContent: 'center',\\n    flexWrap: 'wrap',\\n  },\\n  paper: {\\n    padding: theme.spacing(1, 2),\\n  },\\n}));\\n\\nfunction handleClick(event) {\\n  event.preventDefault();\\n  alert('You clicked a breadcrumb.');\\n}\\n\\nexport default function SimpleBreadcrumbs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Typography color='text.primary'>Breadcrumb</Typography>\\n        </Breadcrumbs>\\n      </Paper>\\n      <br />\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Link\\n            color='text.primary'\\n            href='/components/breadcrumbs/'\\n            onClick={handleClick}\\n            aria-current='page'>\\n            Breadcrumb\\n          </Link>\\n        </Breadcrumbs>\\n      </Paper>\\n      <br />\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Link\\n            color='text.primary'\\n            href='/components/breadcrumbs/'\\n            onClick={handleClick}\\n            aria-current='page'>\\n            Breadcrumb\\n          </Link>\\n        </Breadcrumbs>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function CustomSeparator() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs separator='›' aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs separator='-' aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize='small' />}\n          aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport Typography from '@material-ui/core/Typography';\\nimport Link from '@material-ui/core/Link';\\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    justifyContent: 'center',\\n    flexWrap: 'wrap',\\n  },\\n  paper: {\\n    padding: theme.spacing(1, 2),\\n  },\\n}));\\n\\nfunction handleClick(event) {\\n  event.preventDefault();\\n  alert('You clicked a breadcrumb.');\\n}\\n\\nexport default function CustomSeparator() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs separator='›' aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Typography color='text.primary'>Breadcrumb</Typography>\\n        </Breadcrumbs>\\n      </Paper>\\n      <br />\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs separator='-' aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Typography color='text.primary'>Breadcrumb</Typography>\\n        </Breadcrumbs>\\n      </Paper>\\n      <br />\\n      <Paper elevation={0} className={classes.paper}>\\n        <Breadcrumbs\\n          separator={<NavigateNextIcon fontSize='small' />}\\n          aria-label='breadcrumb'>\\n          <Link color='inherit' href='/' onClick={handleClick}>\\n            Material-UI\\n          </Link>\\n          <Link\\n            color='inherit'\\n            href='/getting-started/installation/'\\n            onClick={handleClick}>\\n            Core\\n          </Link>\\n          <Typography color='text.primary'>Breadcrumb</Typography>\\n        </Breadcrumbs>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function IconBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link\n          color='inherit'\n          href='/'\n          onClick={handleClick}\n          className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Material-UI\n        </Link>\n        <Link\n          color='inherit'\n          href='/getting-started/installation/'\n          onClick={handleClick}\n          className={classes.link}>\n          <WhatshotIcon className={classes.icon} />\n          Core\n        </Link>\n        <Typography color='text.primary' className={classes.link}>\n          <GrainIcon className={classes.icon} />\n          Breadcrumb\n        </Typography>\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport Link from '@material-ui/core/Link';\\nimport HomeIcon from '@material-ui/icons/Home';\\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\\nimport GrainIcon from '@material-ui/icons/Grain';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    padding: theme.spacing(1, 2),\\n  },\\n  link: {\\n    display: 'flex',\\n  },\\n  icon: {\\n    marginRight: theme.spacing(0.5),\\n    width: 20,\\n    height: 20,\\n  },\\n}));\\n\\nfunction handleClick(event) {\\n  event.preventDefault();\\n  alert('You clicked a breadcrumb.');\\n}\\n\\nexport default function IconBreadcrumbs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper elevation={0} className={classes.root}>\\n      <Breadcrumbs aria-label='breadcrumb'>\\n        <Link\\n          color='inherit'\\n          href='/'\\n          onClick={handleClick}\\n          className={classes.link}>\\n          <HomeIcon className={classes.icon} />\\n          Material-UI\\n        </Link>\\n        <Link\\n          color='inherit'\\n          href='/getting-started/installation/'\\n          onClick={handleClick}\\n          className={classes.link}>\\n          <WhatshotIcon className={classes.icon} />\\n          Core\\n        </Link>\\n        <Typography color='text.primary' className={classes.link}>\\n          <GrainIcon className={classes.icon} />\\n          Breadcrumb\\n        </Typography>\\n      </Breadcrumbs>\\n    </Paper>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function CollapsedBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <Breadcrumbs maxItems={2} aria-label='breadcrumb'>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Home\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Catalog\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Accessories\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          New Collection\n        </Link>\n        <Typography color='text.primary'>Belts</Typography>\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport Typography from '@material-ui/core/Typography';\\nimport Link from '@material-ui/core/Link';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    justifyContent: 'center',\\n    flexWrap: 'wrap',\\n  },\\n  paper: {\\n    padding: theme.spacing(1, 2),\\n  },\\n}));\\n\\nfunction handleClick(event) {\\n  event.preventDefault();\\n  alert('You clicked a breadcrumb.');\\n}\\n\\nexport default function CollapsedBreadcrumbs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper elevation={0} className={classes.paper}>\\n      <Breadcrumbs maxItems={2} aria-label='breadcrumb'>\\n        <Link color='inherit' href='#' onClick={handleClick}>\\n          Home\\n        </Link>\\n        <Link color='inherit' href='#' onClick={handleClick}>\\n          Catalog\\n        </Link>\\n        <Link color='inherit' href='#' onClick={handleClick}>\\n          Accessories\\n        </Link>\\n        <Link color='inherit' href='#' onClick={handleClick}>\\n          New Collection\\n        </Link>\\n        <Typography color='text.primary'>Belts</Typography>\\n      </Breadcrumbs>\\n    </Paper>\\n  );\\n}\\n\";","import React from 'react';\nimport {emphasize, makeStyles, withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    background: 'none',\n    marginRight: -theme.spacing(1.5),\n  },\n  linkRoot: {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    '&:hover, &:focus': {\n      backgroundColor: 'transparent',\n      color: theme.palette.text.primary,\n    },\n  },\n}));\n\nexport default function CustomizedBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <StyledBreadcrumb\n          component='a'\n          className={classes.linkRoot}\n          href='#'\n          label='Home'\n          avatar={\n            <Avatar className={classes.avatar}>\n              <HomeIcon />\n            </Avatar>\n          }\n          onClick={handleClick}\n        />\n        <StyledBreadcrumb\n          component='a'\n          className={classes.linkRoot}\n          href='#'\n          label='Catalog'\n          onClick={handleClick}\n        />\n        <StyledBreadcrumb\n          label='Accessories'\n          className={classes.linkRoot}\n          deleteIcon={<ExpandMoreIcon />}\n          onClick={handleClick}\n          onDelete={handleClick}\n        />\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","export default \"import React from 'react';\\nimport {emphasize, makeStyles, withStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport Chip from '@material-ui/core/Chip';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport HomeIcon from '@material-ui/icons/Home';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\n\\nconst StyledBreadcrumb = withStyles((theme) => ({\\n  root: {\\n    backgroundColor: theme.palette.grey[100],\\n    height: theme.spacing(3),\\n    color: theme.palette.grey[800],\\n    fontWeight: theme.typography.fontWeightRegular,\\n    '&:hover, &:focus': {\\n      backgroundColor: theme.palette.grey[300],\\n    },\\n    '&:active': {\\n      boxShadow: theme.shadows[1],\\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\\n    },\\n  },\\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\\n\\nfunction handleClick(event) {\\n  event.preventDefault();\\n  alert('You clicked a breadcrumb.');\\n}\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    padding: theme.spacing(1),\\n  },\\n  avatar: {\\n    background: 'none',\\n    marginRight: -theme.spacing(1.5),\\n  },\\n  linkRoot: {\\n    backgroundColor: 'transparent',\\n    color: theme.palette.text.primary,\\n    '&:hover, &:focus': {\\n      backgroundColor: 'transparent',\\n      color: theme.palette.text.primary,\\n    },\\n  },\\n}));\\n\\nexport default function CustomizedBreadcrumbs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper elevation={0} className={classes.root}>\\n      <Breadcrumbs aria-label='breadcrumb'>\\n        <StyledBreadcrumb\\n          component='a'\\n          className={classes.linkRoot}\\n          href='#'\\n          label='Home'\\n          avatar={\\n            <Avatar className={classes.avatar}>\\n              <HomeIcon />\\n            </Avatar>\\n          }\\n          onClick={handleClick}\\n        />\\n        <StyledBreadcrumb\\n          component='a'\\n          className={classes.linkRoot}\\n          href='#'\\n          label='Catalog'\\n          onClick={handleClick}\\n        />\\n        <StyledBreadcrumb\\n          label='Accessories'\\n          className={classes.linkRoot}\\n          deleteIcon={<ExpandMoreIcon />}\\n          onClick={handleClick}\\n          onDelete={handleClick}\\n        />\\n      </Breadcrumbs>\\n    </Paper>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Link from '@material-ui/core/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport {MemoryRouter, Route} from 'react-router';\nimport {Link as RouterLink} from 'react-router-dom';\n\nconst breadcrumbNameMap = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts',\n};\n\nfunction ListItemLink(props) {\n  const {to, open, ...other} = props;\n  const primary = breadcrumbNameMap[to];\n\n  return (\n    <li>\n      <ListItem button component={RouterLink} to={to} {...other}>\n        <ListItemText primary={primary} />\n        {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  open: PropTypes.bool,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 360,\n  },\n  lists: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(1),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\n\nexport default function RouterBreadcrumbs() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <div className={classes.root}>\n        <Route>\n          {({location}) => {\n            const pathnames = location.pathname.split('/').filter((x) => x);\n\n            return (\n              <Breadcrumbs aria-label='breadcrumb'>\n                <LinkRouter color='inherit' to='/'>\n                  Home\n                </LinkRouter>\n                {pathnames.map((value, index) => {\n                  const last = index === pathnames.length - 1;\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                  return last ? (\n                    <Typography color='text.primary' key={to}>\n                      {breadcrumbNameMap[to]}\n                    </Typography>\n                  ) : (\n                    <LinkRouter color='inherit' to={to} key={to}>\n                      {breadcrumbNameMap[to]}\n                    </LinkRouter>\n                  );\n                })}\n              </Breadcrumbs>\n            );\n          }}\n        </Route>\n        <nav className={classes.lists} aria-label='mailbox folders'>\n          <List>\n            <ListItemLink to='/inbox' open={open} onClick={handleClick} />\n            <Collapse component='li' in={open} timeout='auto' unmountOnExit>\n              <List disablePadding>\n                <ListItemLink\n                  to='/inbox/important'\n                  className={classes.nested}\n                />\n              </List>\n            </Collapse>\n            <ListItemLink to='/trash' />\n            <ListItemLink to='/spam' />\n          </List>\n        </nav>\n      </div>\n    </MemoryRouter>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleBreadcrumbs from './SimpleBreadcrumbs';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleBreadcrumbsSource from '!raw-loader!./SimpleBreadcrumbs';\nimport CustomSeparator from './CustomSeparator';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomSeparatorSource from '!raw-loader!./CustomSeparator';\nimport BreadcrumbsWithIcons from './BreadcrumbsWithIcons';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BreadcrumbsWithIconsSource from '!raw-loader!./BreadcrumbsWithIcons';\nimport CollapsedBreadcrumbs from './CollapsedBreadcrumbs';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CollapsedBreadcrumbsSource from '!raw-loader!./CollapsedBreadcrumbs';\nimport CustomizedBreadcrumbs from './CustomizedBreadcrumbs';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedBreadcrumbsSource from '!raw-loader!./CustomizedBreadcrumbs';\nimport IntegrationWithRreactRouter from './IntegrationWithRreactRouter';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport IntegrationWithRreactRouterSource from '!raw-loader!./IntegrationWithRreactRouter';\n\nconst BreadCrumbs = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Breadcrumbs'\n        description='Breadcrumbs allow users to make selections from a range of values'\n        refUrl='https://material-ui.com/components/breadcrumbs/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple breadcrumbs'\n            component={SimpleBreadcrumbs}\n            source={SimpleBreadcrumbsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Custom separator'\n            component={CustomSeparator}\n            source={CustomSeparatorSource}\n            description='In the following examples, we are using two string separators, and an SVG icon.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Breadcrumbs with icons'\n            component={BreadcrumbsWithIcons}\n            source={BreadcrumbsWithIconsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Collapsed breadcrumbs'\n            component={CollapsedBreadcrumbs}\n            source={CollapsedBreadcrumbsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized breadcrumbs'\n            component={CustomizedBreadcrumbs}\n            source={CustomizedBreadcrumbsSource}\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Integration with react-router'\n            component={IntegrationWithRreactRouter}\n            source={IntegrationWithRreactRouterSource}\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport Link from '@material-ui/core/Link';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport Collapse from '@material-ui/core/Collapse';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Typography from '@material-ui/core/Typography';\\nimport ExpandLess from '@material-ui/icons/ExpandLess';\\nimport ExpandMore from '@material-ui/icons/ExpandMore';\\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\\nimport {MemoryRouter, Route} from 'react-router';\\nimport {Link as RouterLink} from 'react-router-dom';\\n\\nconst breadcrumbNameMap = {\\n  '/inbox': 'Inbox',\\n  '/inbox/important': 'Important',\\n  '/trash': 'Trash',\\n  '/spam': 'Spam',\\n  '/drafts': 'Drafts',\\n};\\n\\nfunction ListItemLink(props) {\\n  const {to, open, ...other} = props;\\n  const primary = breadcrumbNameMap[to];\\n\\n  return (\\n    <li>\\n      <ListItem button component={RouterLink} to={to} {...other}>\\n        <ListItemText primary={primary} />\\n        {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}\\n      </ListItem>\\n    </li>\\n  );\\n}\\n\\nListItemLink.propTypes = {\\n  open: PropTypes.bool,\\n  to: PropTypes.string.isRequired,\\n};\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    width: 360,\\n  },\\n  lists: {\\n    backgroundColor: theme.palette.background.paper,\\n    marginTop: theme.spacing(1),\\n  },\\n  nested: {\\n    paddingLeft: theme.spacing(4),\\n  },\\n}));\\n\\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\\n\\nexport default function RouterBreadcrumbs() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(true);\\n\\n  const handleClick = () => {\\n    setOpen((prevOpen) => !prevOpen);\\n  };\\n\\n  return (\\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\\n      <div className={classes.root}>\\n        <Route>\\n          {({location}) => {\\n            const pathnames = location.pathname.split('/').filter((x) => x);\\n\\n            return (\\n              <Breadcrumbs aria-label='breadcrumb'>\\n                <LinkRouter color='inherit' to='/'>\\n                  Home\\n                </LinkRouter>\\n                {pathnames.map((value, index) => {\\n                  const last = index === pathnames.length - 1;\\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\\n\\n                  return last ? (\\n                    <Typography color='text.primary' key={to}>\\n                      {breadcrumbNameMap[to]}\\n                    </Typography>\\n                  ) : (\\n                    <LinkRouter color='inherit' to={to} key={to}>\\n                      {breadcrumbNameMap[to]}\\n                    </LinkRouter>\\n                  );\\n                })}\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </Route>\\n        <nav className={classes.lists} aria-label='mailbox folders'>\\n          <List>\\n            <ListItemLink to='/inbox' open={open} onClick={handleClick} />\\n            <Collapse component='li' in={open} timeout='auto' unmountOnExit>\\n              <List disablePadding>\\n                <ListItemLink\\n                  to='/inbox/important'\\n                  className={classes.nested}\\n                />\\n              </List>\\n            </Collapse>\\n            <ListItemLink to='/trash' />\\n            <ListItemLink to='/spam' />\\n          </List>\\n        </nav>\\n      </div>\\n    </MemoryRouter>\\n  );\\n}\\n\";"],"sourceRoot":""}