(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[148],{3111:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),o=a(1081),i=a(306),l=a(305),c=a(304),m=a(164),s=a(165),p=a(114),u=a(2147),d=a(1284),h=Object(m.a)((function(e){return{root:{justifyContent:"center",flexWrap:"wrap"},paper:{padding:e.spacing(1,2)}}}));function b(e){e.preventDefault(),alert("You clicked a breadcrumb.")}function k(){var e=h();return t.a.createElement("div",{className:e.root},t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:b},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:b},"Core"),t.a.createElement(p.a,{color:"text.primary"},"Breadcrumb"))),t.a.createElement("br",null),t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:b},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:b},"Core"),t.a.createElement(d.a,{color:"text.primary",href:"/components/breadcrumbs/",onClick:b,"aria-current":"page"},"Breadcrumb"))),t.a.createElement("br",null),t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:b},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:b},"Core"),t.a.createElement(d.a,{color:"text.primary",href:"/components/breadcrumbs/",onClick:b,"aria-current":"page"},"Breadcrumb"))))}var f=a(349),g=a.n(f),y=Object(m.a)((function(e){return{root:{justifyContent:"center",flexWrap:"wrap"},paper:{padding:e.spacing(1,2)}}}));function C(e){e.preventDefault(),alert("You clicked a breadcrumb.")}function E(){var e=y();return t.a.createElement("div",{className:e.root},t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{separator:"\u203a","aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:C},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:C},"Core"),t.a.createElement(p.a,{color:"text.primary"},"Breadcrumb"))),t.a.createElement("br",null),t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{separator:"-","aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:C},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:C},"Core"),t.a.createElement(p.a,{color:"text.primary"},"Breadcrumb"))),t.a.createElement("br",null),t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{separator:t.a.createElement(g.a,{fontSize:"small"}),"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:C},"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:C},"Core"),t.a.createElement(p.a,{color:"text.primary"},"Breadcrumb"))))}var v=a(1628),x=a.n(v),L=a(2302),B=a.n(L),N=a(2303),I=a.n(N),S=Object(m.a)((function(e){return{root:{padding:e.spacing(1,2)},link:{display:"flex"},icon:{marginRight:e.spacing(.5),width:20,height:20}}}));function R(e){e.preventDefault(),alert("You clicked a breadcrumb.")}function T(){var e=S();return t.a.createElement(s.a,{elevation:0,className:e.root},t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"/",onClick:R,className:e.link},t.a.createElement(x.a,{className:e.icon}),"Material-UI"),t.a.createElement(d.a,{color:"inherit",href:"/getting-started/installation/",onClick:R,className:e.link},t.a.createElement(B.a,{className:e.icon}),"Core"),t.a.createElement(p.a,{color:"text.primary",className:e.link},t.a.createElement(I.a,{className:e.icon}),"Breadcrumb")))}var P=Object(m.a)((function(e){return{root:{justifyContent:"center",flexWrap:"wrap"},paper:{padding:e.spacing(1,2)}}}));function M(e){e.preventDefault(),alert("You clicked a breadcrumb.")}function w(){var e=P();return t.a.createElement(s.a,{elevation:0,className:e.paper},t.a.createElement(u.a,{maxItems:2,"aria-label":"breadcrumb"},t.a.createElement(d.a,{color:"inherit",href:"#",onClick:M},"Home"),t.a.createElement(d.a,{color:"inherit",href:"#",onClick:M},"Catalog"),t.a.createElement(d.a,{color:"inherit",href:"#",onClick:M},"Accessories"),t.a.createElement(d.a,{color:"inherit",href:"#",onClick:M},"New Collection"),t.a.createElement(p.a,{color:"text.primary"},"Belts")))}var j=a(21),O=a(50),D=a(1257),U=a(459),H=a(191),W=a.n(H),Y=Object(j.a)((function(e){return{root:{backgroundColor:e.palette.grey[100],height:e.spacing(3),color:e.palette.grey[800],fontWeight:e.typography.fontWeightRegular,"&:hover, &:focus":{backgroundColor:e.palette.grey[300]},"&:active":{boxShadow:e.shadows[1],backgroundColor:Object(O.c)(e.palette.grey[300],.12)}}}}))(D.a);function z(e){e.preventDefault(),alert("You clicked a breadcrumb.")}var A=Object(m.a)((function(e){return{root:{padding:e.spacing(1)},avatar:{background:"none",marginRight:-e.spacing(1.5)},linkRoot:{backgroundColor:"transparent",color:e.palette.text.primary,"&:hover, &:focus":{backgroundColor:"transparent",color:e.palette.text.primary}}}}));function G(){var e=A();return t.a.createElement(s.a,{elevation:0,className:e.root},t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(Y,{component:"a",className:e.linkRoot,href:"#",label:"Home",avatar:t.a.createElement(U.a,{className:e.avatar},t.a.createElement(x.a,null)),onClick:z}),t.a.createElement(Y,{component:"a",className:e.linkRoot,href:"#",label:"Catalog",onClick:z}),t.a.createElement(Y,{label:"Accessories",className:e.linkRoot,deleteIcon:t.a.createElement(W.a,null),onClick:z,onDelete:z})))}var J=a(22),q=a(117),F=a(1072),V=a(297),$=a(1080),K=a(1119),Q=a(1734),X=a.n(Q),Z=a(37),_=a(94),ee={"/inbox":"Inbox","/inbox/important":"Important","/trash":"Trash","/spam":"Spam","/drafts":"Drafts"};function ne(e){var n=e.to,a=e.open,r=Object(q.a)(e,["to","open"]),o=ee[n];return t.a.createElement("li",null,t.a.createElement(V.a,Object.assign({button:!0,component:_.a,to:n},r),t.a.createElement(K.a,{primary:o}),null!=a?a?t.a.createElement(X.a,null):t.a.createElement(W.a,null):null))}var ae=Object(m.a)((function(e){return{root:{display:"flex",flexDirection:"column",width:360},lists:{backgroundColor:e.palette.background.paper,marginTop:e.spacing(1)},nested:{paddingLeft:e.spacing(4)}}})),re=function(e){return t.a.createElement(d.a,Object.assign({},e,{component:_.a}))};function te(){var e=ae(),n=t.a.useState(!0),a=Object(J.a)(n,2),r=a[0],o=a[1];return t.a.createElement(Z.a,{initialEntries:["/inbox"],initialIndex:0},t.a.createElement("div",{className:e.root},t.a.createElement(Z.c,null,(function(e){var n=e.location.pathname.split("/").filter((function(e){return e}));return t.a.createElement(u.a,{"aria-label":"breadcrumb"},t.a.createElement(re,{color:"inherit",to:"/"},"Home"),n.map((function(e,a){var r=a===n.length-1,o="/".concat(n.slice(0,a+1).join("/"));return r?t.a.createElement(p.a,{color:"text.primary",key:o},ee[o]):t.a.createElement(re,{color:"inherit",to:o,key:o},ee[o])})))})),t.a.createElement("nav",{className:e.lists,"aria-label":"mailbox folders"},t.a.createElement(F.a,null,t.a.createElement(ne,{to:"/inbox",open:r,onClick:function(){o((function(e){return!e}))}}),t.a.createElement($.a,{component:"li",in:r,timeout:"auto",unmountOnExit:!0},t.a.createElement(F.a,{disablePadding:!0},t.a.createElement(ne,{to:"/inbox/important",className:e.nested}))),t.a.createElement(ne,{to:"/trash"}),t.a.createElement(ne,{to:"/spam"})))))}n.default=function(){return t.a.createElement(t.a.Fragment,null,t.a.createElement(l.a,{title:"Breadcrumbs",description:"Breadcrumbs allow users to make selections from a range of values",refUrl:"https://material-ui.com/components/breadcrumbs/"}),t.a.createElement(c.a,null,t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Simple breadcrumbs",component:k,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function SimpleBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Link\n            color='text.primary'\n            href='/components/breadcrumbs/'\n            onClick={handleClick}\n            aria-current='page'>\n            Breadcrumb\n          </Link>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Link\n            color='text.primary'\n            href='/components/breadcrumbs/'\n            onClick={handleClick}\n            aria-current='page'>\n            Breadcrumb\n          </Link>\n        </Breadcrumbs>\n      </Paper>\n    </div>\n  );\n}\n"})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Custom separator",component:E,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function CustomSeparator() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs separator='\u203a' aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs separator='-' aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n      <br />\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize='small' />}\n          aria-label='breadcrumb'>\n          <Link color='inherit' href='/' onClick={handleClick}>\n            Material-UI\n          </Link>\n          <Link\n            color='inherit'\n            href='/getting-started/installation/'\n            onClick={handleClick}>\n            Core\n          </Link>\n          <Typography color='text.primary'>Breadcrumb</Typography>\n        </Breadcrumbs>\n      </Paper>\n    </div>\n  );\n}\n",description:"In the following examples, we are using two string separators, and an SVG icon."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Breadcrumbs with icons",component:T,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function IconBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link\n          color='inherit'\n          href='/'\n          onClick={handleClick}\n          className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Material-UI\n        </Link>\n        <Link\n          color='inherit'\n          href='/getting-started/installation/'\n          onClick={handleClick}\n          className={classes.link}>\n          <WhatshotIcon className={classes.icon} />\n          Core\n        </Link>\n        <Typography color='text.primary' className={classes.link}>\n          <GrainIcon className={classes.icon} />\n          Breadcrumb\n        </Typography>\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n"})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Collapsed breadcrumbs",component:w,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nexport default function CollapsedBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <Breadcrumbs maxItems={2} aria-label='breadcrumb'>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Home\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Catalog\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          Accessories\n        </Link>\n        <Link color='inherit' href='#' onClick={handleClick}>\n          New Collection\n        </Link>\n        <Typography color='text.primary'>Belts</Typography>\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n"})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Customized breadcrumbs",component:G,source:"import React from 'react';\nimport {emphasize, makeStyles, withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  event.preventDefault();\n  alert('You clicked a breadcrumb.');\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    background: 'none',\n    marginRight: -theme.spacing(1.5),\n  },\n  linkRoot: {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    '&:hover, &:focus': {\n      backgroundColor: 'transparent',\n      color: theme.palette.text.primary,\n    },\n  },\n}));\n\nexport default function CustomizedBreadcrumbs() {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <StyledBreadcrumb\n          component='a'\n          className={classes.linkRoot}\n          href='#'\n          label='Home'\n          avatar={\n            <Avatar className={classes.avatar}>\n              <HomeIcon />\n            </Avatar>\n          }\n          onClick={handleClick}\n        />\n        <StyledBreadcrumb\n          component='a'\n          className={classes.linkRoot}\n          href='#'\n          label='Catalog'\n          onClick={handleClick}\n        />\n        <StyledBreadcrumb\n          label='Accessories'\n          className={classes.linkRoot}\n          deleteIcon={<ExpandMoreIcon />}\n          onClick={handleClick}\n          onDelete={handleClick}\n        />\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n",description:"Here is an example of customizing the component. You can learn more about this in the overrides documentation page."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(i.a,{title:"Integration with react-router",component:te,source:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Link from '@material-ui/core/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport {MemoryRouter, Route} from 'react-router';\nimport {Link as RouterLink} from 'react-router-dom';\n\nconst breadcrumbNameMap = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts',\n};\n\nfunction ListItemLink(props) {\n  const {to, open, ...other} = props;\n  const primary = breadcrumbNameMap[to];\n\n  return (\n    <li>\n      <ListItem button component={RouterLink} to={to} {...other}>\n        <ListItemText primary={primary} />\n        {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  open: PropTypes.bool,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 360,\n  },\n  lists: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(1),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\n\nexport default function RouterBreadcrumbs() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <div className={classes.root}>\n        <Route>\n          {({location}) => {\n            const pathnames = location.pathname.split('/').filter((x) => x);\n\n            return (\n              <Breadcrumbs aria-label='breadcrumb'>\n                <LinkRouter color='inherit' to='/'>\n                  Home\n                </LinkRouter>\n                {pathnames.map((value, index) => {\n                  const last = index === pathnames.length - 1;\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                  return last ? (\n                    <Typography color='text.primary' key={to}>\n                      {breadcrumbNameMap[to]}\n                    </Typography>\n                  ) : (\n                    <LinkRouter color='inherit' to={to} key={to}>\n                      {breadcrumbNameMap[to]}\n                    </LinkRouter>\n                  );\n                })}\n              </Breadcrumbs>\n            );\n          }}\n        </Route>\n        <nav className={classes.lists} aria-label='mailbox folders'>\n          <List>\n            <ListItemLink to='/inbox' open={open} onClick={handleClick} />\n            <Collapse component='li' in={open} timeout='auto' unmountOnExit>\n              <List disablePadding>\n                <ListItemLink\n                  to='/inbox/important'\n                  className={classes.nested}\n                />\n              </List>\n            </Collapse>\n            <ListItemLink to='/trash' />\n            <ListItemLink to='/spam' />\n          </List>\n        </nav>\n      </div>\n    </MemoryRouter>\n  );\n}\n",description:"Here is an example of customizing the component. You can learn more about this in the overrides documentation page."}))))}}}]);
//# sourceMappingURL=148.4e17c603.chunk.js.map