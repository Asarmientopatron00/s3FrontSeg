(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[141],{3099:function(e,t,n){"use strict";n.r(t);var o=n(0),a=n.n(o),r=n(1086),i=n(306),l=n(304),m=n(303),s=n(164),c=n(1206),p=n.n(c),d=n(1389),u=n(1198),h=n.n(u),f=n(485),b=n(1251),g=Object(s.a)((function(e){return{fab:{margin:e.spacing(2)},absolute:{position:"absolute",bottom:e.spacing(2),right:e.spacing(3)}}}));function T(){var e=g();return a.a.createElement("div",null,a.a.createElement(b.a,{title:"Delete"},a.a.createElement(f.a,{"aria-label":"delete"},a.a.createElement(h.a,null))),a.a.createElement(b.a,{title:"Add","aria-label":"add"},a.a.createElement(d.a,{color:"primary",className:e.fab},a.a.createElement(p.a,null))),a.a.createElement(b.a,{title:"Add","aria-label":"add"},a.a.createElement(d.a,{color:"secondary",className:e.absolute},a.a.createElement(p.a,null))))}var E=n(499),y=Object(s.a)({root:{width:500}});function B(){var e=y();return a.a.createElement("div",{className:e.root},a.a.createElement(r.a,{container:!0,justify:"center"},a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{title:"Add",placement:"top-start"},a.a.createElement(E.a,null,"top-start")),a.a.createElement(b.a,{title:"Add",placement:"top"},a.a.createElement(E.a,null,"top")),a.a.createElement(b.a,{title:"Add",placement:"top-end"},a.a.createElement(E.a,null,"top-end")))),a.a.createElement(r.a,{container:!0,justify:"center"},a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(b.a,{title:"Add",placement:"left-start"},a.a.createElement(E.a,null,"left-start")),a.a.createElement("br",null),a.a.createElement(b.a,{title:"Add",placement:"left"},a.a.createElement(E.a,null,"left")),a.a.createElement("br",null),a.a.createElement(b.a,{title:"Add",placement:"left-end"},a.a.createElement(E.a,null,"left-end"))),a.a.createElement(r.a,{item:!0,container:!0,xs:12,lg:6,alignItems:"flex-end",direction:"column"},a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{title:"Add",placement:"right-start"},a.a.createElement(E.a,null,"right-start"))),a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{title:"Add",placement:"right"},a.a.createElement(E.a,null,"right"))),a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{title:"Add",placement:"right-end"},a.a.createElement(E.a,null,"right-end"))))),a.a.createElement(r.a,{container:!0,justify:"center"},a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{title:"Add",placement:"bottom-start"},a.a.createElement(E.a,null,"bottom-start")),a.a.createElement(b.a,{title:"Add",placement:"bottom"},a.a.createElement(E.a,null,"bottom")),a.a.createElement(b.a,{title:"Add",placement:"bottom-end"},a.a.createElement(E.a,null,"bottom-end")))))}var w=n(22),v=n(117),A=n(21),x=n(114);function S(e){return{'&[x-placement*="bottom"] $arrow':{top:0,left:0,marginTop:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"0 1em 1em 1em",borderColor:"transparent transparent ".concat(e," transparent")}},'&[x-placement*="top"] $arrow':{bottom:0,left:0,marginBottom:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"1em 1em 0 1em",borderColor:"".concat(e," transparent transparent transparent")}},'&[x-placement*="right"] $arrow':{left:0,marginLeft:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 1em 1em 0",borderColor:"transparent ".concat(e," transparent transparent")}},'&[x-placement*="left"] $arrow':{right:0,marginRight:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 0 1em 1em",borderColor:"transparent transparent transparent ".concat(e)}}}}var k=Object(A.a)((function(e){return{tooltip:{backgroundColor:e.palette.common.white,color:"rgba(0, 0, 0, 0.87)",boxShadow:e.shadows[1],fontSize:11}}}))(b.a),G=Object(s.a)((function(e){return{tooltip:{position:"relative"},arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:S(e.palette.grey[700])}}));function C(e){var t=G(),n=t.arrow,o=Object(v.a)(t,["arrow"]),r=a.a.useState(null),i=Object(w.a)(r,2),l=i[0],m=i[1];return a.a.createElement(b.a,Object.assign({classes:o,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(l),element:l}}}}},e,{title:a.a.createElement(a.a.Fragment,null,e.title,a.a.createElement("span",{className:n,ref:m}))}))}var R=Object(s.a)((function(e){return{arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:S(e.palette.common.black),tooltip:{position:"relative",backgroundColor:e.palette.common.black},tooltipPlacementLeft:{margin:"0 8px"},tooltipPlacementRight:{margin:"0 8px"},tooltipPlacementTop:{margin:"8px 0"},tooltipPlacementBottom:{margin:"8px 0"}}}));function L(e){var t=R(),n=t.arrow,o=Object(v.a)(t,["arrow"]),r=a.a.useState(null),i=Object(w.a)(r,2),l=i[0],m=i[1];return a.a.createElement(b.a,Object.assign({classes:o,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(l),element:l}}}}},e,{title:a.a.createElement(a.a.Fragment,null,e.title,a.a.createElement("span",{className:n,ref:m}))}))}var P=Object(A.a)((function(e){return{tooltip:{backgroundColor:"#f5f5f9",color:"rgba(0, 0, 0, 0.87)",maxWidth:220,fontSize:e.typography.pxToRem(12),border:"1px solid #dadde9"}}}))(b.a);function F(){return a.a.createElement("div",null,a.a.createElement(k,{title:"Add"},a.a.createElement(E.a,null,"Light")),a.a.createElement(C,{title:"Add"},a.a.createElement(E.a,null,"Arrow")),a.a.createElement(L,{title:"Add"},a.a.createElement(E.a,null,"Bootstrap")),a.a.createElement(P,{title:a.a.createElement(a.a.Fragment,null,a.a.createElement(x.a,{color:"inherit"},"Tooltip with HTML"),a.a.createElement("em",null,"And here's")," ",a.a.createElement("b",null,"some")," ",a.a.createElement("u",null,"amazing content"),".","It's very engaging. Right?")},a.a.createElement(E.a,null,"HTML")))}var W=n(1087);function N(){var e=a.a.useState(!1),t=Object(w.a)(e,2),n=t[0],o=t[1];function i(){o(!1)}return a.a.createElement("div",null,a.a.createElement(r.a,{container:!0,justify:"center"},a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{disableFocusListener:!0,title:"Add"},a.a.createElement(E.a,null,"Hover or touch"))),a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{disableHoverListener:!0,title:"Add"},a.a.createElement(E.a,null,"Focus or touch"))),a.a.createElement(r.a,{item:!0},a.a.createElement(b.a,{disableFocusListener:!0,disableTouchListener:!0,title:"Add"},a.a.createElement(E.a,null,"Hover"))),a.a.createElement(r.a,{item:!0},a.a.createElement(W.a,{onClickAway:i},a.a.createElement("div",null,a.a.createElement(b.a,{PopperProps:{disablePortal:!0},onClose:i,open:n,disableFocusListener:!0,disableHoverListener:!0,disableTouchListener:!0,title:"Add"},a.a.createElement(E.a,{onClick:function(){o(!0)}},"Click")))))))}var j=Object(s.a)((function(e){return{button:{margin:e.spacing(1)},customWidth:{maxWidth:500},noMaxWidth:{maxWidth:"none"}}})),O="\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n";function I(){var e=j();return a.a.createElement("div",null,a.a.createElement(b.a,{title:O},a.a.createElement(E.a,{className:e.button},"Default Width [300px]")),a.a.createElement(b.a,{title:O,classes:{tooltip:e.customWidth}},a.a.createElement(E.a,{className:e.button},"Custom Width [500px]")),a.a.createElement(b.a,{title:O,classes:{tooltip:e.noMaxWidth}},a.a.createElement(E.a,{className:e.button},"No wrapping")))}var D=Object(s.a)((function(e){return{button:{margin:e.spacing(1)}}}));function H(){var e=D();return a.a.createElement("div",null,a.a.createElement(b.a,{title:"Add",interactive:!0},a.a.createElement(E.a,{className:e.button},"Interactive")),a.a.createElement(b.a,{title:"Add"},a.a.createElement(E.a,{className:e.button},"Non Interactive")))}function z(){return a.a.createElement(b.a,{title:"You don't have permission to do this"},a.a.createElement("span",null,a.a.createElement(E.a,{disabled:!0},"A Disabled Button")))}var $=n(1094),M=n(1479);function q(){return a.a.createElement("div",null,a.a.createElement(b.a,{title:"Add"},a.a.createElement(E.a,null,"Grow")),a.a.createElement(b.a,{TransitionComponent:$.a,TransitionProps:{timeout:600},title:"Add"},a.a.createElement(E.a,null,"Fade")),a.a.createElement(b.a,{TransitionComponent:M.a,title:"Add"},a.a.createElement(E.a,null,"Zoom")))}function Y(){return a.a.createElement(b.a,{title:"Add",enterDelay:500,leaveDelay:200},a.a.createElement(E.a,null,"[500ms, 200ms]"))}t.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.a,{title:"Tooltips",description:"Tooltips display informative text when users hover over, focus on, or tap an element",refUrl:"https://material-ui.com/components/tooltips/"}),a.a.createElement(m.a,null,a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Simple Tooltips",component:T,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function SimpleTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title='Delete'>\n        <IconButton aria-label='delete'>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title='Add' aria-label='add'>\n        <Fab color='primary' className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title='Add' aria-label='add'>\n        <Fab color='secondary' className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n",description:"The Link component is built on top of the Typography component. You can leverage its properties."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Customized tooltips",component:F,source:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStylesArrow = makeStyles((theme) => ({\n  tooltip: {\n    position: 'relative',\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.grey[700]),\n}));\n\nfunction ArrowTooltip(props) {\n  const {arrow, ...classes} = useStylesArrow();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nArrowTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.common.black),\n  tooltip: {\n    position: 'relative',\n    backgroundColor: theme.palette.common.black,\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px',\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px',\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0',\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0',\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const {arrow, ...classes} = useStylesBootstrap();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nBootstrapTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport default function CustomizedTooltips() {\n  return (\n    <div>\n      <LightTooltip title='Add'>\n        <Button>Light</Button>\n      </LightTooltip>\n      <ArrowTooltip title='Add'>\n        <Button>Arrow</Button>\n      </ArrowTooltip>\n      <BootstrapTooltip title='Add'>\n        <Button>Bootstrap</Button>\n      </BootstrapTooltip>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color='inherit'>Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.\n            {\"It's very engaging. Right?\"}\n          </React.Fragment>\n        }>\n        <Button>HTML</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n",description:"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Triggers tooltips",component:N,source:"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nexport default function TriggersTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip disableFocusListener title='Add'>\n            <Button>Hover or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableHoverListener title='Add'>\n            <Button>Focus or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableFocusListener disableTouchListener title='Add'>\n            <Button>Hover</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <div>\n              <Tooltip\n                PopperProps={{\n                  disablePortal: true,\n                }}\n                onClose={handleTooltipClose}\n                open={open}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                title='Add'>\n                <Button onClick={handleTooltipOpen}>Click</Button>\n              </Tooltip>\n            </div>\n          </ClickAwayListener>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n",description:"You can define the types of events that cause a tooltip to show."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Variable Width",component:I,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  customWidth: {\n    maxWidth: 500,\n  },\n  noMaxWidth: {\n    maxWidth: 'none',\n  },\n}));\n\nconst longText = `\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n`;\n\nexport default function VariableWidth() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title={longText}>\n        <Button className={classes.button}>Default Width [300px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{tooltip: classes.customWidth}}>\n        <Button className={classes.button}>Custom Width [500px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{tooltip: classes.noMaxWidth}}>\n        <Button className={classes.button}>No wrapping</Button>\n      </Tooltip>\n    </div>\n  );\n}\n",description:"The Tooltip wraps long text by default to make it readable."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Interactive tooltips",component:H,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InteractiveTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title='Add' interactive>\n        <Button className={classes.button}>Interactive</Button>\n      </Tooltip>\n      <Tooltip title='Add'>\n        <Button className={classes.button}>Non Interactive</Button>\n      </Tooltip>\n    </div>\n  );\n}\n",description:"A tooltip can be interactive. It won't close when the user hovers over the tooltip before the leaveDelay is expired."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Disabled Elements",component:z,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DisabledTooltips() {\n  return (\n    <Tooltip title=\"You don't have permission to do this\">\n      <span>\n        <Button disabled>A Disabled Button</Button>\n      </span>\n    </Tooltip>\n  );\n}\n",description:"By default disabled elements like <button> do not trigger user interactions so a Tooltip will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a span."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Showing and hiding tooltips",component:Y,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DelayTooltips() {\n  return (\n    <Tooltip title='Add' enterDelay={500} leaveDelay={200}>\n      <Button>[500ms, 200ms]</Button>\n    </Tooltip>\n  );\n}\n",description:"The tooltip is normally shown immediately when the user's mouse hovers over the element, and hides immediately when the user's mouse leaves. A delay in showing or hiding the tooltip can be added through the properties enterDelay and leaveDelay, as shown in the Controlled Tooltips demo above."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Transitions tooltips",component:q,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\n\nexport default function TransitionsTooltips() {\n  return (\n    <div>\n      <Tooltip title='Add'>\n        <Button>Grow</Button>\n      </Tooltip>\n      <Tooltip\n        TransitionComponent={Fade}\n        TransitionProps={{timeout: 600}}\n        title='Add'>\n        <Button>Fade</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Zoom} title='Add'>\n        <Button>Zoom</Button>\n      </Tooltip>\n    </div>\n  );\n}\n",description:"Use a different transition.."})),a.a.createElement(r.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Positioned Tooltips",component:B,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function PositionedTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip title='Add' placement='top-start'>\n            <Button>top-start</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='top'>\n            <Button>top</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='top-end'>\n            <Button>top-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item xs={12} lg={6}>\n          <Tooltip title='Add' placement='left-start'>\n            <Button>left-start</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title='Add' placement='left'>\n            <Button>left</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title='Add' placement='left-end'>\n            <Button>left-end</Button>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          lg={6}\n          alignItems='flex-end'\n          direction='column'>\n          <Grid item>\n            <Tooltip title='Add' placement='right-start'>\n              <Button>right-start</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title='Add' placement='right'>\n              <Button>right</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title='Add' placement='right-end'>\n              <Button>right-end</Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip title='Add' placement='bottom-start'>\n            <Button>bottom-start</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='bottom'>\n            <Button>bottom</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='bottom-end'>\n            <Button>bottom-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n",description:"The Tooltip has 12 placements choice. They don\u2019t have directional arrows; instead, they rely on motion emanating from the source to convey direction."}))))}}}]);
//# sourceMappingURL=141.d2d0e939.chunk.js.map