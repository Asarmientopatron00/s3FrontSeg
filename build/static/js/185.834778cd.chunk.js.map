{"version":3,"sources":["modules/thirdParty/recharts/Treemap/Components/data.js","modules/thirdParty/recharts/Treemap/Components/SimpleTreemap.js","modules/thirdParty/recharts/Treemap/Components/CustomContentTreemap.js","modules/thirdParty/recharts/Treemap/index.js","webpack:///./src/modules/thirdParty/recharts/Treemap/Components/SimpleTreemap.js?92a2","webpack:///./src/modules/thirdParty/recharts/Treemap/Components/CustomContentTreemap.js?d8bc"],"names":["data","name","children","size","SimpleTreemap","width","height","dataKey","ratio","stroke","fill","COLORS","CustomizedContent","this","props","root","depth","x","y","index","colors","style","Math","floor","length","strokeWidth","strokeOpacity","textAnchor","fontSize","fillOpacity","Component","CustomContentTreemap","content","Treemap","match","ComponentHeader","title","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"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","file":"static/js/185.834778cd.chunk.js","sourcesContent":["const data = [\n  {\n    name: 'axis',\n    children: [\n      {name: 'Axes', size: 1302},\n      {name: 'Axis', size: 24593},\n      {name: 'AxisGridLine', size: 652},\n      {name: 'AxisLabel', size: 636},\n      {name: 'CartesianAxes', size: 6703},\n    ],\n  },\n  {\n    name: 'controls',\n    children: [\n      {name: 'AnchorControl', size: 2138},\n      {name: 'ClickControl', size: 3824},\n      {name: 'Control', size: 1353},\n      {name: 'ControlList', size: 4665},\n      {name: 'DragControl', size: 2649},\n      {name: 'ExpandControl', size: 2832},\n      {name: 'HoverControl', size: 4896},\n      {name: 'IControl', size: 763},\n      {name: 'PanZoomControl', size: 5222},\n      {name: 'SelectionControl', size: 7862},\n      {name: 'TooltipControl', size: 8435},\n    ],\n  },\n  {\n    name: 'data',\n    children: [\n      {name: 'Data', size: 20544},\n      {name: 'DataList', size: 19788},\n      {name: 'DataSprite', size: 10349},\n      {name: 'EdgeSprite', size: 3301},\n      {name: 'NodeSprite', size: 19382},\n      {\n        name: 'render',\n        children: [\n          {name: 'ArrowType', size: 698},\n          {name: 'EdgeRenderer', size: 5569},\n          {name: 'IRenderer', size: 353},\n          {name: 'ShapeRenderer', size: 2247},\n        ],\n      },\n      {name: 'ScaleBinding', size: 11275},\n      {name: 'Tree', size: 7147},\n      {name: 'TreeBuilder', size: 9930},\n    ],\n  },\n  {\n    name: 'events',\n    children: [\n      {name: 'DataEvent', size: 7313},\n      {name: 'SelectionEvent', size: 6880},\n      {name: 'TooltipEvent', size: 3701},\n      {name: 'VisualizationEvent', size: 2117},\n    ],\n  },\n  {\n    name: 'legend',\n    children: [\n      {name: 'Legend', size: 20859},\n      {name: 'LegendItem', size: 4614},\n      {name: 'LegendRange', size: 10530},\n    ],\n  },\n  {\n    name: 'operator',\n    children: [\n      {\n        name: 'distortion',\n        children: [\n          {name: 'BifocalDistortion', size: 4461},\n          {name: 'Distortion', size: 6314},\n          {name: 'FisheyeDistortion', size: 3444},\n        ],\n      },\n      {\n        name: 'encoder',\n        children: [\n          {name: 'ColorEncoder', size: 3179},\n          {name: 'Encoder', size: 4060},\n          {name: 'PropertyEncoder', size: 4138},\n          {name: 'ShapeEncoder', size: 1690},\n          {name: 'SizeEncoder', size: 1830},\n        ],\n      },\n      {\n        name: 'filter',\n        children: [\n          {name: 'FisheyeTreeFilter', size: 5219},\n          {name: 'GraphDistanceFilter', size: 3165},\n          {name: 'VisibilityFilter', size: 3509},\n        ],\n      },\n      {name: 'IOperator', size: 1286},\n      {\n        name: 'label',\n        children: [\n          {name: 'Labeler', size: 9956},\n          {name: 'RadialLabeler', size: 3899},\n          {name: 'StackedAreaLabeler', size: 3202},\n        ],\n      },\n      {\n        name: 'layout',\n        children: [\n          {name: 'AxisLayout', size: 6725},\n          {name: 'BundledEdgeRouter', size: 3727},\n          {name: 'CircleLayout', size: 9317},\n          {name: 'CirclePackingLayout', size: 12003},\n          {name: 'DendrogramLayout', size: 4853},\n          {name: 'ForceDirectedLayout', size: 8411},\n          {name: 'IcicleTreeLayout', size: 4864},\n          {name: 'IndentedTreeLayout', size: 3174},\n          {name: 'Layout', size: 7881},\n          {name: 'NodeLinkTreeLayout', size: 12870},\n          {name: 'PieLayout', size: 2728},\n          {name: 'RadialTreeLayout', size: 12348},\n          {name: 'RandomLayout', size: 870},\n          {name: 'StackedAreaLayout', size: 9121},\n          {name: 'TreeMapLayout', size: 9191},\n        ],\n      },\n      {name: 'Operator', size: 2490},\n      {name: 'OperatorList', size: 5248},\n      {name: 'OperatorSequence', size: 4190},\n      {name: 'OperatorSwitch', size: 2581},\n      {name: 'SortOperator', size: 2023},\n    ],\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport {ResponsiveContainer, Treemap} from 'recharts';\nimport data from './data';\n\nconst SimpleTreemap = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <Treemap\n      data={data}\n      dataKey='size'\n      ratio={4 / 3}\n      stroke='#fff'\n      fill='#4299E1'\n    />\n  </ResponsiveContainer>\n);\n\nexport default SimpleTreemap;\n","import React, {Component} from 'react';\nimport {ResponsiveContainer, Treemap} from 'recharts';\nimport data from './data';\n\nconst COLORS = [\n  '#8889DD',\n  '#9597E4',\n  '#8DC77B',\n  '#A5D297',\n  '#E2CF45',\n  '#F8C12D',\n];\n\nclass CustomizedContent extends Component {\n  render() {\n    const {root, depth, x, y, width, height, index, colors, name} = this.props;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill:\n              depth < 2\n                ? colors[Math.floor((index / root.children.length) * 6)]\n                : 'none',\n            stroke: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}\n        />\n        {depth === 1 ? (\n          <text\n            x={x + width / 2}\n            y={y + height / 2 + 7}\n            textAnchor='middle'\n            fill='#fff'\n            fontSize={14}>\n            {name}\n          </text>\n        ) : null}\n        {depth === 1 ? (\n          <text\n            x={x + 4}\n            y={y + 18}\n            fill='#fff'\n            fontSize={16}\n            fillOpacity={0.9}>\n            {index + 1}\n          </text>\n        ) : null}\n      </g>\n    );\n  }\n}\n\nconst CustomContentTreemap = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <Treemap\n      data={data}\n      dataKey='size'\n      ratio={4 / 3}\n      stroke='#fff'\n      fill='#4299E1'\n      content={<CustomizedContent colors={COLORS} />}\n    />\n  </ResponsiveContainer>\n);\n\nexport default CustomContentTreemap;\n","import React from 'react';\nimport SimpleTreemap from './Components/SimpleTreemap';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleTreemapSource from '!raw-loader!./Components/SimpleTreemap';\nimport CustomContentTreemap from './Components/CustomContentTreemap';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomContentTreemapSource from '!raw-loader!./Components/CustomContentTreemap';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nconst Treemap = ({match}) => {\n  return (\n    <>\n      <ComponentHeader\n        title='Treemap'\n        refUrl='http://recharts.org/en-US/api/Treemap/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Tree map'\n            component={SimpleTreemap}\n            source={SimpleTreemapSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Custom Content Treemap'\n            component={CustomContentTreemap}\n            source={CustomContentTreemapSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Treemap;\n","export default \"import React from 'react';\\nimport {ResponsiveContainer, Treemap} from 'recharts';\\nimport data from './data';\\n\\nconst SimpleTreemap = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <Treemap\\n      data={data}\\n      dataKey='size'\\n      ratio={4 / 3}\\n      stroke='#fff'\\n      fill='#4299E1'\\n    />\\n  </ResponsiveContainer>\\n);\\n\\nexport default SimpleTreemap;\\n\";","export default \"import React, {Component} from 'react';\\nimport {ResponsiveContainer, Treemap} from 'recharts';\\nimport data from './data';\\n\\nconst COLORS = [\\n  '#8889DD',\\n  '#9597E4',\\n  '#8DC77B',\\n  '#A5D297',\\n  '#E2CF45',\\n  '#F8C12D',\\n];\\n\\nclass CustomizedContent extends Component {\\n  render() {\\n    const {root, depth, x, y, width, height, index, colors, name} = this.props;\\n\\n    return (\\n      <g>\\n        <rect\\n          x={x}\\n          y={y}\\n          width={width}\\n          height={height}\\n          style={{\\n            fill:\\n              depth < 2\\n                ? colors[Math.floor((index / root.children.length) * 6)]\\n                : 'none',\\n            stroke: '#fff',\\n            strokeWidth: 2 / (depth + 1e-10),\\n            strokeOpacity: 1 / (depth + 1e-10),\\n          }}\\n        />\\n        {depth === 1 ? (\\n          <text\\n            x={x + width / 2}\\n            y={y + height / 2 + 7}\\n            textAnchor='middle'\\n            fill='#fff'\\n            fontSize={14}>\\n            {name}\\n          </text>\\n        ) : null}\\n        {depth === 1 ? (\\n          <text\\n            x={x + 4}\\n            y={y + 18}\\n            fill='#fff'\\n            fontSize={16}\\n            fillOpacity={0.9}>\\n            {index + 1}\\n          </text>\\n        ) : null}\\n      </g>\\n    );\\n  }\\n}\\n\\nconst CustomContentTreemap = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <Treemap\\n      data={data}\\n      dataKey='size'\\n      ratio={4 / 3}\\n      stroke='#fff'\\n      fill='#4299E1'\\n      content={<CustomizedContent colors={COLORS} />}\\n    />\\n  </ResponsiveContainer>\\n);\\n\\nexport default CustomContentTreemap;\\n\";"],"sourceRoot":""}