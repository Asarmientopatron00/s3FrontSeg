(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[152],{3084:function(e,n,a){"use strict";a.r(n);var t=a(0),l=a.n(t),r=a(1086),i=a(306),o=a(304),s=a(303),d=a(2),m=a(7),u=a(22),c=a(4),p=a(164),f=a(1120),h=a(1629),g=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1),width:200},dense:{marginTop:19},menu:{width:200}}})),b=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}];function x(){var e=g(),n=l.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},l.a.createElement(h.a,{id:"standard-name",label:"Name",className:e.textField,value:t.name,onChange:i("name"),margin:"normal"}),l.a.createElement(h.a,{id:"standard-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal"}),l.a.createElement(h.a,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0}}),l.a.createElement(h.a,{id:"standard-dense",label:"Dense",className:Object(c.default)(e.textField,e.dense),margin:"dense"}),l.a.createElement(h.a,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:t.multiline,onChange:i("multiline"),className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}),l.a.createElement(h.a,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-number",label:"Number",value:t.age,onChange:i("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal"}),l.a.createElement(h.a,{id:"standard-search",label:"Search field",type:"search",className:e.textField,margin:"normal"}),l.a.createElement(h.a,{id:"standard-select-currency",select:!0,label:"Select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},b.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"standard-select-currency-native",select:!0,label:"Native select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},b.map((function(e){return l.a.createElement("option",{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"standard-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0}}),l.a.createElement(h.a,{id:"standard-bare",className:e.textField,defaultValue:"Bare",margin:"normal",inputProps:{"aria-label":"bare"}}))}var v=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],F=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1)},dense:{marginTop:e.spacing(2)},menu:{width:200}}}));function w(){var e=F(),n=l.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},l.a.createElement(h.a,{id:"outlined-name",label:"Name",className:e.textField,value:t.name,onChange:i("name"),margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-dense",label:"Dense",className:Object(c.default)(e.textField,e.dense),margin:"dense",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-dense-multiline",label:"Dense multiline",className:Object(c.default)(e.textField,e.dense),margin:"dense",variant:"outlined",multiline:!0,rowsMax:"4"}),l.a.createElement(h.a,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:t.multiline,onChange:i("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-number",label:"Number",value:t.age,onChange:i("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"outlined"}),l.a.createElement(h.a,{id:"outlined-select-currency",select:!0,label:"Select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},v.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"outlined-select-currency-native",select:!0,label:"Native select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},v.map((function(e){return l.a.createElement("option",{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"outlined-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"outlined",InputLabelProps:{shrink:!0}}),l.a.createElement(h.a,{id:"outlined-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"outlined",inputProps:{"aria-label":"bare"}}))}var y=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],C=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1)},dense:{marginTop:e.spacing(2)},menu:{width:200}}}));function N(){var e=C(),n=l.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},l.a.createElement(h.a,{id:"filled-name",label:"Name",className:e.textField,value:t.name,onChange:i("name"),margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"filled"}),l.a.createElement(h.a,{id:"filled-hidden-label",className:Object(c.default)(e.textField,e.dense),hiddenLabel:!0,variant:"filled",placeholder:"Hidden label",inputProps:{"aria-label":"hidden label"}}),l.a.createElement(h.a,{id:"filled-dense",label:"Dense",className:Object(c.default)(e.textField,e.dense),margin:"dense",variant:"filled"}),l.a.createElement(h.a,{id:"filled-dense-hidden-label",className:Object(c.default)(e.textField,e.dense),margin:"dense",hiddenLabel:!0,variant:"filled",placeholder:"Dense hidden label",inputProps:{"aria-label":"dense hidden label"}}),l.a.createElement(h.a,{id:"filled-dense-multiline",label:"Dense multiline",className:Object(c.default)(e.textField,e.dense),margin:"dense",variant:"filled",multiline:!0,rowsMax:"4"}),l.a.createElement(h.a,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:t.multiline,onChange:i("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"filled"}),l.a.createElement(h.a,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-number",label:"Number",value:t.age,onChange:i("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"filled"}),l.a.createElement(h.a,{id:"filled-select-currency",select:!0,label:"Select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},y.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"filled-select-currency-native",select:!0,label:"Native select",className:e.textField,value:t.currency,onChange:i("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},y.map((function(e){return l.a.createElement("option",{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"filled-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"filled",InputLabelProps:{shrink:!0}}),l.a.createElement(h.a,{id:"filled-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"filled",inputProps:{"aria-label":"bare"}}))}var E=a(1911),I=a(1337),T=a(1387),P=a(1433),S=a(1437),V=a(2168),O=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1)}}}));function A(){var e=l.a.useState(0),n=Object(u.a)(e,2),a=n[0],t=n[1],r=l.a.useState("Composed TextField"),i=Object(u.a)(r,2),o=i[0],s=i[1],d=l.a.useRef(null),m=O();function c(e){s(e.target.value)}return l.a.useEffect((function(){t(d.current.offsetWidth)}),[]),l.a.createElement("div",{className:m.container},l.a.createElement(I.a,{className:m.formControl},l.a.createElement(S.a,{htmlFor:"component-simple"},"Name"),l.a.createElement(P.a,{id:"component-simple",value:o,onChange:c})),l.a.createElement(I.a,{className:m.formControl},l.a.createElement(S.a,{htmlFor:"component-helper"},"Name"),l.a.createElement(P.a,{id:"component-helper",value:o,onChange:c,"aria-describedby":"component-helper-text"}),l.a.createElement(T.a,{id:"component-helper-text"},"Some important helper text")),l.a.createElement(I.a,{className:m.formControl,disabled:!0},l.a.createElement(S.a,{htmlFor:"component-disabled"},"Name"),l.a.createElement(P.a,{id:"component-disabled",value:o,onChange:c}),l.a.createElement(T.a,null,"Disabled")),l.a.createElement(I.a,{className:m.formControl,error:!0},l.a.createElement(S.a,{htmlFor:"component-error"},"Name"),l.a.createElement(P.a,{id:"component-error",value:o,onChange:c,"aria-describedby":"component-error-text"}),l.a.createElement(T.a,{id:"component-error-text"},"Error")),l.a.createElement(I.a,{className:m.formControl,variant:"outlined"},l.a.createElement(S.a,{ref:d,htmlFor:"component-outlined"},"Name"),l.a.createElement(V.a,{id:"component-outlined",value:o,onChange:c,labelWidth:a})),l.a.createElement(I.a,{className:m.formControl,variant:"filled"},l.a.createElement(S.a,{htmlFor:"component-filled"},"Name"),l.a.createElement(E.a,{id:"component-filled",value:o,onChange:c})))}var k=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},input:{margin:e.spacing(1)}}}));function R(){var e=k();return l.a.createElement("div",{className:e.container},l.a.createElement(P.a,{defaultValue:"Hello world",className:e.input,inputProps:{"aria-label":"description"}}),l.a.createElement(P.a,{placeholder:"Placeholder",className:e.input,inputProps:{"aria-label":"description"}}),l.a.createElement(P.a,{value:"Disabled",className:e.input,disabled:!0,inputProps:{"aria-label":"description"}}),l.a.createElement(P.a,{defaultValue:"Error",className:e.input,error:!0,inputProps:{"aria-label":"description"}}))}var W=a(21),M=a(50),j=a(191),L=a(1089),D=a(1090),B=a(202),H=Object(W.a)({root:{"& label.Mui-focused":{color:"green"},"& .MuiInput-underline:after":{borderBottomColor:"green"},"& .MuiOutlinedInput-root":{"& fieldset":{borderColor:"red"},"&:hover fieldset":{borderColor:"yellow"},"&.Mui-focused fieldset":{borderColor:"green"}}}})(h.a),U=Object(W.a)((function(e){return{root:{"label + &":{marginTop:e.spacing(3)}},input:{borderRadius:4,position:"relative",backgroundColor:e.palette.common.white,border:"1px solid #ced4da",fontSize:16,width:"auto",padding:"10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{boxShadow:"".concat(Object(M.d)(e.palette.primary.main,.25)," 0 0 0 0.2rem"),borderColor:e.palette.primary.main}}}}))(D.a),q=Object(p.a)((function(e){return{root:{border:"1px solid #e2e2e1",overflow:"hidden",borderRadius:4,backgroundColor:"#fcfcfb",transition:e.transitions.create(["border-color","box-shadow"]),"&:hover":{backgroundColor:"#fff"},"&$focused":{backgroundColor:"#fff",boxShadow:"".concat(Object(M.d)(e.palette.primary.main,.25)," 0 0 0 2px"),borderColor:e.palette.primary.main}},focused:{}}}));function K(e){var n=q();return l.a.createElement(h.a,Object.assign({InputProps:{classes:n,disableUnderline:!0}},e))}var $=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)}}})),G=Object(W.a)({root:{"& input:valid + fieldset":{borderColor:"green",borderWidth:2},"& input:invalid + fieldset":{borderColor:"red",borderWidth:2},"& input:valid:focus + fieldset":{borderLeftWidth:6,padding:"4px !important"}}})(h.a),J=Object(j.a)({palette:{primary:B.a}});function z(){var e=$();return l.a.createElement("form",{className:e.root,noValidate:!0},l.a.createElement(H,{className:e.margin,id:"custom-css-standard-input",label:"Custom CSS"}),l.a.createElement(H,{className:e.margin,label:"Custom CSS",variant:"outlined",id:"custom-css-outlined-input2"}),l.a.createElement(L.a,{theme:J},l.a.createElement(h.a,{className:e.margin,label:"ThemeProvider",id:"mui-theme-provider-standard-input"}),l.a.createElement(h.a,{className:e.margin,label:"ThemeProvider",variant:"outlined",id:"mui-theme-provider-outlined-input"})),l.a.createElement(I.a,{className:e.margin},l.a.createElement(S.a,{shrink:!0,htmlFor:"bootstrap-input"},"Bootstrap"),l.a.createElement(U,{defaultValue:"react-bootstrap",id:"bootstrap-input"})),l.a.createElement(K,{label:"Reddit",className:e.margin,defaultValue:"react-reddit",variant:"filled",id:"reddit-input"}),l.a.createElement(D.a,{className:e.margin,defaultValue:"Naked input",inputProps:{"aria-label":"naked"}}),l.a.createElement(G,{className:e.margin,label:"CSS validation style",required:!0,variant:"outlined",defaultValue:"Success",id:"validation-outlined-input"}))}var Y=a(165),Q=a(1139),X=a(485),Z=a(51),_=a.n(Z),ee=a(190),ne=a.n(ee),ae=a(2319),te=a.n(ae),le=Object(p.a)((function(e){return{root:{padding:"2px 4px",display:"flex",alignItems:"center",width:400},input:{marginLeft:e.spacing(1),flex:1},iconButton:{padding:10},divider:{height:28,margin:4}}}));function re(){var e=le();return l.a.createElement(Y.a,{className:e.root},l.a.createElement(X.a,{className:e.iconButton,"aria-label":"menu"},l.a.createElement(_.a,null)),l.a.createElement(D.a,{className:e.input,placeholder:"Search Google Maps",inputProps:{"aria-label":"search google maps"}}),l.a.createElement(X.a,{className:e.iconButton,"aria-label":"search"},l.a.createElement(ne.a,null)),l.a.createElement(Q.a,{className:e.divider,orientation:"vertical"}),l.a.createElement(X.a,{color:"primary",className:e.iconButton,"aria-label":"directions"},l.a.createElement(te.a,null)))}var ie=a(1301),oe=a(1255),se=a.n(oe),de=a(1746),me=a.n(de),ue=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],ce=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},withoutLabel:{marginTop:e.spacing(3)},textField:{flexBasis:200}}}));function pe(){var e=ce(),n=l.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("div",{className:e.root},l.a.createElement(h.a,{label:"With normal TextField",id:"simple-start-adornment",className:Object(c.default)(e.margin,e.textField),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}}),l.a.createElement(h.a,{select:!0,label:"With Select",className:Object(c.default)(e.margin,e.textField),value:t.weightRange,onChange:i("weightRange"),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}},ue.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(I.a,{fullWidth:!0,className:e.margin},l.a.createElement(S.a,{htmlFor:"adornment-amount"},"Amount"),l.a.createElement(P.a,{id:"adornment-amount",value:t.amount,onChange:i("amount"),startAdornment:l.a.createElement(ie.a,{position:"start"},"$")})),l.a.createElement(I.a,{className:Object(c.default)(e.margin,e.withoutLabel,e.textField)},l.a.createElement(P.a,{id:"adornment-weight",value:t.weight,onChange:i("weight"),endAdornment:l.a.createElement(ie.a,{position:"end"},"Kg"),"aria-describedby":"weight-helper-text",inputProps:{"aria-label":"weight"}}),l.a.createElement(T.a,{id:"weight-helper-text"},"Weight")),l.a.createElement(I.a,{className:Object(c.default)(e.margin,e.textField)},l.a.createElement(S.a,{htmlFor:"adornment-password"},"Password"),l.a.createElement(P.a,{id:"adornment-password",type:t.showPassword?"text":"password",value:t.password,onChange:i("password"),endAdornment:l.a.createElement(ie.a,{position:"end"},l.a.createElement(X.a,{"aria-label":"toggle password visibility",onClick:function(){r(Object(m.a)(Object(m.a)({},t),{},{showPassword:!t.showPassword}))},onMouseDown:function(e){e.preventDefault()}},t.showPassword?l.a.createElement(se.a,null):l.a.createElement(me.a,null)))})))}var fe=a(1642),he=a.n(fe),ge=Object(p.a)((function(e){return{margin:{margin:e.spacing(1)}}}));function be(){var e=ge();return l.a.createElement("div",null,l.a.createElement(I.a,{className:e.margin},l.a.createElement(S.a,{htmlFor:"input-with-icon-adornment"},"With a start adornment"),l.a.createElement(P.a,{id:"input-with-icon-adornment",startAdornment:l.a.createElement(ie.a,{position:"start"},l.a.createElement(he.a,null))})),l.a.createElement(h.a,{className:e.margin,id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},l.a.createElement(he.a,null))}}),l.a.createElement("div",{className:e.margin},l.a.createElement(r.a,{container:!0,spacing:1,alignItems:"flex-end"},l.a.createElement(r.a,{item:!0},l.a.createElement(he.a,null)),l.a.createElement(r.a,{item:!0},l.a.createElement(h.a,{id:"input-with-icon-grid",label:"With a grid"})))))}var xe=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],ve=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},textField:{flexBasis:200}}}));function Fe(){var e=ve(),n=l.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("div",{className:e.root},l.a.createElement(h.a,{id:"filled-simple-start-adornment",className:Object(c.default)(e.margin,e.textField),variant:"filled",label:"With filled TextField",InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}}),l.a.createElement(h.a,{select:!0,className:Object(c.default)(e.margin,e.textField),variant:"filled",label:"With Select",value:t.weightRange,onChange:i("weightRange"),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}},xe.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"filled-adornment-amount",className:Object(c.default)(e.margin,e.textField),variant:"filled",label:"Amount",value:t.amount,onChange:i("amount"),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"$")}}),l.a.createElement(h.a,{id:"filled-adornment-weight",className:Object(c.default)(e.margin,e.textField),variant:"filled",label:"Weight",value:t.weight,onChange:i("weight"),helperText:"Weight",InputProps:{endAdornment:l.a.createElement(ie.a,{position:"end"},"Kg")}}),l.a.createElement(h.a,{id:"filled-adornment-password",className:Object(c.default)(e.margin,e.textField),variant:"filled",type:t.showPassword?"text":"password",label:"Password",value:t.password,onChange:i("password"),InputProps:{endAdornment:l.a.createElement(ie.a,{position:"end"},l.a.createElement(X.a,{edge:"end","aria-label":"toggle password visibility",onClick:function(){r(Object(m.a)(Object(m.a)({},t),{},{showPassword:!t.showPassword}))},onMouseDown:function(e){e.preventDefault()}},t.showPassword?l.a.createElement(me.a,null):l.a.createElement(se.a,null)))}}),l.a.createElement(h.a,{id:"filled-adornment-dense",className:Object(c.default)(e.margin,e.textField),variant:"filled",margin:"dense",label:"Amount in Euro",InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"\u20ac")}}),l.a.createElement(h.a,{id:"filled-adornment-extra-dense",className:Object(c.default)(e.margin,e.textField),variant:"filled",margin:"dense",hiddenLabel:!0,InputProps:{inputProps:{"aria-label":"amount in Euro"},startAdornment:l.a.createElement(ie.a,{position:"start"},"\u20ac")}}))}var we=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],ye=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},textField:{flexBasis:200}}}));function Ce(){var e=ye(),n=l.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("div",{className:e.root},l.a.createElement(h.a,{id:"outlined-simple-start-adornment",className:Object(c.default)(e.margin,e.textField),variant:"outlined",label:"With outlined TextField",InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}}),l.a.createElement(h.a,{select:!0,className:Object(c.default)(e.margin,e.textField),variant:"outlined",label:"With Select",value:t.weightRange,onChange:i("weightRange"),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"Kg")}},we.map((function(e){return l.a.createElement(f.a,{key:e.value,value:e.value},e.label)}))),l.a.createElement(h.a,{id:"outlined-adornment-amount2",className:Object(c.default)(e.margin,e.textField),variant:"outlined",label:"Amount",value:t.amount,onChange:i("amount"),InputProps:{startAdornment:l.a.createElement(ie.a,{position:"start"},"$")}}),l.a.createElement(h.a,{id:"outlined-adornment-weight2",className:Object(c.default)(e.margin,e.textField),variant:"outlined",label:"Weight",value:t.weight,onChange:i("weight"),helperText:"Weight",InputProps:{endAdornment:l.a.createElement(ie.a,{position:"end"},"Kg")}}),l.a.createElement(h.a,{id:"outlined-adornment-password2",className:Object(c.default)(e.margin,e.textField),variant:"outlined",type:t.showPassword?"text":"password",label:"Password",value:t.password,onChange:i("password"),InputProps:{endAdornment:l.a.createElement(ie.a,{position:"end"},l.a.createElement(X.a,{edge:"end","aria-label":"toggle password visibility",onClick:function(){r(Object(m.a)(Object(m.a)({},t),{},{showPassword:!t.showPassword}))},onMouseDown:function(e){e.preventDefault()}},t.showPassword?l.a.createElement(me.a,null):l.a.createElement(se.a,null)))}}))}var Ne="import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id='outlined-simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='With outlined TextField'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='With Select'\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-adornment-amount2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='Amount'\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='outlined-adornment-weight2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='Weight'\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText='Weight'\n        InputProps={{\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='outlined-adornment-password2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        type={values.showPassword ? 'text' : 'password'}\n        label='Password'\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                edge='end'\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n",Ee=a(117),Ie=a(2320),Te=a.n(Ie),Pe=a(2321),Se=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1)}}}));function Ve(e){var n=e.inputRef,a=Object(Ee.a)(e,["inputRef"]);return l.a.createElement(Te.a,Object.assign({},a,{ref:function(e){n(e?e.inputElement:null)},mask:["(",/[1-9]/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/],placeholderChar:"\u2000",showMask:!0}))}function Oe(e){var n=e.inputRef,a=e.onChange,t=Object(Ee.a)(e,["inputRef","onChange"]);return l.a.createElement(Pe.a,Object.assign({},t,{getInputRef:n,onValueChange:function(e){a({target:{value:e.value}})},thousandSeparator:!0,prefix:"$"}))}function Ae(){var e=Se(),n=l.a.useState({textmask:"(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000",numberformat:"1320"}),a=Object(u.a)(n,2),t=a[0],r=a[1],i=function(e){return function(n){r(Object(m.a)(Object(m.a)({},t),{},Object(d.a)({},e,n.target.value)))}};return l.a.createElement("div",{className:e.container},l.a.createElement(I.a,{className:e.formControl},l.a.createElement(S.a,{htmlFor:"formatted-text-mask-input"},"react-text-mask"),l.a.createElement(P.a,{value:t.textmask,onChange:i("textmask"),id:"formatted-text-mask-input",inputComponent:Ve})),l.a.createElement(h.a,{className:e.formControl,label:"react-number-format",value:t.numberformat,onChange:i("numberformat"),id:"formatted-numberformat-input",InputProps:{inputComponent:Oe}}))}n.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,{title:"Text Fields",description:"Text fields let users enter and edit text.",refUrl:"https://material-ui.com/components/text-fields/"}),l.a.createElement(s.a,null,l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"TextField",component:x,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '\u20ac',\n  },\n  {\n    value: 'BTC',\n    label: '\u0e3f',\n  },\n  {\n    value: 'JPY',\n    label: '\xa5',\n  },\n];\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='standard-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n      />\n      <TextField\n        id='standard-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        required\n        id='standard-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        error\n        id='standard-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        disabled\n        id='standard-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n      />\n      <TextField\n        id='standard-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id='standard-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n      />\n      <TextField\n        id='standard-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n      />\n      <TextField\n        id='standard-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-textarea'\n        label='With placeholder multiline'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n      />\n      <TextField\n        id='standard-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='standard-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='standard-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='standard-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n",description:"The TextField wrapper component is a complete form control including a label, input and help text."})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Outlined",component:w,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '\u20ac',\n  },\n  {\n    value: 'BTC',\n    label: '\u0e3f',\n  },\n  {\n    value: 'JPY',\n    label: '\xa5',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='outlined-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        required\n        id='outlined-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        error\n        id='outlined-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        disabled\n        id='outlined-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-email-input'\n        label='Email'\n        className={classes.textField}\n        type='email'\n        name='email'\n        autoComplete='email'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-dense-multiline'\n        label='Dense multiline'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='outlined'\n        multiline\n        rowsMax='4'\n      />\n      <TextField\n        id='outlined-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n        helperText='hello'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-textarea'\n        label='Multiline Placeholder'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='outlined'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='outlined'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        variant='outlined'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='outlined-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        variant='outlined'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n",description:"TextField supports outlined styling."})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Filled",component:N,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '\u20ac',\n  },\n  {\n    value: 'BTC',\n    label: '\u0e3f',\n  },\n  {\n    value: 'JPY',\n    label: '\xa5',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='filled-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        required\n        id='filled-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        error\n        id='filled-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        disabled\n        id='filled-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-email-input'\n        label='Email'\n        className={classes.textField}\n        type='email'\n        name='email'\n        autoComplete='email'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n        variant='filled'\n      />\n      <TextField\n        id='filled-hidden-label'\n        className={clsx(classes.textField, classes.dense)}\n        hiddenLabel\n        variant='filled'\n        placeholder='Hidden label'\n        inputProps={{'aria-label': 'hidden label'}}\n      />\n      <TextField\n        id='filled-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='filled'\n      />\n      <TextField\n        id='filled-dense-hidden-label'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        hiddenLabel\n        variant='filled'\n        placeholder='Dense hidden label'\n        inputProps={{'aria-label': 'dense hidden label'}}\n      />\n      <TextField\n        id='filled-dense-multiline'\n        label='Dense multiline'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='filled'\n        multiline\n        rowsMax='4'\n      />\n      <TextField\n        id='filled-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n        helperText='hello'\n        variant='filled'\n      />\n      <TextField\n        id='filled-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-textarea'\n        label='Multiline Placeholder'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='filled'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='filled'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='filled-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        variant='filled'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n",description:"TextField supports filled styling."})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Components",component:A,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState('Composed TextField');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='component-simple'>Name</InputLabel>\n        <Input id='component-simple' value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='component-helper'>Name</InputLabel>\n        <Input\n          id='component-helper'\n          value={name}\n          onChange={handleChange}\n          aria-describedby='component-helper-text'\n        />\n        <FormHelperText id='component-helper-text'>\n          Some important helper text\n        </FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='component-disabled'>Name</InputLabel>\n        <Input id='component-disabled' value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='component-error'>Name</InputLabel>\n        <Input\n          id='component-error'\n          value={name}\n          onChange={handleChange}\n          aria-describedby='component-error-text'\n        />\n        <FormHelperText id='component-error-text'>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant='outlined'>\n        <InputLabel ref={labelRef} htmlFor='component-outlined'>\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id='component-outlined'\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant='filled'>\n        <InputLabel htmlFor='component-filled'>Name</InputLabel>\n        <FilledInput\n          id='component-filled'\n          value={name}\n          onChange={handleChange}\n        />\n      </FormControl>\n    </div>\n  );\n}\n"})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Inputs",component:R,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Inputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue='Hello world'\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        placeholder='Placeholder'\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        value='Disabled'\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        defaultValue='Error'\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n    </div>\n  );\n}\n",description:"The TextField wrapper component is a complete form control including a label, input and help text."})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Customized inputs",component:z,source:"import React from 'react';\nimport {\n  createMuiTheme,\n  fade,\n  makeStyles,\n  ThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport {green} from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles((theme) => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{classes, disableUnderline: true}} {...props} />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green',\n      borderWidth: 2,\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2,\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important', // override inline-style\n    },\n  },\n})(TextField);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate>\n      <CssTextField\n        className={classes.margin}\n        id='custom-css-standard-input'\n        label='Custom CSS'\n      />\n      <CssTextField\n        className={classes.margin}\n        label='Custom CSS'\n        variant='outlined'\n        id='custom-css-outlined-input2'\n      />\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label='ThemeProvider'\n          id='mui-theme-provider-standard-input'\n        />\n        <TextField\n          className={classes.margin}\n          label='ThemeProvider'\n          variant='outlined'\n          id='mui-theme-provider-outlined-input'\n        />\n      </ThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor='bootstrap-input'>\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue='react-bootstrap' id='bootstrap-input' />\n      </FormControl>\n      <RedditTextField\n        label='Reddit'\n        className={classes.margin}\n        defaultValue='react-reddit'\n        variant='filled'\n        id='reddit-input'\n      />\n      <InputBase\n        className={classes.margin}\n        defaultValue='Naked input'\n        inputProps={{'aria-label': 'naked'}}\n      />\n      <ValidationTextField\n        className={classes.margin}\n        label='CSS validation style'\n        required\n        variant='outlined'\n        defaultValue='Success'\n        id='validation-outlined-input'\n      />\n    </form>\n  );\n}\n",description:"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page."})),l.a.createElement(r.a,{item:!0,xs:12,lg:6},l.a.createElement(i.a,{title:"Input Adornments",component:pe,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label='With normal TextField'\n        id='simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label='With Select'\n        className={clsx(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor='adornment-amount'>Amount</InputLabel>\n        <Input\n          id='adornment-amount'\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position='start'>$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl\n        className={clsx(\n          classes.margin,\n          classes.withoutLabel,\n          classes.textField,\n        )}>\n        <Input\n          id='adornment-weight'\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position='end'>Kg</InputAdornment>}\n          aria-describedby='weight-helper-text'\n          inputProps={{\n            'aria-label': 'weight',\n          }}\n        />\n        <FormHelperText id='weight-helper-text'>Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.textField)}>\n        <InputLabel htmlFor='adornment-password'>Password</InputLabel>\n        <Input\n          id='adornment-password'\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n",description:"Input allows the provision of InputAdornment."})),l.a.createElement(r.a,{item:!0,xs:12,lg:6},l.a.createElement(i.a,{title:"With icon",component:be,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='input-with-icon-adornment'>\n          With a start adornment\n        </InputLabel>\n        <Input\n          id='input-with-icon-adornment'\n          startAdornment={\n            <InputAdornment position='start'>\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id='input-with-icon-textfield'\n        label='TextField'\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position='start'>\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={1} alignItems='flex-end'>\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id='input-with-icon-grid' label='With a grid' />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n",description:"Icons can be specified as prepended or appended"})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Filled Input Adornments",component:Fe,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id='filled-simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='With filled TextField'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='With Select'\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-adornment-amount'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='Amount'\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-weight'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='Weight'\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText='Weight'\n        InputProps={{\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-password'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        type={values.showPassword ? 'text' : 'password'}\n        label='Password'\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                edge='end'\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        id='filled-adornment-dense'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        margin='dense'\n        label='Amount in Euro'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>\u20ac</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-extra-dense'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        margin='dense'\n        hiddenLabel\n        InputProps={{\n          inputProps: {\n            'aria-label': 'amount in Euro',\n          },\n          startAdornment: <InputAdornment position='start'>\u20ac</InputAdornment>,\n        }}\n      />\n    </div>\n  );\n}\n"})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Outlined Input Adornments",component:Ce,source:Ne,description:"Icons can be specified as prepended or appended"})),l.a.createElement(r.a,{item:!0,xs:12},l.a.createElement(i.a,{title:"Layout",component:Ce,source:Ne,description:"TextField, FormControl allow the specification of margin to alter the vertical spacing of inputs. Using none (default) will not apply margins to the FormControl, whereas dense and normal will as well as alter other styles to meet the specification."})),l.a.createElement(r.a,{item:!0,xs:12,lg:6},l.a.createElement(i.a,{title:"Integration with 3rd party input libraries",component:Ae,source:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction TextMaskCustom(props) {\n  const {inputRef, ...other} = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[\n        '(',\n        /[1-9]/,\n        /\\d/,\n        /\\d/,\n        ')',\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        '-',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n      ]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const {inputRef, onChange, ...other} = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix='$'\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function FormattedInputs() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000',\n    numberformat: '1320',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({\n      ...values,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='formatted-text-mask-input'>\n          react-text-mask\n        </InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange('textmask')}\n          id='formatted-text-mask-input'\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField\n        className={classes.formControl}\n        label='react-number-format'\n        value={values.numberformat}\n        onChange={handleChange('numberformat')}\n        id='formatted-numberformat-input'\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n      />\n    </div>\n  );\n}\n",description:"Icons can be specified as prepended or appended"})),l.a.createElement(r.a,{item:!0,xs:12,lg:6},l.a.createElement(i.a,{title:"Customization",component:re,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label='menu'>\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder='Search Google Maps'\n        inputProps={{'aria-label': 'search google maps'}}\n      />\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        color='primary'\n        className={classes.iconButton}\n        aria-label='directions'>\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n"}))))}}}]);
//# sourceMappingURL=152.8c6a9576.chunk.js.map