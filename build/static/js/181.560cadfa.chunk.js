(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[181],{3095:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(1151),i=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],m=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1",activeDot:{r:8}}),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#F04F47"})))},l=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{layout:"vertical",data:i,margin:{top:10,right:0,left:-13,bottom:0}},r.a.createElement(o.E,{type:"number"}),r.a.createElement(o.F,{dataKey:"name",type:"category"}),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.m,{dataKey:"pv",stroke:"#4299E1"}),r.a.createElement(o.m,{dataKey:"uv",stroke:"#F04F47"})))},s=n(313),c=n(314),h=n(316),d=n(315),p=function(e){Object(h.a)(n,e);var t=Object(d.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"render",value:function(){var e=this.props,t=e.cx,n=e.cy;return e.value>2500?r.a.createElement("svg",{x:t-10,y:n-10,width:20,height:20,fill:"red",viewBox:"0 0 1024 1024"},r.a.createElement("path",{d:"M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z"})):r.a.createElement("svg",{x:t-10,y:n-10,width:20,height:20,fill:"green",viewBox:"0 0 1024 1024"},r.a.createElement("path",{d:"M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z"}))}}]),n}(a.Component),E=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1",dot:r.a.createElement(p,null)}),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#F04F47"})))},y=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.x,{x:"Page C",stroke:"red",label:"Max PV PAGE"}),r.a.createElement(o.x,{y:9800,label:"Max",stroke:"red"}),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1"}),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#F04F47"})))},C=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1",strokeDasharray:"5 5"}),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#F04F47",strokeDasharray:"3 4 5 2"})))},u=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name",padding:{left:30,right:30}}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.l,null),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1",activeDot:{r:8}}),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#F04F47"})))},g=n(67),v=function(){return r.a.createElement(o.y,{width:"100%",height:600},r.a.createElement("div",null,r.a.createElement(g.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),r.a.createElement(g.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.m,{connectNulls:!0,type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"}))))))},f=function(){return r.a.createElement(o.y,{width:"100%",height:700},r.a.createElement(g.a,null,r.a.createElement(g.a,{textAlign:"center",component:"p"},"A demo of synchronized AreaCharts"),r.a.createElement(g.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.m,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),r.a.createElement(g.a,{textAlign:"center",component:"p"},"Maybe some other content"),r.a.createElement(g.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.n,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.m,{type:"monotone",dataKey:"pv",stroke:"#4299E1",fill:"#4299E1"})))),r.a.createElement(g.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"pv",stroke:"#4299E1",fill:"#4299E1"}),r.a.createElement(o.e,null))))))},x=n(1082),L=n(306),k=n(305),A=n(304);t.default=function(e){e.match;return r.a.createElement(r.a.Fragment,null,r.a.createElement(k.a,{title:"Line Chart",description:"All svg elements can be added into the LineChart component, such as defs.",refUrl:"http://recharts.org/en-US/api/LineChart"}),r.a.createElement(A.a,null,r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Simple Line Chart",component:m,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst SimpleLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default SimpleLineChart;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Vertical Line Chart",component:l,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst VerticalLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart\n      layout='vertical'\n      data={data}\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\n      <XAxis type='number' />\n      <YAxis dataKey='name' type='category' />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line dataKey='pv' stroke='#4299E1' />\n      <Line dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default VerticalLineChart;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Customized Dot Line Chart",component:E,source:"import React, {Component} from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nclass CustomizedDot extends Component {\n  render() {\n    const {cx, cy, value} = this.props;\n\n    if (value > 2500) {\n      return (\n        <svg\n          x={cx - 10}\n          y={cy - 10}\n          width={20}\n          height={20}\n          fill='red'\n          viewBox='0 0 1024 1024'>\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\n        </svg>\n      );\n    }\n\n    return (\n      <svg\n        x={cx - 10}\n        y={cy - 10}\n        width={20}\n        height={20}\n        fill='green'\n        viewBox='0 0 1024 1024'>\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\n      </svg>\n    );\n  }\n}\n\nconst CustomizedDotLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line\n        type='monotone'\n        dataKey='pv'\n        stroke='#4299E1'\n        dot={<CustomizedDot />}\n      />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default CustomizedDotLineChart;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Line Chart With Reference Lines",component:y,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst LineChartWithReferenceLines = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <ReferenceLine x='Page C' stroke='red' label='Max PV PAGE' />\n      <ReferenceLine y={9800} label='Max' stroke='red' />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default LineChartWithReferenceLines;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Dashed Line Chart",component:C,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst DashedLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line\n        type='monotone'\n        dataKey='pv'\n        stroke='#4299E1'\n        strokeDasharray='5 5'\n      />\n      <Line\n        type='monotone'\n        dataKey='uv'\n        stroke='#F04F47'\n        strokeDasharray='3 4 5 2'\n      />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default DashedLineChart;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Line Chart With X-Axis Padding",component:u,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst LineChartWithXAxisPading = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default LineChartWithXAxisPading;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Synchronized Line Chart",component:f,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  Brush,\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst SynchronizedLineChart = () => (\n  <ResponsiveContainer width='100%' height={700}>\n    <Box>\n      <Box textAlign='center' component='p'>\n        A demo of synchronized AreaCharts\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box textAlign='center' component='p'>\n        Maybe some other content\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='pv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='pv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n            <Brush />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </Box>\n  </ResponsiveContainer>\n);\n\nexport default SynchronizedLineChart;\n"})),r.a.createElement(x.a,{item:!0,xs:12,lg:6},r.a.createElement(L.a,{title:"Line Chart Connect Nulls",component:v,source:"import React from 'react';\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst LineChartConnectNulls = () => (\n  <ResponsiveContainer width='100%' height={600}>\n    <div>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              connectNulls={true}\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default LineChartConnectNulls;\n"}))))}}}]);
//# sourceMappingURL=181.560cadfa.chunk.js.map