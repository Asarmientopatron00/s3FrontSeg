(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[146],{3096:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(306),c=t(305),l=t(304),i=t(1081),m=t(2),h=t(9),d=t(22),s=t(1409);function u(){var e=o.a.useState({checkedA:!0,checkedB:!0}),n=Object(d.a)(e,2),t=n[0],a=n[1],r=function(e){return function(n){a(Object(h.a)(Object(h.a)({},t),{},Object(m.a)({},e,n.target.checked)))}};return o.a.createElement("div",null,o.a.createElement(s.a,{checked:t.checkedA,onChange:r("checkedA"),value:"checkedA",inputProps:{"aria-label":"secondary checkbox"}}),o.a.createElement(s.a,{checked:t.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"primary checkbox"}}),o.a.createElement(s.a,{value:"checkedC",inputProps:{"aria-label":"primary checkbox"}}),o.a.createElement(s.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),o.a.createElement(s.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"primary checkbox"}}),o.a.createElement(s.a,{defaultChecked:!0,value:"checkedF",color:"default",inputProps:{"aria-label":"checkbox with default color"}}))}var p=t(1296),b=t(1279);function k(){var e=o.a.useState({checkedA:!0,checkedB:!0}),n=Object(d.a)(e,2),t=n[0],a=n[1],r=function(e){return function(n){a(Object(h.a)(Object(h.a)({},t),{},Object(m.a)({},e,n.target.checked)))}};return o.a.createElement(p.a,{row:!0},o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Secondary"}),o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),o.a.createElement(b.a,{control:o.a.createElement(s.a,{value:"checkedC"}),label:"Uncontrolled"}),o.a.createElement(b.a,{disabled:!0,control:o.a.createElement(s.a,{value:"checkedD"}),label:"Disabled"}),o.a.createElement(b.a,{disabled:!0,control:o.a.createElement(s.a,{checked:!0,value:"checkedE"}),label:"Disabled"}))}var g=t(1450),C=t(1314),f=t(1353);function w(){var e=o.a.useState({gilad:!0,jason:!1,antoine:!0}),n=Object(d.a)(e,2),t=n[0],a=n[1],r=function(e){return function(n){a(Object(h.a)(Object(h.a)({},t),{},Object(m.a)({},e,n.target.checked)))}};return o.a.createElement(C.a,{component:"fieldset"},o.a.createElement(g.a,{component:"legend"},"Assign responsibility"),o.a.createElement(p.a,null,o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t.gilad,onChange:r("gilad"),value:"gilad"}),label:"Gilad Gray"}),o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t.jason,onChange:r("jason"),value:"jason"}),label:"Jason Killian"}),o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t.antoine,onChange:r("antoine"),value:"antoine"}),label:"Antoine Llorca"})),o.a.createElement(f.a,null,"Be careful"))}var S=t(117),E=t(21),F=t(1121),v=t(114),y=Object(E.a)({switchBase:{color:F.a[300],"&$checked":{color:F.a[500]},"&$checked + $track":{backgroundColor:F.a[500]}},checked:{},track:{}})(s.a),x=Object(E.a)((function(e){return{root:{width:42,height:26,padding:0,margin:e.spacing(1)},switchBase:{padding:1,"&$checked":{transform:"translateX(16px)",color:e.palette.common.white,"& + $track":{backgroundColor:"#52d869",opacity:1,border:"none"}},"&$focusVisible $thumb":{color:"#52d869",border:"6px solid #fff"}},thumb:{width:24,height:24},track:{borderRadius:13,border:"1px solid ".concat(e.palette.grey[400]),backgroundColor:e.palette.grey[50],opacity:1,transition:e.transitions.create(["background-color","border"])},checked:{},focusVisible:{}}}))((function(e){var n=e.classes,t=Object(S.a)(e,["classes"]);return o.a.createElement(s.a,Object.assign({focusVisibleClassName:n.focusVisible,disableRipple:!0,classes:{root:n.root,switchBase:n.switchBase,thumb:n.thumb,track:n.track,checked:n.checked}},t))})),B=Object(E.a)((function(e){return{root:{width:28,height:16,padding:0,display:"flex"},switchBase:{padding:2,color:e.palette.grey[500],"&$checked":{transform:"translateX(12px)",color:e.palette.common.white,"& + $track":{opacity:1,backgroundColor:e.palette.primary.main,borderColor:e.palette.primary.main}}},thumb:{width:12,height:12,boxShadow:"none"},track:{border:"1px solid ".concat(e.palette.grey[500]),borderRadius:8,opacity:1,backgroundColor:e.palette.common.white},checked:{}}}))(s.a);function G(){var e=o.a.useState({checkedA:!0,checkedB:!0,checkedC:!0}),n=Object(d.a)(e,2),t=n[0],a=n[1],r=function(e){return function(n){a(Object(h.a)(Object(h.a)({},t),{},Object(m.a)({},e,n.target.checked)))}};return o.a.createElement(p.a,null,o.a.createElement(b.a,{control:o.a.createElement(y,{checked:t.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Custom color"}),o.a.createElement(b.a,{control:o.a.createElement(x,{checked:t.checkedB,onChange:r("checkedB"),value:"checkedB"}),label:"iOS style"}),o.a.createElement(v.a,{component:"div"},o.a.createElement(i.a,{component:"label",container:!0,alignItems:"center",spacing:1},o.a.createElement(i.a,{item:!0},"Off"),o.a.createElement(i.a,{item:!0},o.a.createElement(B,{checked:t.checkedC,onChange:r("checkedC"),value:"checkedC"})),o.a.createElement(i.a,{item:!0},"On"))))}function L(){var e=o.a.useState(!1),n=Object(d.a)(e,2),t=n[0],a=n[1],r=function(){a((function(e){return!e}))};return o.a.createElement(p.a,null,o.a.createElement(b.a,{control:o.a.createElement(s.a,{size:"small",checked:t,onChange:r}),label:"Small"}),o.a.createElement(b.a,{control:o.a.createElement(s.a,{checked:t,onChange:r}),label:"Normal"}))}function j(){return o.a.createElement(C.a,{component:"fieldset"},o.a.createElement(p.a,{"aria-label":"position",row:!0},o.a.createElement(b.a,{value:"top",control:o.a.createElement(s.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),o.a.createElement(b.a,{value:"start",control:o.a.createElement(s.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),o.a.createElement(b.a,{value:"bottom",control:o.a.createElement(s.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),o.a.createElement(b.a,{value:"end",control:o.a.createElement(s.a,{color:"primary"}),label:"End",labelPlacement:"end"})))}n.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(c.a,{title:"Switches",description:"Switches toggle the state of a single setting on or off.",refUrl:"https://material-ui.com/components/switches//"}),o.a.createElement(l.a,null,o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Simple Switches",component:u,source:"import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value='checkedA'\n        inputProps={{'aria-label': 'secondary checkbox'}}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value='checkedB'\n        color='primary'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        value='checkedC'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        disabled\n        value='checkedD'\n        inputProps={{'aria-label': 'disabled checkbox'}}\n      />\n      <Switch\n        disabled\n        checked\n        value='checkedE'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        defaultChecked\n        value='checkedF'\n        color='default'\n        inputProps={{'aria-label': 'checkbox with default color'}}\n      />\n    </div>\n  );\n}\n",description:"Switches are the preferred way to adjust settings on mobile. The option that the switch controls, as well as the state it\u2019s in, should be made clear from the corresponding inline label."})),o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Switches with FormControlLabel",component:k,source:"import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value='checkedA'\n          />\n        }\n        label='Secondary'\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value='checkedB'\n            color='primary'\n          />\n        }\n        label='Primary'\n      />\n      <FormControlLabel\n        control={<Switch value='checkedC' />}\n        label='Uncontrolled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch value='checkedD' />}\n        label='Disabled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch checked value='checkedE' />}\n        label='Disabled'\n      />\n    </FormGroup>\n  );\n}\n",description:"Switch can also be used with a label description thanks to the FormControlLabel component."})),o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Switches with FormGroup",component:w,source:"import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.gilad}\n              onChange={handleChange('gilad')}\n              value='gilad'\n            />\n          }\n          label='Gilad Gray'\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.jason}\n              onChange={handleChange('jason')}\n              value='jason'\n            />\n          }\n          label='Jason Killian'\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.antoine}\n              onChange={handleChange('antoine')}\n              value='antoine'\n            />\n          }\n          label='Antoine Llorca'\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n",description:"FormGroup is a helpful wrapper used to group selection controls components that provides an easier API. However, we encourage you to use a Checkbox instead."})),o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Customized switches",component:G,source:"import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {purple} from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({classes, ...props}) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value='checkedA'\n          />\n        }\n        label='Custom color'\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value='checkedB'\n          />\n        }\n        label='iOS style'\n      />\n      <Typography component='div'>\n        <Grid component='label' container alignItems='center' spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange('checkedC')}\n              value='checkedC'\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n",description:"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page."})),o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Switch Sizes",component:L,source:"import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function SwitchesSize() {\n  const [checked, setChecked] = React.useState(false);\n\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch size='small' checked={checked} onChange={toggleChecked} />\n        }\n        label='Small'\n      />\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={toggleChecked} />}\n        label='Normal'\n      />\n    </FormGroup>\n  );\n}\n",description:"Fancy smaller switches? Use the size property."})),o.a.createElement(i.a,{item:!0,xs:12,lg:6},o.a.createElement(r.a,{title:"Label placement",component:j,source:"import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nexport default function FormControlLabelPosition() {\n  return (\n    <FormControl component='fieldset'>\n      <FormGroup aria-label='position' row>\n        <FormControlLabel\n          value='top'\n          control={<Switch color='primary' />}\n          label='Top'\n          labelPlacement='top'\n        />\n        <FormControlLabel\n          value='start'\n          control={<Switch color='primary' />}\n          label='Start'\n          labelPlacement='start'\n        />\n        <FormControlLabel\n          value='bottom'\n          control={<Switch color='primary' />}\n          label='Bottom'\n          labelPlacement='bottom'\n        />\n        <FormControlLabel\n          value='end'\n          control={<Switch color='primary' />}\n          label='End'\n          labelPlacement='end'\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n",description:"You can change the placement of the label."}))))}}}]);
//# sourceMappingURL=146.82141fa3.chunk.js.map