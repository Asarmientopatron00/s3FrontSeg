{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","modules/muiComponents/navigation/Links/SimpleLinks.js","modules/muiComponents/navigation/Links/AccessibilityLinks.js","webpack:///./src/modules/muiComponents/navigation/Links/AccessibilityLinks.js?1bf8","modules/muiComponents/navigation/Links/SecurityLink.js","modules/muiComponents/navigation/Links/index.js","webpack:///./src/modules/muiComponents/navigation/Links/SimpleLinks.js?7a73","webpack:///./src/modules/muiComponents/navigation/Links/SecurityLink.js?fde0"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","useStyles","makeStyles","theme","link","spacing","Links","href","ButtonLink","onClick","alert","AdapterLink","forwardRef","innerRef","CollisionLink","to","LinkRouter","RouterLink","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","SimpleLinks","source","AccessibilityLinks","SecurityLink"],"mappings":"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","file":"static/js/128.0c5c8d38.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    margin: theme.spacing(1),\n  },\n}));\n\n// This resolves to nothing and doesn't affect browser history\nconst dudUrl = '#;';\n\nexport default function Links() {\n  const classes = useStyles();\n\n  return (\n    <Typography>\n      <Link href={dudUrl} className={classes.link}>\n        Link\n      </Link>\n      <Link href={dudUrl} color='inherit' className={classes.link}>\n        {'color=\"inherit\"'}\n      </Link>\n      <Link href={dudUrl} variant='body2' className={classes.link}>\n        {'variant=\"body2\"'}\n      </Link>\n    </Typography>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nexport default function ButtonLink() {\n  return (\n    <Link\n      component='button'\n      variant='body2'\n      onClick={() => {\n        alert(\"I'm a button.\");\n      }}>\n      Button Link\n    </Link>\n  );\n}\n","export default \"import React from 'react';\\nimport Link from '@material-ui/core/Link';\\n\\nexport default function ButtonLink() {\\n  return (\\n    <Link\\n      component='button'\\n      variant='body2'\\n      onClick={() => {\\n        alert(\\\"I'm a button.\\\");\\n      }}>\\n      Button Link\\n    </Link>\\n  );\\n}\\n\";","import React from 'react';\nimport {MemoryRouter as Router} from 'react-router';\nimport {Link as RouterLink} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\n// see https://github.com/ReactTraining/react-router/issues/6056\nconst AdapterLink = React.forwardRef((props, ref) => (\n  <RouterLink innerRef={ref} {...props} />\n));\n\nconst CollisionLink = React.forwardRef((props, ref) => (\n  <RouterLink innerRef={ref} to='/getting-started/installation/' {...props} />\n));\n\nexport default function LinkRouter() {\n  return (\n    <Router>\n      <div>\n        <Link component={RouterLink} to='/'>\n          Simple case\n        </Link>\n        <br />\n        <Link component={AdapterLink} to='/'>\n          Ref forwarding\n        </Link>\n        <br />\n        <Link component={CollisionLink}>Avoids props collision</Link>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleLinks from './SimpleLinks';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleLinksSource from '!raw-loader!./SimpleLinks';\nimport AccessibilityLinks from './AccessibilityLinks';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AccessibilityLinksSource from '!raw-loader!./AccessibilityLinks';\nimport SecurityLink from './SecurityLink';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SecurityLinkSource from '!raw-loader!./SecurityLink';\n\nconst Links = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Links'\n        description='The Link component allows you to easily customize anchor elements with your theme colors and typography styles'\n        refUrl='https://material-ui.com/components/links/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple links'\n            component={SimpleLinks}\n            source={SimpleLinksSource}\n            description='The Link component is built on top of the Typography component. You can leverage its properties.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Accessibility links'\n            component={AccessibilityLinks}\n            source={AccessibilityLinksSource}\n            description='The Link component is built on top of the Typography component. You can leverage its properties.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Security links'\n            component={SecurityLink}\n            source={SecurityLinkSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Links;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Link from '@material-ui/core/Link';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  link: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\n// This resolves to nothing and doesn't affect browser history\\nconst dudUrl = '#;';\\n\\nexport default function Links() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Typography>\\n      <Link href={dudUrl} className={classes.link}>\\n        Link\\n      </Link>\\n      <Link href={dudUrl} color='inherit' className={classes.link}>\\n        {'color=\\\"inherit\\\"'}\\n      </Link>\\n      <Link href={dudUrl} variant='body2' className={classes.link}>\\n        {'variant=\\\"body2\\\"'}\\n      </Link>\\n    </Typography>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport {MemoryRouter as Router} from 'react-router';\\nimport {Link as RouterLink} from 'react-router-dom';\\nimport Link from '@material-ui/core/Link';\\n\\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\\n// see https://github.com/ReactTraining/react-router/issues/6056\\nconst AdapterLink = React.forwardRef((props, ref) => (\\n  <RouterLink innerRef={ref} {...props} />\\n));\\n\\nconst CollisionLink = React.forwardRef((props, ref) => (\\n  <RouterLink innerRef={ref} to='/getting-started/installation/' {...props} />\\n));\\n\\nexport default function LinkRouter() {\\n  return (\\n    <Router>\\n      <div>\\n        <Link component={RouterLink} to='/'>\\n          Simple case\\n        </Link>\\n        <br />\\n        <Link component={AdapterLink} to='/'>\\n          Ref forwarding\\n        </Link>\\n        <br />\\n        <Link component={CollisionLink}>Avoids props collision</Link>\\n      </div>\\n    </Router>\\n  );\\n}\\n\";"],"sourceRoot":""}