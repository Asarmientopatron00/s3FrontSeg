{"version":3,"sources":["modules/muiComponents/util/Modal/SimpleModal.js","webpack:///./src/modules/muiComponents/util/Modal/SimpleModal.js?44c1","modules/muiComponents/util/Modal/TransitionsModal.js","modules/muiComponents/util/Modal/index.js","webpack:///./src/modules/muiComponents/util/Modal/TransitionsModal.js?19f0"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","useState","modalStyle","open","setOpen","type","onClick","Modal","aria-labelledby","aria-describedby","onClose","style","className","id","modal","display","alignItems","justifyContent","TransitionsModal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Modals","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"6LAIA,SAASA,IACP,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG1C,SAASC,IACP,IAAMC,EAAM,GAAKL,IACXM,EAAO,GAAKN,IAElB,MAAO,CACLK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIb,IAAME,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QAIlB,SAASC,IACtB,IAAMC,EAAUf,IADoB,EAGfgB,IAAMC,SAASrB,GAA7BsB,EAH6B,sBAIZF,IAAMC,UAAS,GAJH,mBAI7BE,EAJ6B,KAIvBC,EAJuB,KAcpC,OACE,6BACE,sEACA,4BAAQC,KAAK,SAASC,QAXP,WACjBF,GAAQ,KAUN,cAGA,kBAACG,EAAA,EAAD,CACEC,kBAAgB,qBAChBC,mBAAiB,2BACjBN,KAAMA,EACNO,QAdc,WAClBN,GAAQ,KAcJ,yBAAKO,MAAOT,EAAYU,UAAWb,EAAQZ,OACzC,wBAAI0B,GAAG,sBAAP,mBACA,uBAAGA,GAAG,4BAAN,oEAGA,kBAACf,EAAD,SC5DK,I,oBCMTd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4B,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElB9B,MAAO,CACLG,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QAIlB,SAASqB,IACtB,IAAMnB,EAAUf,IADyB,EAEjBgB,IAAMC,UAAS,GAFE,mBAElCE,EAFkC,KAE5BC,EAF4B,KAYzC,OACE,6BACE,4BAAQC,KAAK,SAASC,QAVP,WACjBF,GAAQ,KASN,0BAGA,kBAACG,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBG,UAAWb,EAAQe,MACnBX,KAAMA,EACNO,QAdc,WAClBN,GAAQ,IAcJe,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAEX,kBAACC,EAAA,EAAD,CAAMC,GAAItB,GACR,yBAAKS,UAAWb,EAAQZ,OACtB,wBAAI0B,GAAG,0BAAP,oBACA,uBAAGA,GAAG,gCAAN,0CCPGa,UA9BA,WACb,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,QACNC,YAAY,gHACZC,OAAO,8CAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,eACNS,UAAWvC,EACXwC,OF5BG,ysDE+BP,kBAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,oBACNS,UAAWnB,EACXoB,OCnCG,wjDDoCHT,YAAY","file":"static/js/155.2b436319.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <p>Click to get the full Modal experience!</p>\n      <button type='button' onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        aria-labelledby='simple-modal-title'\n        aria-describedby='simple-modal-description'\n        open={open}\n        onClose={handleClose}>\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id='simple-modal-title'>Text in a modal</h2>\n          <p id='simple-modal-description'>\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </p>\n          <SimpleModal />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\n\\nfunction rand() {\\n  return Math.round(Math.random() * 20) - 10;\\n}\\n\\nfunction getModalStyle() {\\n  const top = 50 + rand();\\n  const left = 50 + rand();\\n\\n  return {\\n    top: `${top}%`,\\n    left: `${left}%`,\\n    transform: `translate(-${top}%, -${left}%)`,\\n  };\\n}\\n\\nconst useStyles = makeStyles((theme) => ({\\n  paper: {\\n    position: 'absolute',\\n    width: 400,\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nexport default function SimpleModal() {\\n  const classes = useStyles();\\n  // getModalStyle is not a pure function, we roll the style only on the first render\\n  const [modalStyle] = React.useState(getModalStyle);\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <p>Click to get the full Modal experience!</p>\\n      <button type='button' onClick={handleOpen}>\\n        Open Modal\\n      </button>\\n      <Modal\\n        aria-labelledby='simple-modal-title'\\n        aria-describedby='simple-modal-description'\\n        open={open}\\n        onClose={handleClose}>\\n        <div style={modalStyle} className={classes.paper}>\\n          <h2 id='simple-modal-title'>Text in a modal</h2>\\n          <p id='simple-modal-description'>\\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\\n          </p>\\n          <SimpleModal />\\n        </div>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button type='button' onClick={handleOpen}>\n        react-transition-group\n      </button>\n      <Modal\n        aria-labelledby='transition-modal-title'\n        aria-describedby='transition-modal-description'\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id='transition-modal-title'>Transition modal</h2>\n            <p id='transition-modal-description'>\n              react-transiton-group animates me.\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleModal from './SimpleModal';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleModalSource from '!raw-loader!./SimpleModal';\nimport TransitionsModal from './TransitionsModal';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TransitionsModalSource from '!raw-loader!./TransitionsModal';\n\nconst Modals = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Modal'\n        description='The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.'\n        refUrl='https://material-ui.com/components/modal/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple modal'\n            component={SimpleModal}\n            source={SimpleModalSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Transitions modal'\n            component={TransitionsModal}\n            source={TransitionsModalSource}\n            description='The open/close state of the modal can be animated with a transition component. This component should respect the following conditions.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Modals;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\nimport Backdrop from '@material-ui/core/Backdrop';\\nimport Fade from '@material-ui/core/Fade';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  modal: {\\n    display: 'flex',\\n    alignItems: 'center',\\n    justifyContent: 'center',\\n  },\\n  paper: {\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nexport default function TransitionsModal() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <button type='button' onClick={handleOpen}>\\n        react-transition-group\\n      </button>\\n      <Modal\\n        aria-labelledby='transition-modal-title'\\n        aria-describedby='transition-modal-description'\\n        className={classes.modal}\\n        open={open}\\n        onClose={handleClose}\\n        closeAfterTransition\\n        BackdropComponent={Backdrop}\\n        BackdropProps={{\\n          timeout: 500,\\n        }}>\\n        <Fade in={open}>\\n          <div className={classes.paper}>\\n            <h2 id='transition-modal-title'>Transition modal</h2>\\n            <p id='transition-modal-description'>\\n              react-transiton-group animates me.\\n            </p>\\n          </div>\\n        </Fade>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}