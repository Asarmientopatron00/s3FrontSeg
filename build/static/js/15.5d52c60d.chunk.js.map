{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","../node_modules/@material-ui/lab/esm/TreeView/TreeView.js","../node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"names":["useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","React","undefined","current","_React$useState","valueState","setValue","newValue","_interopRequireDefault","require","Object","defineProperty","exports","value","_react","_default","createElement","d","TreeViewContext","findNextFirstChar","firstChars","startIndex","char","i","length","defaultExpandedDefault","defaultSelectedDefault","TreeView","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_objectWithoutProperties","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","visibleNodes","_useControlled","_useControlled2","_slicedToArray","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","id","Array","isArray","indexOf","isSelected","getNextNode","nodeIndex","getPreviousNode","getLastNode","getFirstNode","focus","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","event","nodes","base","start","next","filter","push","handleRangeSelect","end","range","a","b","aIndex","bIndex","Math","min","max","slice","getNodesInRange","newSelected","concat","handleMultipleSelect","handleSingleSelect","selectRange","stacked","arguments","_nodes$start","getNodesToRemove","map","forEach","node","cleanUpFirstCharMap","newMap","_extends","removeNodeFromNodeMap","parent","parentMap","parentChildren","c","oldFocusedNodeId","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","childIds","child","nodeId","arr1","arr2","arrayDiff","index","buildVisible","list","item","childs","noopSelection","Provider","icons","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","lowercaseChar","toLowerCase","firstCharIds","keys","firstChar","expandAllSiblings","diff","newExpanded","toggleExpansion","oldTabbable","isFocused","selectNode","multiple","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","isTabbable","getParent","mapFirstChar","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","role","clsx","root","withStyles","padding","margin","listStyle","TreeItem","collapseIcon","endIcon","expandIcon","iconProp","icon","label","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_React$useContext","contextIcons","nodeRef","contentRef","handleRef","useForkRef","expandable","Boolean","focused","theme","useTheme","ariaSelected","handleNextArrow","handlePreviousArrow","textContent","substring","flag","key","altKey","currentTarget","target","str","ctrlPressed","ctrlKey","metaKey","shiftKey","stopPropagation","direction","match","preventDefault","tabIndex","content","defaultPrevented","iconContainer","Typography","component","unmountOnExit","group","in","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","fade","primary","main","selectedOpacity","hoverOpacity","marginLeft","width","display","alignItems","cursor","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position"],"mappings":"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","file":"static/js/15.5d52c60d.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"],"sourceRoot":""}