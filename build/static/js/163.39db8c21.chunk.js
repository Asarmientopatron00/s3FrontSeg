(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[163],{3164:function(e,n,o){"use strict";o.r(n);var t=o(0),a=o.n(t),r=o(1082),m=o(306),s=o(305),i=o(304),l=o(313),p=o(314),c=o(323),d=o(316),h=o(315),g=o(1310),u=window.google,M=Object(g.withGoogleMap)((function(e){return a.a.createElement(g.GoogleMap,{ref:e.onMapMounted,onZoomChanged:e.onZoomChanged,defaultCenter:e.center,zoom:e.zoom},a.a.createElement(g.InfoWindow,{defaultPosition:e.center},a.a.createElement("div",null,e.content)))})),v=function(e){Object(d.a)(o,e);var n=Object(h.a)(o);function o(){var e;Object(l.a)(this,o);for(var t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(e=n.call.apply(n,[this].concat(a))).state={zoom:15,content:"Change the zoom level"},e.handleMapMounted=e.handleMapMounted.bind(Object(c.a)(e)),e.handleZoomChanged=e.handleZoomChanged.bind(Object(c.a)(e)),e}return Object(p.a)(o,[{key:"handleMapMounted",value:function(e){this._map=e}},{key:"handleZoomChanged",value:function(){var e=this._map.getZoom();e!==this.state.zoom&&this.setState({zoom:e,content:"Zoom: ".concat(e)})}},{key:"render",value:function(){return a.a.createElement(M,{containerElement:a.a.createElement("div",{className:"cr-embed-responsive cr-embed-responsive-21by9"}),mapElement:a.a.createElement("div",{className:"cr-embed-responsive-item"}),onMapMounted:this.handleMapMounted,onZoomChanged:this.handleZoomChanged,center:new u.maps.LatLng(47.646935,-122.303763),zoom:this.state.zoom,content:this.state.content})}}]),o}(t.Component);n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(s.a,{title:"Event Handler Google Map",refUrl:"http://google-map-react.github.io/google-map-react/map/balderdash/"}),a.a.createElement(i.a,null,a.a.createElement(r.a,{item:!0,xs:12},a.a.createElement(m.a,{title:"Event Handler Map",component:v,source:"import React, {Component} from 'react';\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\n\nconst google = window.google;\n\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}>\n    <InfoWindow defaultPosition={props.center}>\n      <div>{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"><\/script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}\n"}))))}}}]);
//# sourceMappingURL=163.39db8c21.chunk.js.map