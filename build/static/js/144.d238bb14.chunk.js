(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[144],{3098:function(n,e,a){"use strict";a.r(e);var t=a(0),o=a.n(t),r=a(1086),s=a(306),i=a(304),c=a(303),l=a(22),m=a(164),u=a(499),p=a(1136),d=a(485),k=a(123),g=a.n(k),b=Object(m.a)((function(n){return{close:{padding:n.spacing(.5)}}}));function f(){var n=b(),e=o.a.useState(!1),a=Object(l.a)(e,2),t=a[0],r=a[1];function s(n,e){"clickaway"!==e&&r(!1)}return o.a.createElement("div",null,o.a.createElement(u.a,{onClick:function(){r(!0)}},"Open simple snackbar"),o.a.createElement(p.a,{anchorOrigin:{vertical:"bottom",horizontal:"left"},open:t,autoHideDuration:6e3,onClose:s,ContentProps:{"aria-describedby":"message-id"},message:o.a.createElement("span",{id:"message-id"},"Note archived"),action:[o.a.createElement(u.a,{key:"undo",color:"secondary",size:"small",onClick:s},"UNDO"),o.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",className:n.close,onClick:s},o.a.createElement(g.a,null))]}))}var h=a(117),C=a(4),v=a(351),S=a.n(v),y=a(426),E=a.n(y),B=a(343),I=a.n(B),T=a(202),w=a(1122),O=a(1088),N=a(425),R=a.n(N),x={success:S.a,warning:R.a,error:E.a,info:I.a},z=Object(m.a)((function(n){return{success:{backgroundColor:T.a[600]},error:{backgroundColor:n.palette.error.dark},info:{backgroundColor:n.palette.primary.main},warning:{backgroundColor:w.a[700]},icon:{fontSize:20},iconVariant:{opacity:.9,marginRight:n.spacing(1)},message:{display:"flex",alignItems:"center"}}}));function j(n){var e=z(),a=n.className,t=n.message,r=n.onClose,s=n.variant,i=Object(h.a)(n,["className","message","onClose","variant"]),c=x[s];return o.a.createElement(O.a,Object.assign({className:Object(C.default)(e[s],a),"aria-describedby":"client-snackbar",message:o.a.createElement("span",{id:"client-snackbar",className:e.message},o.a.createElement(c,{className:Object(C.default)(e.icon,e.iconVariant)}),t),action:[o.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",onClick:r},o.a.createElement(g.a,{className:e.icon}))]},i))}var P=Object(m.a)((function(n){return{margin:{margin:n.spacing(1)}}}));function D(){var n=P(),e=o.a.useState(!1),a=Object(l.a)(e,2),t=a[0],r=a[1];function s(n,e){"clickaway"!==e&&r(!1)}return o.a.createElement("div",null,o.a.createElement(u.a,{variant:"outlined",className:n.margin,onClick:function(){r(!0)}},"Open success snackbar"),o.a.createElement(p.a,{anchorOrigin:{vertical:"bottom",horizontal:"left"},open:t,autoHideDuration:6e3,onClose:s},o.a.createElement(j,{onClose:s,variant:"success",message:"This is a success message!"})),o.a.createElement(j,{variant:"error",className:n.margin,message:"This is an error message!"}),o.a.createElement(j,{variant:"warning",className:n.margin,message:"This is a warning message!"}),o.a.createElement(j,{variant:"info",className:n.margin,message:"This is an information message!"}),o.a.createElement(j,{variant:"success",className:n.margin,message:"This is a success message!"}))}var M=a(7);function A(){var n=o.a.useState({open:!1,vertical:"top",horizontal:"center"}),e=Object(l.a)(n,2),a=e[0],t=e[1],r=a.vertical,s=a.horizontal,i=a.open,c=function(n){return function(){t(Object(M.a)({open:!0},n))}};return o.a.createElement("div",null,o.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"center"})},"Top-Center"),o.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"right"})},"Top-Right"),o.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"right"})},"Bottom-Right"),o.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"center"})},"Bottom-Center"),o.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"left"})},"Bottom-Left"),o.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"left"})},"Top-Left"),o.a.createElement(p.a,{anchorOrigin:{vertical:r,horizontal:s},key:"".concat(r,",").concat(s),open:i,onClose:function(){t(Object(M.a)(Object(M.a)({},a),{},{open:!1}))},ContentProps:{"aria-describedby":"message-id"},message:o.a.createElement("span",{id:"message-id"},"I love snacks")}))}var F=o.a.createElement(u.a,{color:"secondary",size:"small"},"lorem ipsum dolorem"),W=Object(m.a)((function(n){return{root:{maxWidth:600},snackbar:{margin:n.spacing(1)}}}));function U(){var n=W();return o.a.createElement("div",{className:n.root},o.a.createElement(O.a,{className:n.snackbar,message:"I love snacks.",action:F}),o.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate."}),o.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.",action:F}),o.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.",action:F}))}var L=Object(m.a)((function(n){return{close:{padding:n.spacing(.5)}}}));function q(){var n=o.a.useRef([]),e=o.a.useState(!1),a=Object(l.a)(e,2),t=a[0],r=a[1],s=o.a.useState(void 0),i=Object(l.a)(s,2),c=i[0],m=i[1],k=function(){n.current.length>0&&(m(n.current.shift()),r(!0))},b=function(e){return function(){n.current.push({message:e,key:(new Date).getTime()}),t?r(!1):k()}},f=function(n,e){"clickaway"!==e&&r(!1)},h=L();return o.a.createElement("div",null,o.a.createElement(u.a,{onClick:b("Message A")},"Show message A"),o.a.createElement(u.a,{onClick:b("Message B")},"Show message B"),o.a.createElement(p.a,{key:c?c.key:void 0,anchorOrigin:{vertical:"bottom",horizontal:"left"},open:t,autoHideDuration:6e3,onClose:f,onExited:function(){k()},ContentProps:{"aria-describedby":"message-id"},message:o.a.createElement("span",{id:"message-id"},c?c.message:void 0),action:[o.a.createElement(u.a,{key:"undo",color:"secondary",size:"small",onClick:f},"UNDO"),o.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",className:h.close,onClick:f},o.a.createElement(g.a,null))]}))}var G=a(2),H=a(1141),V=a(1144),Q=a(1125),J=a(51),Y=a.n(J),$=a(114),K=a(1389),X=a(1206),Z=a.n(X),_=Object(m.a)((function(n){return{"@global":{body:{backgroundColor:n.palette.background.paper}},menuButton:{marginRight:n.spacing(2)},fab:{position:"absolute",bottom:n.spacing(2),right:n.spacing(2)},snackbar:Object(G.a)({},n.breakpoints.down("xs"),{bottom:90})}}));function nn(){var n=_();return o.a.createElement(o.a.Fragment,null,o.a.createElement(V.a,null),o.a.createElement("div",null,o.a.createElement(H.a,{position:"static",color:"primary"},o.a.createElement(Q.a,null,o.a.createElement(d.a,{edge:"start",className:n.menuButton,color:"inherit","aria-label":"menu"},o.a.createElement(Y.a,null)),o.a.createElement($.a,{variant:"h6",color:"inherit"},"App Bar"))),o.a.createElement(K.a,{color:"secondary",className:n.fab},o.a.createElement(Z.a,null)),o.a.createElement(p.a,{open:!0,autoHideDuration:4e3,ContentProps:{"aria-describedby":"snackbar-fab-message-id"},message:o.a.createElement("span",{id:"snackbar-fab-message-id"},"Archived"),action:o.a.createElement(u.a,{color:"inherit",size:"small"},"Undo"),className:n.snackbar})))}var en=a(1092);function an(n){return o.a.createElement(en.a,Object.assign({},n,{direction:"left"}))}function tn(n){return o.a.createElement(en.a,Object.assign({},n,{direction:"up"}))}function on(n){return o.a.createElement(en.a,Object.assign({},n,{direction:"right"}))}function rn(n){return o.a.createElement(en.a,Object.assign({},n,{direction:"down"}))}function sn(){var n=o.a.useState(!1),e=Object(l.a)(n,2),a=e[0],t=e[1],r=o.a.useState(void 0),s=Object(l.a)(r,2),i=s[0],c=s[1],m=function(n){return function(){c((function(){return n})),t(!0)}};return o.a.createElement("div",null,o.a.createElement(u.a,{onClick:m(an)},"Right"),o.a.createElement(u.a,{onClick:m(tn)},"Up"),o.a.createElement(u.a,{onClick:m(on)},"Left"),o.a.createElement(u.a,{onClick:m(rn)},"Down"),o.a.createElement(p.a,{open:a,onClose:function(){t(!1)},TransitionComponent:i,ContentProps:{"aria-describedby":"message-id"},message:o.a.createElement("span",{id:"message-id"},"I love snacks")}))}var cn=a(2346);function ln(){var n,e=Object(cn.b)().enqueueSnackbar;return o.a.createElement(o.a.Fragment,null,o.a.createElement(u.a,{onClick:function(){e("I love snacks.")}},"Show snackbar"),o.a.createElement(u.a,{onClick:(n="warning",function(){e("This is a warning message!",{variant:n})})},"Show warning snackbar"))}function mn(){return o.a.createElement(cn.a,{maxSnack:3},o.a.createElement(ln,null))}var un=a(1094),pn=a(360);function dn(n){return o.a.createElement(en.a,Object.assign({},n,{direction:"up"}))}function kn(n){return o.a.createElement(pn.a,n)}function gn(){var n=o.a.useState({open:!1,Transition:un.a}),e=Object(l.a)(n,2),a=e[0],t=e[1],r=function(n){return function(){t({open:!0,Transition:n})}};return o.a.createElement("div",null,o.a.createElement(u.a,{onClick:r(kn)},"Grow Transition"),o.a.createElement(u.a,{onClick:r(un.a)},"Fade Transition"),o.a.createElement(u.a,{onClick:r(dn)},"Slide Transition"),o.a.createElement(p.a,{open:a.open,onClose:function(){t(Object(M.a)(Object(M.a)({},a),{},{open:!1}))},TransitionComponent:a.Transition,ContentProps:{"aria-describedby":"message-id"},message:o.a.createElement("span",{id:"message-id"},"I love snacks")}))}e.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(i.a,{title:"Snackbars",description:"Snackbars provide brief messages about app processes. The component is also known as a toast.",refUrl:"https://material-ui.com/components/snackbars/"}),o.a.createElement(c.a,null,o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Message Length",component:U,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst action = (\n  <Button color='secondary' size='small'>\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n  },\n  snackbar: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent\n        className={classes.snackbar}\n        message='I love snacks.'\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message='I love candy. I love cookies. I love cupcakes.'\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n        action={action}\n      />\n    </div>\n  );\n}\n",description:"Some snackbars with varying message length..."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Customized snackbars",component:D,source:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {amber, green} from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme) => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {className, message, onClose, variant, ...other} = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button\n        variant='outlined'\n        className={classes.margin}\n        onClick={handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}>\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant='success'\n          message='This is a success message!'\n        />\n      </Snackbar>\n      <MySnackbarContentWrapper\n        variant='error'\n        className={classes.margin}\n        message='This is an error message!'\n      />\n      <MySnackbarContentWrapper\n        variant='warning'\n        className={classes.margin}\n        message='This is a warning message!'\n      />\n      <MySnackbarContentWrapper\n        variant='info'\n        className={classes.margin}\n        message='This is an information message!'\n      />\n      <MySnackbarContentWrapper\n        variant='success'\n        className={classes.margin}\n        message='This is a success message!'\n      />\n    </div>\n  );\n}\n",description:"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Positioned snackbars",component:A,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const {vertical, horizontal, open} = state;\n\n  const handleClick = (newState) => () => {\n    setState({open: true, ...newState});\n  };\n\n  function handleClose() {\n    setState({...state, open: false});\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\n        Top-Center\n      </Button>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\n        Top-Right\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\n        Bottom-Right\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\n        Bottom-Center\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\n        Bottom-Left\n      </Button>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\n        Top-Left\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical, horizontal}}\n        key={`${vertical},${horizontal}`}\n        open={open}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n",description:"There may be circumstances when the placement of the snackbar needs to be more flexible."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Simple snackbars",component:f,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>Note archived</span>}\n        action={[\n          <Button\n            key='undo'\n            color='secondary'\n            size='small'\n            onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n",description:"A basic snackbar that aims to reproduce Google Keep's snackbar behavior."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Transitions",component:q,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function ConsecutiveSnackbars() {\n  const queueRef = React.useRef([]);\n  const [open, setOpen] = React.useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  const processQueue = () => {\n    if (queueRef.current.length > 0) {\n      setMessageInfo(queueRef.current.shift());\n      setOpen(true);\n    }\n  };\n\n  const handleClick = (message) => () => {\n    queueRef.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n\n    if (open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setOpen(false);\n    } else {\n      processQueue();\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => {\n    processQueue();\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\n      <Snackbar\n        key={messageInfo ? messageInfo.key : undefined}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onExited={handleExited}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={\n          <span id='message-id'>\n            {messageInfo ? messageInfo.message : undefined}\n          </span>\n        }\n        action={[\n          <Button\n            key='undo'\n            color='secondary'\n            size='small'\n            onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n",description:"Some snackbars with varying message length..."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Snackbars and floating action buttons",component:nn,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n  },\n}));\n\nexport default function FabIntegrationSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div>\n        <AppBar position='static' color='primary'>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='menu'>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit'>\n              App Bar\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Fab color='secondary' className={classes.fab}>\n          <AddIcon />\n        </Fab>\n        <Snackbar\n          open\n          autoHideDuration={4000}\n          ContentProps={{\n            'aria-describedby': 'snackbar-fab-message-id',\n          }}\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\n          action={\n            <Button color='inherit' size='small'>\n              Undo\n            </Button>\n          }\n          className={classes.snackbar}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n",description:"Some snackbars with varying message length..."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Change Transition",component:gn,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction='up' />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({\n      open: true,\n      Transition,\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false,\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n",description:"Grow is the default transition but you can use a different one."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Control Slide direction",component:sn,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction='left' />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction='up' />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction='right' />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction='down' />;\n}\n\nexport default function DirectionSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  const handleClick = (Transition) => () => {\n    setTransition(() => Transition);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n",description:"You can change the direction of the Slide transition.."})),o.a.createElement(r.a,{item:!0,xs:12,lg:6},o.a.createElement(s.a,{title:"Snackbar notistack",component:mn,source:"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {SnackbarProvider, useSnackbar} from 'notistack';\n\nfunction MyApp() {\n  const {enqueueSnackbar} = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar('I love snacks.');\n  };\n\n  const handleClickVariant = (variant) => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a warning message!', {variant});\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick}>Show snackbar</Button>\n      <Button onClick={handleClickVariant('warning')}>\n        Show warning snackbar\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <MyApp />\n    </SnackbarProvider>\n  );\n}\n",description:"In the following example, we demonstrate how to use notistack. notistack makes it easy to display snackbars (so you don't have to deal with open/close state of them). It also enables you to stack them on top of one another (although this is discouraged by the specification)."}))))}}}]);
//# sourceMappingURL=144.d238bb14.chunk.js.map