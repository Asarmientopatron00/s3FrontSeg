{"version":3,"sources":["modules/muiComponents/util/Popper/SimplePopper.js","modules/muiComponents/util/Popper/MinimalistPopper.js","webpack:///./src/modules/muiComponents/util/Popper/MinimalistPopper.js?ceb6","modules/muiComponents/util/Popper/PositionedPopper.js","webpack:///./src/modules/muiComponents/util/Popper/PositionedPopper.js?923d","modules/muiComponents/util/Popper/WithoutTransitionPopper.js","modules/muiComponents/util/Popper/index.js","webpack:///./src/modules/muiComponents/util/Popper/SimplePopper.js?6794","webpack:///./src/modules/muiComponents/util/Popper/WithoutTransitionPopper.js?5636"],"names":["useStyles","makeStyles","theme","typography","padding","spacing","SimplePopper","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","variant","onClick","event","currentTarget","Popper","transition","TransitionProps","Fade","timeout","Paper","Typography","className","MinimalPopper","type","root","width","PositionedPopper","setOpen","placement","setPlacement","handleClick","newPlacement","prev","Grid","container","justify","item","xs","lg","alignItems","direction","NoTransitionPopper","Poppers","ComponentHeader","title","description","refUrl","GridContainer","ComponentCard","component","source","MinimalistPopper","WithoutTransitionPopper"],"mappings":"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","file":"static/js/157.40fe3669.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopper() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\n        Toggle Popper\n      </Button>\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\n        {({TransitionProps}) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper>\n              <Typography className={classes.typography}>\n                The content of the Popper.\n              </Typography>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n    </div>\n  );\n}\n","import React from 'react';\nimport Popper from '@material-ui/core/Popper';\n\nexport default function MinimalPopper() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <div>\n      <button aria-describedby={id} type='button' onClick={handleClick}>\n        Toggle Popper\n      </button>\n      <Popper id={id} open={open} anchorEl={anchorEl}>\n        <div>The content of the Popper.</div>\n      </Popper>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Popper from '@material-ui/core/Popper';\\n\\nexport default function MinimalPopper() {\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n\\n  function handleClick(event) {\\n    setAnchorEl(anchorEl ? null : event.currentTarget);\\n  }\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'simple-popper' : undefined;\\n\\n  return (\\n    <div>\\n      <button aria-describedby={id} type='button' onClick={handleClick}>\\n        Toggle Popper\\n      </button>\\n      <Popper id={id} open={open} anchorEl={anchorEl}>\\n        <div>The content of the Popper.</div>\\n      </Popper>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function PositionedPopper() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n  const classes = useStyles();\n\n  const handleClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\n        {({TransitionProps}) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper>\n              <Typography className={classes.typography}>\n                The content of the Popper.\n              </Typography>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n      <Grid container justify='center'>\n        <Grid item>\n          <Button onClick={handleClick('top-start')}>top-start</Button>\n          <Button onClick={handleClick('top')}>top</Button>\n          <Button onClick={handleClick('top-end')}>top-end</Button>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item xs={12} lg={6}>\n          <Button onClick={handleClick('left-start')}>left-start</Button>\n          <br />\n          <Button onClick={handleClick('left')}>left</Button>\n          <br />\n          <Button onClick={handleClick('left-end')}>left-end</Button>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          lg={6}\n          alignItems='flex-end'\n          direction='column'>\n          <Grid item>\n            <Button onClick={handleClick('right-start')}>right-start</Button>\n          </Grid>\n          <Grid item>\n            <Button onClick={handleClick('right')}>right</Button>\n          </Grid>\n          <Grid item>\n            <Button onClick={handleClick('right-end')}>right-end</Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item>\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\n          <Button onClick={handleClick('bottom')}>bottom</Button>\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Popper from '@material-ui/core/Popper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Grid from '@material-ui/core/Grid';\\nimport Button from '@material-ui/core/Button';\\nimport Fade from '@material-ui/core/Fade';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: 500,\\n  },\\n  typography: {\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function PositionedPopper() {\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n  const [open, setOpen] = React.useState(false);\\n  const [placement, setPlacement] = React.useState();\\n  const classes = useStyles();\\n\\n  const handleClick = (newPlacement) => (event) => {\\n    setAnchorEl(event.currentTarget);\\n    setOpen((prev) => placement !== newPlacement || !prev);\\n    setPlacement(newPlacement);\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\\n        {({TransitionProps}) => (\\n          <Fade {...TransitionProps} timeout={350}>\\n            <Paper>\\n              <Typography className={classes.typography}>\\n                The content of the Popper.\\n              </Typography>\\n            </Paper>\\n          </Fade>\\n        )}\\n      </Popper>\\n      <Grid container justify='center'>\\n        <Grid item>\\n          <Button onClick={handleClick('top-start')}>top-start</Button>\\n          <Button onClick={handleClick('top')}>top</Button>\\n          <Button onClick={handleClick('top-end')}>top-end</Button>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify='center'>\\n        <Grid item xs={12} lg={6}>\\n          <Button onClick={handleClick('left-start')}>left-start</Button>\\n          <br />\\n          <Button onClick={handleClick('left')}>left</Button>\\n          <br />\\n          <Button onClick={handleClick('left-end')}>left-end</Button>\\n        </Grid>\\n        <Grid\\n          item\\n          container\\n          xs={12}\\n          lg={6}\\n          alignItems='flex-end'\\n          direction='column'>\\n          <Grid item>\\n            <Button onClick={handleClick('right-start')}>right-start</Button>\\n          </Grid>\\n          <Grid item>\\n            <Button onClick={handleClick('right')}>right</Button>\\n          </Grid>\\n          <Grid item>\\n            <Button onClick={handleClick('right-end')}>right-end</Button>\\n          </Grid>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify='center'>\\n        <Grid item>\\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\\n          <Button onClick={handleClick('bottom')}>bottom</Button>\\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function NoTransitionPopper() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n  const handleClick = (event) => {\n    setAnchorEl((prev) => (prev ? null : event.currentTarget));\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'no-transition-popper' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\n        Toggle Popper\n      </Button>\n      <Popper id={id} open={open} anchorEl={anchorEl}>\n        <Paper>\n          <Typography className={classes.typography}>\n            The content of the Popper.\n          </Typography>\n        </Paper>\n      </Popper>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimplePopper from './SimplePopper';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimplePopperSource from '!raw-loader!./SimplePopper';\nimport MinimalistPopper from './MinimalistPopper';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MinimalistPopperSource from '!raw-loader!./MinimalistPopper';\nimport PositionedPopper from './PositionedPopper';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PositionedPopperSource from '!raw-loader!./PositionedPopper';\nimport WithoutTransitionPopper from './WithoutTransitionPopper';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport WithoutTransitionPopperSource from '!raw-loader!./WithoutTransitionPopper';\n\nconst Poppers = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Popper'\n        description=\"A Popper can be used to display some content on top of another. It's an alternative to react-popper.\"\n        refUrl='https://material-ui.com/components/popper/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Paper'\n            component={SimplePopper}\n            source={SimplePopperSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Minimalist Popper'\n            component={MinimalistPopper}\n            source={MinimalistPopperSource}\n            description='You can use the component with zero extra dependencies.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Positioned Popper'\n            component={PositionedPopper}\n            source={PositionedPopperSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Without transition Popper'\n            component={WithoutTransitionPopper}\n            source={WithoutTransitionPopperSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Poppers;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Popper from '@material-ui/core/Popper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport Fade from '@material-ui/core/Fade';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  typography: {\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function SimplePopper() {\\n  const classes = useStyles();\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n\\n  function handleClick(event) {\\n    setAnchorEl(anchorEl ? null : event.currentTarget);\\n  }\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'simple-popper' : undefined;\\n\\n  return (\\n    <div>\\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\\n        Toggle Popper\\n      </Button>\\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\\n        {({TransitionProps}) => (\\n          <Fade {...TransitionProps} timeout={350}>\\n            <Paper>\\n              <Typography className={classes.typography}>\\n                The content of the Popper.\\n              </Typography>\\n            </Paper>\\n          </Fade>\\n        )}\\n      </Popper>\\n    </div>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Popper from '@material-ui/core/Popper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  typography: {\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function NoTransitionPopper() {\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n  const classes = useStyles();\\n\\n  const handleClick = (event) => {\\n    setAnchorEl((prev) => (prev ? null : event.currentTarget));\\n  };\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'no-transition-popper' : undefined;\\n\\n  return (\\n    <div>\\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\\n        Toggle Popper\\n      </Button>\\n      <Popper id={id} open={open} anchorEl={anchorEl}>\\n        <Paper>\\n          <Typography className={classes.typography}>\\n            The content of the Popper.\\n          </Typography>\\n        </Paper>\\n      </Popper>\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}