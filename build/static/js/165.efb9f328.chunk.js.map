{"version":3,"sources":["modules/thirdParty/googleMap/MapOverlay/Components/MapOverlay.js","modules/thirdParty/googleMap/MapOverlay/index.js","webpack:///./src/modules/thirdParty/googleMap/MapOverlay/Components/MapOverlay.js?5267"],"names":["STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","style","Button","variant","color","onClick","count","MapOverlay","state","handleClick","bind","this","setState","containerElement","className","mapElement","Component","MapOverlayEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"mOAIMA,EAAS,CACbC,aAAc,CACZC,OAAQ,KAEVC,YAAa,CACXC,WAAY,OACZC,OAAQ,iBACRC,QAAS,KAIb,SAASC,EAAuBC,EAAON,GACrC,MAAO,CAACO,GAAKD,EAAQ,EAAIE,GAAKR,EAAS,GAGzC,IAAMS,EAA8BC,yBAAc,SAACC,GAAD,OAChD,kBAAC,YAAD,CACEC,YAAa,GACbC,cAAe,CAACC,IAAK,UAAWC,KAAM,aACtC,kBAAC,cAAD,CACEC,SAAU,CAACF,IAAK,UAAWC,KAAM,YAejCE,YAAaC,cAAYC,qBAKzBd,uBAAwBA,GAKxB,yBAAKe,MAAOtB,EAAOG,aACjB,2CACA,kBAACoB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASb,EAAMa,SAA3D,uBACuBb,EAAMc,MAD7B,QACyD,IAAhBd,EAAMc,MAAN,cAU5BC,E,4MACnBC,MAAQ,CACNF,MAAO,G,EAGTG,YAAc,EAAKA,YAAYC,KAAjB,gB,4DAGZC,KAAKC,SAAS,CAACN,MAAOK,KAAKH,MAAMF,MAAQ,M,+BAIzC,OACE,kBAAChB,EAAD,CACEuB,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BR,MAAOK,KAAKH,MAAMF,MAClBD,QAASM,KAAKF,kB,GAnBkBO,aC7BzBC,UAtBM,WACnB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,kBACNC,YAAY,2CACZC,OAAO,4FAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,cACNQ,UAAWpB,EACXqB,OCzBG","file":"static/js/165.efb9f328.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\n\nconst STYLES = {\n  mapContainer: {\n    height: 500,\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15,\n  },\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {x: -(width / 2), y: -(height / 2)};\n}\n\nconst OverlayViewExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}>\n    <OverlayView\n      position={{lat: 47.646935, lng: -122.303763}}\n      /*\n       * An alternative to specifying position is specifying bounds.\n       * bounds can either be an instance of google.maps.LatLngBounds\n       * or an object in the following format:\n       * bounds={{\n       *    ne: { lat: 62.400471, lng: -150.005608 },\n       *    sw: { lat: 62.281819, lng: -150.287132 }\n       * }}\n       */\n      /*\n       * 1. Specify the pane the OverlayView will be rendered to. For\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\n       */\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      /*\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\n       *    centering the content.\n       */\n      getPixelPositionOffset={getPixelPositionOffset}\n      /*\n       * 3. Create OverlayView content using standard React components.\n       */\n    >\n      <div style={STYLES.overlayView}>\n        <h1>OverlayView</h1>\n        <Button variant='contained' color='primary' onClick={props.onClick}>\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\n        </Button>\n      </div>\n    </OverlayView>\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapOverlay extends Component {\n  state = {\n    count: 0,\n  };\n\n  handleClick = this.handleClick.bind(this);\n\n  handleClick() {\n    this.setState({count: this.state.count + 1});\n  }\n\n  render() {\n    return (\n      <OverlayViewExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n        count={this.state.count}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport MapOverlay from './Components/MapOverlay';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapOverlaySource from '!raw-loader!./Components/MapOverlay';\n\nconst MapOverlayEx = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='OverlayView Map'\n        description='A wrapper around google.maps.OverlayView'\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Map Overlay'\n            component={MapOverlay}\n            source={MapOverlaySource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default MapOverlayEx;\n","export default \"import React, {Component} from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\\n\\nconst STYLES = {\\n  mapContainer: {\\n    height: 500,\\n  },\\n  overlayView: {\\n    background: '#fff',\\n    border: '1px solid #ccc',\\n    padding: 15,\\n  },\\n};\\n\\nfunction getPixelPositionOffset(width, height) {\\n  return {x: -(width / 2), y: -(height / 2)};\\n}\\n\\nconst OverlayViewExampleGoogleMap = withGoogleMap((props) => (\\n  <GoogleMap\\n    defaultZoom={15}\\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}>\\n    <OverlayView\\n      position={{lat: 47.646935, lng: -122.303763}}\\n      /*\\n       * An alternative to specifying position is specifying bounds.\\n       * bounds can either be an instance of google.maps.LatLngBounds\\n       * or an object in the following format:\\n       * bounds={{\\n       *    ne: { lat: 62.400471, lng: -150.005608 },\\n       *    sw: { lat: 62.281819, lng: -150.287132 }\\n       * }}\\n       */\\n      /*\\n       * 1. Specify the pane the OverlayView will be rendered to. For\\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\\n       */\\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\\n      /*\\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\\n       *    centering the content.\\n       */\\n      getPixelPositionOffset={getPixelPositionOffset}\\n      /*\\n       * 3. Create OverlayView content using standard React components.\\n       */\\n    >\\n      <div style={STYLES.overlayView}>\\n        <h1>OverlayView</h1>\\n        <Button variant='contained' color='primary' onClick={props.onClick}>\\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\\n        </Button>\\n      </div>\\n    </OverlayView>\\n  </GoogleMap>\\n));\\n\\n/*\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\n */\\nexport default class MapOverlay extends Component {\\n  state = {\\n    count: 0,\\n  };\\n\\n  handleClick = this.handleClick.bind(this);\\n\\n  handleClick() {\\n    this.setState({count: this.state.count + 1});\\n  }\\n\\n  render() {\\n    return (\\n      <OverlayViewExampleGoogleMap\\n        containerElement={\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\n        }\\n        mapElement={<div className='cr-embed-responsive-item' />}\\n        count={this.state.count}\\n        onClick={this.handleClick}\\n      />\\n    );\\n  }\\n}\\n\";"],"sourceRoot":""}