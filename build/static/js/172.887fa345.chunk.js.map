{"version":3,"sources":["modules/thirdParty/reactColor/Basic/index.js","modules/thirdParty/reactColor/BasicToggle/index.js","modules/thirdParty/reactColor/BasicPositioning/index.js","modules/thirdParty/reactColor/CustomPicker/MyPicker.js","modules/thirdParty/reactColor/CustomPicker/index.js","modules/thirdParty/reactColor/CustomPointer/MyPointer.js","modules/thirdParty/reactColor/CustomPointer/MyPicker.js","modules/thirdParty/reactColor/CustomPointer/index.js","modules/thirdParty/reactColor/WithRedux/index.js","modules/thirdParty/reactColor/WithRedux/reducer.js","modules/thirdParty/reactColor/index.js","webpack:///./src/modules/thirdParty/reactColor/WithRedux/index.js?898d","webpack:///./src/modules/thirdParty/reactColor/Basic/index.js?4a15","webpack:///./src/modules/thirdParty/reactColor/BasicToggle/index.js?28fa","webpack:///./src/modules/thirdParty/reactColor/CustomPicker/index.js?2e60","webpack:///./src/modules/thirdParty/reactColor/CustomPointer/index.js?83d0","webpack:///./src/modules/thirdParty/reactColor/BasicPositioning/index.js?a3a8"],"names":["Basic","state","displayColorPicker","color","r","g","b","a","handleClick","setState","handleClose","handleChange","rgb","background","this","onClick","bind","style","backgroundColor","width","height","borderRadius","onChange","React","Component","BasicToggle","pickerVisible","className","position","onChangeComplete","hex","console","log","BasicPosition","top","left","transform","marginTop","CustomPicker","hsl","styles","hue","marginBottom","input","border","paddingLeft","swatch","display","value","MyPointer","props","classes","makeStyles","theme","root","useStyles","IconButton","pointer","CustomPointer","mapDispatchToProps","onChangeColor","changeColor","type","connect","ColorPicker","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","AlphaPicker","HuePicker","CirclePicker","CompactPicker","BlockPicker","ChromePicker","GithubPicker","TwitterPicker","WithRedux","source","SketchPicker","MaterialPicker","BasicPositioning","PhotoshopPicker","SwatchesPicker"],"mappings":"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","file":"static/js/172.887fa345.chunk.js","sourcesContent":["import React from 'react';\nimport {SketchPicker} from 'react-color';\n\nclass Basic extends React.Component {\n  state = {\n    displayColorPicker: false,\n    color: {\n      r: '241',\n      g: '112',\n      b: '19',\n      a: '1',\n    },\n  };\n\n  handleClick = () => {\n    this.setState({displayColorPicker: !this.state.displayColorPicker});\n  };\n\n  handleClose = () => {\n    this.setState({displayColorPicker: false});\n  };\n\n  handleChange = (color) => {\n    this.setState({color: color.rgb});\n  };\n\n  render() {\n    const background = `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`;\n    return (\n      <div>\n        <div onClick={this.handleClick.bind(this)}>\n          <div\n            style={{\n              backgroundColor: background,\n              width: 36,\n              height: 14,\n              borderRadius: 2,\n            }}\n          />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div>\n            <div onClick={this.handleClose.bind(this)} />\n            <SketchPicker\n              color={this.state.color}\n              onChange={this.handleChange.bind(this)}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Basic;\n","import React from 'react';\n\nimport {CompactPicker} from 'react-color';\n\nclass BasicToggle extends React.Component {\n  state = {\n    pickerVisible: false,\n  };\n\n  render() {\n    const handleColorChange = ({hex}) => console.log(hex);\n    const onTogglePicker = () =>\n      this.setState({pickerVisible: !this.state.pickerVisible});\n\n    return (\n      <div className='z-index-20'>\n        <button onClick={onTogglePicker}>Toggle Picker</button>\n\n        {this.state.pickerVisible && (\n          <div style={{position: 'absolute'}}>\n            <CompactPicker color='#333' onChangeComplete={handleColorChange} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BasicToggle;\n","import React from 'react';\n\nimport {BlockPicker} from 'react-color';\n\nexport const BasicPosition = () => {\n  const handleColorChange = ({hex}) => console.log(hex);\n\n  return (\n    <div style={{position: 'relative'}}>\n      <button>Pick Color</button>\n\n      <div\n        style={{\n          position: 'absolute',\n          top: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginTop: 15,\n        }}>\n        <BlockPicker color='#333' onChangeComplete={handleColorChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default BasicPosition;\n","import React from 'react';\n\nimport {CustomPicker} from 'react-color';\nimport {EditableInput, Hue} from 'react-color/lib/components/common';\n\nexport const MyPicker = ({hex, hsl, onChange}) => {\n  const styles = {\n    hue: {\n      height: 10,\n      position: 'relative',\n      marginBottom: 10,\n    },\n    input: {\n      height: 38,\n      border: `1px solid ${hex}`,\n      paddingLeft: 10,\n    },\n    swatch: {\n      width: 40,\n      height: 38,\n      background: hex,\n    },\n  };\n  return (\n    <div>\n      <div style={styles.hue}>\n        <Hue hsl={hsl} onChange={onChange} />\n      </div>\n\n      <div style={{display: 'flex'}}>\n        <EditableInput\n          style={{input: styles.input}}\n          value={hex}\n          onChange={onChange}\n        />\n        <div style={styles.swatch} />\n      </div>\n    </div>\n  );\n};\n\nexport default CustomPicker(MyPicker);\n","import React from 'react';\n\nimport MyPicker from './MyPicker';\n\nexport const CustomPicker = () => {\n  const handleColorChange = ({hex}) => console.log(hex);\n\n  return <MyPicker color='orange' onChangeComplete={handleColorChange} />;\n};\n\nexport default CustomPicker;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport {makeStyles} from '@material-ui/core/styles';\n\nexport const MyPointer = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: 40,\n      height: 40,\n    },\n  }));\n  const classes = useStyles(props);\n  return (\n    <IconButton className={classes.root}>\n      <i className='zmdi zmdi-colorize' />\n    </IconButton>\n  );\n};\n\nexport default MyPointer;\n","import React from 'react';\nimport {CustomPicker} from 'react-color';\nimport {Alpha} from 'react-color/lib/components/common';\nimport MyPointer from './MyPointer';\n\nexport const MyPicker = ({rgb, hsl, onChange}) => {\n  return (\n    <div style={{height: 40, width: '80%', position: 'relative'}}>\n      <Alpha rgb={rgb} hsl={hsl} onChange={onChange} pointer={MyPointer} />\n    </div>\n  );\n};\n\nexport default CustomPicker(MyPicker);\n","import React from 'react';\n\nimport MyPicker from './MyPicker';\n\nconst CustomPointer = () => {\n  const handleColorChange = ({hex}) => console.log(hex);\n\n  return <MyPicker color='coral' onChangeComplete={handleColorChange} />;\n};\n\nexport default CustomPointer;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {actions as appActions} from './reducer';\n\nimport {SketchPicker} from 'react-color';\n\nconst WithRedux = ({color, onChangeColor}) => {\n  return <SketchPicker color={color} onChangeComplete={onChangeColor} />;\n};\n\nconst mapStateToProps = (state) => ({\n  color: state.color,\n});\n\nconst mapDispatchToProps = {\n  onChangeColor: appActions.changeColor,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRedux);\n","export const CHANGE_COLOR = 'APP/CHANGE_COLOR';\n\nexport const actions = {\n  changeColor: ({hex}) => ({type: CHANGE_COLOR, hex}),\n};\n\nconst initialState = {\n  color: '#F5A623',\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_COLOR:\n      return {...state, color: action.hex};\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport {\n  AlphaPicker,\n  BlockPicker,\n  ChromePicker,\n  CirclePicker,\n  CompactPicker,\n  GithubPicker,\n  HuePicker,\n  MaterialPicker,\n  PhotoshopPicker,\n  SketchPicker,\n  SwatchesPicker,\n  TwitterPicker,\n} from 'react-color';\n\nimport Basic from './Basic';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BasicSource from '!raw-loader!./Basic';\nimport BasicToggle from './BasicToggle';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BasicToggleSource from '!raw-loader!./BasicToggle';\nimport BasicPositioning from './BasicPositioning';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BasicPositioningSource from '!raw-loader!./BasicPositioning';\nimport CustomPicker from './CustomPicker';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomPickerSource from '!raw-loader!./CustomPicker';\nimport CustomPointer from './CustomPointer';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomPointerSource from '!raw-loader!./CustomPointer';\nimport WithRedux from './WithRedux';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport WithReduxSource from '!raw-loader!./WithRedux';\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport Grid from '@material-ui/core/Grid';\n\nconst ColorPicker = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='React Color'\n        description='13 Different Pickers - Sketch, Photoshop, Chrome and many more, Use the building block components to make your own '\n        refUrl='http://casesandberg.github.io/react-color/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Alpha Picker' component={AlphaPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Hue Picker' component={HuePicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Circle Picker' component={CirclePicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Compact Picker' component={CompactPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Block Picker' component={BlockPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Chrome Picker' component={ChromePicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Github Picker' component={GithubPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Twitter Picker' component={TwitterPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='WithRedux Picker'\n            component={WithRedux}\n            source={WithReduxSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Sketch Picker' component={SketchPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Material Picker' component={MaterialPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Basic Picker'\n            component={Basic}\n            source={BasicSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='BasicToggle Picker'\n            component={BasicToggle}\n            source={BasicToggleSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Custom Picker'\n            component={CustomPicker}\n            source={CustomPickerSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='CustomPointer Picker'\n            component={CustomPointer}\n            source={CustomPointerSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='BasicPositioning'\n            component={BasicPositioning}\n            source={BasicPositioningSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Photoshop Picker' component={PhotoshopPicker} />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard title='Swatches Picker' component={SwatchesPicker} />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ColorPicker;\n","export default \"import React from 'react';\\nimport {connect} from 'react-redux';\\nimport {actions as appActions} from './reducer';\\n\\nimport {SketchPicker} from 'react-color';\\n\\nconst WithRedux = ({color, onChangeColor}) => {\\n  return <SketchPicker color={color} onChangeComplete={onChangeColor} />;\\n};\\n\\nconst mapStateToProps = (state) => ({\\n  color: state.color,\\n});\\n\\nconst mapDispatchToProps = {\\n  onChangeColor: appActions.changeColor,\\n};\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRedux);\\n\";","export default \"import React from 'react';\\nimport {SketchPicker} from 'react-color';\\n\\nclass Basic extends React.Component {\\n  state = {\\n    displayColorPicker: false,\\n    color: {\\n      r: '241',\\n      g: '112',\\n      b: '19',\\n      a: '1',\\n    },\\n  };\\n\\n  handleClick = () => {\\n    this.setState({displayColorPicker: !this.state.displayColorPicker});\\n  };\\n\\n  handleClose = () => {\\n    this.setState({displayColorPicker: false});\\n  };\\n\\n  handleChange = (color) => {\\n    this.setState({color: color.rgb});\\n  };\\n\\n  render() {\\n    const background = `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`;\\n    return (\\n      <div>\\n        <div onClick={this.handleClick.bind(this)}>\\n          <div\\n            style={{\\n              backgroundColor: background,\\n              width: 36,\\n              height: 14,\\n              borderRadius: 2,\\n            }}\\n          />\\n        </div>\\n        {this.state.displayColorPicker ? (\\n          <div>\\n            <div onClick={this.handleClose.bind(this)} />\\n            <SketchPicker\\n              color={this.state.color}\\n              onChange={this.handleChange.bind(this)}\\n            />\\n          </div>\\n        ) : null}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Basic;\\n\";","export default \"import React from 'react';\\n\\nimport {CompactPicker} from 'react-color';\\n\\nclass BasicToggle extends React.Component {\\n  state = {\\n    pickerVisible: false,\\n  };\\n\\n  render() {\\n    const handleColorChange = ({hex}) => console.log(hex);\\n    const onTogglePicker = () =>\\n      this.setState({pickerVisible: !this.state.pickerVisible});\\n\\n    return (\\n      <div className='z-index-20'>\\n        <button onClick={onTogglePicker}>Toggle Picker</button>\\n\\n        {this.state.pickerVisible && (\\n          <div style={{position: 'absolute'}}>\\n            <CompactPicker color='#333' onChangeComplete={handleColorChange} />\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default BasicToggle;\\n\";","export default \"import React from 'react';\\n\\nimport MyPicker from './MyPicker';\\n\\nexport const CustomPicker = () => {\\n  const handleColorChange = ({hex}) => console.log(hex);\\n\\n  return <MyPicker color='orange' onChangeComplete={handleColorChange} />;\\n};\\n\\nexport default CustomPicker;\\n\";","export default \"import React from 'react';\\n\\nimport MyPicker from './MyPicker';\\n\\nconst CustomPointer = () => {\\n  const handleColorChange = ({hex}) => console.log(hex);\\n\\n  return <MyPicker color='coral' onChangeComplete={handleColorChange} />;\\n};\\n\\nexport default CustomPointer;\\n\";","export default \"import React from 'react';\\n\\nimport {BlockPicker} from 'react-color';\\n\\nexport const BasicPosition = () => {\\n  const handleColorChange = ({hex}) => console.log(hex);\\n\\n  return (\\n    <div style={{position: 'relative'}}>\\n      <button>Pick Color</button>\\n\\n      <div\\n        style={{\\n          position: 'absolute',\\n          top: '100%',\\n          left: '50%',\\n          transform: 'translateX(-50%)',\\n          marginTop: 15,\\n        }}>\\n        <BlockPicker color='#333' onChangeComplete={handleColorChange} />\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default BasicPosition;\\n\";"],"sourceRoot":""}