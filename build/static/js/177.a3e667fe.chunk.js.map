{"version":3,"sources":["modules/thirdParty/recharts/Bar/Components/data.js","modules/thirdParty/recharts/Bar/Components/TinyBarChart.js","modules/thirdParty/recharts/Bar/Components/StackedBarChart.js","modules/thirdParty/recharts/Bar/Components/MixBarChart.js","modules/thirdParty/recharts/Bar/Components/CustomShapeBarChart.js","modules/thirdParty/recharts/Bar/Components/PositiveAndNegativeBarChart.js","modules/thirdParty/recharts/Bar/Components/BarChartStackedBySign.js","modules/thirdParty/recharts/Bar/Components/BiaxialBarChart.js","modules/thirdParty/recharts/Bar/index.js","webpack:///./src/modules/thirdParty/recharts/Bar/Components/TinyBarChart.js?d5d4","webpack:///./src/modules/thirdParty/recharts/Bar/Components/StackedBarChart.js?d414","webpack:///./src/modules/thirdParty/recharts/Bar/Components/MixBarChart.js?c65f","webpack:///./src/modules/thirdParty/recharts/Bar/Components/CustomShapeBarChart.js?546a","webpack:///./src/modules/thirdParty/recharts/Bar/Components/PositiveAndNegativeBarChart.js?1cc5","webpack:///./src/modules/thirdParty/recharts/Bar/Components/BarChartStackedBySign.js?dd2d","webpack:///./src/modules/thirdParty/recharts/Bar/Components/BiaxialBarChart.js?2294"],"names":["data","name","uv","pv","amt","TinyBarChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","fill","StackedBarChart","stackId","MixBarChart","getPath","x","y","TriangleBar","props","d","stroke","CustomShapeBarChart","shape","label","PositiveAndNegativeBarChart","BarChartStackedBySign","stackOffset","BiaxialBarChart","yAxisId","orientation","BarChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"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","file":"static/js/177.a3e667fe.chunk.js","sourcesContent":["const data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\nexport default data;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst TinyBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey='pv' fill='#4299E1' />\n      <Bar dataKey='uv' fill='#F04F47' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default TinyBarChart;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst StackedBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default StackedBarChart;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst MixBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\n      <Bar dataKey='uv' fill='#F04F47' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default MixBarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\n    x + width / 2\n  }, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\n    y + height\n  } ${x + width}, ${y + height}\n          Z`;\n};\n\nconst TriangleBar = (props) => {\n  const {fill, x, y, width, height} = props;\n\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\n};\n\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\nconst CustomShapeBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default CustomShapeBarChart;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\n\nconst PositiveAndNegativeBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <ReferenceLine y={0} stroke='#000' />\n      <Bar dataKey='pv' fill='#4299E1' />\n      <Bar dataKey='uv' fill='#F04F47' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default PositiveAndNegativeBarChart;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\n\nconst BarChartStackedBySign = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart\n      data={data}\n      stackOffset='sign'\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <ReferenceLine y={0} stroke='#000' />\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default BarChartStackedBySign;\n","import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst BiaxialBarChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default BiaxialBarChart;\n","import React from 'react';\nimport TinyBarChart from './Components/TinyBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TinyBarChartSource from '!raw-loader!./Components/TinyBarChart';\nimport StackedBarChart from './Components/StackedBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport StackedBarChartSource from '!raw-loader!./Components/StackedBarChart';\nimport MixBarChart from './Components/MixBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MixBarChartSource from '!raw-loader!./Components/MixBarChart';\nimport CustomShapeBarChart from './Components/CustomShapeBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomShapeBarChartSource from '!raw-loader!./Components/CustomShapeBarChart';\nimport PositiveAndNegativeBarChart from './Components/PositiveAndNegativeBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PositiveAndNegativeBarChartSource from '!raw-loader!./Components/PositiveAndNegativeBarChart';\nimport BarChartStackedBySign from './Components/BarChartStackedBySign';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BarChartStackedBySignSource from '!raw-loader!./Components/BarChartStackedBySign';\nimport BiaxialBarChart from './Components/BiaxialBarChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BiaxialBarChartSource from '!raw-loader!./Components/BiaxialBarChart';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nconst BarChart = ({match}) => {\n  return (\n    <>\n      <ComponentHeader\n        title='Bar Chart'\n        description='All svg elements can be added into the BarChart component, such as defs, linearGradient, etc.'\n        refUrl='http://recharts.org/en-US/api/BarChart/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Tiny Bar Chart'\n            component={TinyBarChart}\n            source={TinyBarChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Stacked Bar Chart'\n            component={StackedBarChart}\n            source={StackedBarChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Mix Bar Chart'\n            component={MixBarChart}\n            source={MixBarChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Custom Shape Bar Chart'\n            component={CustomShapeBarChart}\n            source={CustomShapeBarChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Positive And Negative Bar Chart'\n            component={PositiveAndNegativeBarChart}\n            source={PositiveAndNegativeBarChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Bar Chart Stacked By Sign'\n            component={BarChartStackedBySign}\n            source={BarChartStackedBySignSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Biaxial Bar Chart'\n            component={BiaxialBarChart}\n            source={BiaxialBarChartSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default BarChart;\n","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst TinyBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Bar dataKey='pv' fill='#4299E1' />\\n      <Bar dataKey='uv' fill='#F04F47' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default TinyBarChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst StackedBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default StackedBarChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst MixBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\\n      <Bar dataKey='uv' fill='#F04F47' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default MixBarChart;\\n\";","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst getPath = (x, y, width, height) => {\\n  return `M${x},${y + height}\\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\\n    x + width / 2\\n  }, ${y}\\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\\n    y + height\\n  } ${x + width}, ${y + height}\\n          Z`;\\n};\\n\\nconst TriangleBar = (props) => {\\n  const {fill, x, y, width, height} = props;\\n\\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\\n};\\n\\nTriangleBar.propTypes = {\\n  fill: PropTypes.string,\\n  x: PropTypes.number,\\n  y: PropTypes.number,\\n  width: PropTypes.number,\\n  height: PropTypes.number,\\n};\\nconst CustomShapeBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default CustomShapeBarChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ReferenceLine,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\n\\nconst data = [\\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\\n];\\n\\nconst PositiveAndNegativeBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <ReferenceLine y={0} stroke='#000' />\\n      <Bar dataKey='pv' fill='#4299E1' />\\n      <Bar dataKey='uv' fill='#F04F47' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default PositiveAndNegativeBarChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ReferenceLine,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\n\\nconst data = [\\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\\n];\\n\\nconst BarChartStackedBySign = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart\\n      data={data}\\n      stackOffset='sign'\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <ReferenceLine y={0} stroke='#000' />\\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default BarChartStackedBySign;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  BarChart,\\n  CartesianGrid,\\n  Legend,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst BiaxialBarChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\\n    </BarChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default BiaxialBarChart;\\n\";"],"sourceRoot":""}