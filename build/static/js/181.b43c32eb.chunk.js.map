{"version":3,"sources":["modules/thirdParty/recharts/Area/Components/data.js","modules/thirdParty/recharts/Area/Components/SimpleAreaChart.js","modules/thirdParty/recharts/Area/Components/StackedAreaChart.js","modules/thirdParty/recharts/Area/Components/PercentAreaChart.js","modules/thirdParty/recharts/Area/Components/AreaChartConnectNulls.js","modules/thirdParty/recharts/Area/Components/SynchronizedAreaChart.js","modules/thirdParty/recharts/Area/index.js","webpack:///./src/modules/thirdParty/recharts/Area/Components/SimpleAreaChart.js?bd1c","webpack:///./src/modules/thirdParty/recharts/Area/Components/StackedAreaChart.js?83d8","webpack:///./src/modules/thirdParty/recharts/Area/Components/AreaChartConnectNulls.js?85d6","webpack:///./src/modules/thirdParty/recharts/Area/Components/SynchronizedAreaChart.js?6854","webpack:///./src/modules/thirdParty/recharts/Area/Components/PercentAreaChart.js?4ebc"],"names":["data","name","uv","pv","amt","SimpleAreaChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","fill","StackedAreaChart","stackId","month","a","b","c","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","total","reduce","result","entry","value","className","map","index","key","style","color","getPercent","PercentAreaChart","stackOffset","tickFormatter","content","AreaChartConnectNulls","Box","mb","connectNulls","SynchronizedAreaChart","component","syncId","AreaChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source"],"mappings":"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","file":"static/js/181.b43c32eb.chunk.js","sourcesContent":["const data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\nexport default data;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst SimpleAreaChart = () => {\n  return (\n    <ResponsiveContainer width='100%' height={200}>\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n        <XAxis dataKey='name' />\n        <YAxis />\n        <CartesianGrid strokeDasharray='3 3' />\n        <Tooltip />\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SimpleAreaChart;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst StackedAreaChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Area\n        type='monotone'\n        dataKey='uv'\n        stackId='1'\n        stroke='#4299E1'\n        fill='#4299E1'\n      />\n      <Area\n        type='monotone'\n        dataKey='pv'\n        stackId='1'\n        stroke='#59AA2B'\n        fill='#59AA2B'\n      />\n      <Area\n        type='monotone'\n        dataKey='amt'\n        stackId='1'\n        stroke='#F04F47'\n        fill='#F04F47'\n      />\n    </AreaChart>\n  </ResponsiveContainer>\n);\n\nexport default StackedAreaChart;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst data = [\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\n];\n\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\nconst renderTooltipContent = (o) => {\n  const {payload, label} = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n\n  return (\n    <div className='customized-tooltip-content'>\n      <p className='total'>{`${label} (Total: ${total})`}</p>\n      <ul className='list'>\n        {payload.map((entry, index) => (\n          <li key={`item-${index}`} style={{color: entry.color}}>\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nconst PercentAreaChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <AreaChart\n      data={data}\n      stackOffset='expand'\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='month' />\n      <YAxis tickFormatter={toPercent} />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip content={renderTooltipContent} />\n      <Area\n        type='monotone'\n        dataKey='a'\n        stackId='1'\n        stroke='#4299E1'\n        fill='#4299E1'\n      />\n      <Area\n        type='monotone'\n        dataKey='b'\n        stackId='1'\n        stroke='#59AA2B'\n        fill='#59AA2B'\n      />\n      <Area\n        type='monotone'\n        dataKey='c'\n        stackId='1'\n        stroke='#F04F47'\n        fill='#F04F47'\n      />\n    </AreaChart>\n  </ResponsiveContainer>\n);\n\nexport default PercentAreaChart;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport Box from '@material-ui/core/Box';\n\nconst data = [\n  {name: 'Page A', uv: 4000},\n  {name: 'Page B', uv: 3000},\n  {name: 'Page C', uv: 2000},\n  {name: 'Page D'},\n  {name: 'Page E', uv: 1890},\n  {name: 'Page F', uv: 2390},\n  {name: 'Page G', uv: 3490},\n];\nconst AreaChartConnectNulls = () => (\n  <ResponsiveContainer width='100%'>\n    <div>\n      <Box mb={5}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              connectNulls={true}\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default AreaChartConnectNulls;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst SynchronizedAreaChart = () => (\n  <ResponsiveContainer width='100%'>\n    <div>\n      <Box component='p' mb={4}>\n        A demo of synchronized AreaCharts\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box component='p' mb={4}>\n        Maybe some other content\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='pv'\n              stroke='#F04F47'\n              fill='#F04F47'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default SynchronizedAreaChart;\n","import React from 'react';\nimport SimpleAreaChart from './Components/SimpleAreaChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleAreaChartSource from '!raw-loader!./Components/SimpleAreaChart';\nimport StackedAreaChart from './Components/StackedAreaChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport StackedAreaChartSource from '!raw-loader!./Components/StackedAreaChart';\nimport PercentAreaChart from './Components/PercentAreaChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PercentAreaChartSource from '!raw-loader!./Components/PercentAreaChart';\nimport AreaChartConnectNulls from './Components/AreaChartConnectNulls';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AreaChartConnectNullsSource from '!raw-loader!./Components/AreaChartConnectNulls';\nimport SynchronizedAreaChart from './Components/SynchronizedAreaChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SynchronizedAreaChartSource from '!raw-loader!./Components/SynchronizedAreaChart';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nconst AreaChart = ({match}) => {\n  return (\n    <>\n      <ComponentHeader\n        title='Area Chart'\n        description='All svg elements can be added into the AreaChart component, such as defs, linearGradient, etc.'\n        refUrl='http://recharts.org/en-US/api/AreaChart/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple modal'\n            component={SimpleAreaChart}\n            source={SimpleAreaChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Stacked Area Chart'\n            component={StackedAreaChart}\n            source={StackedAreaChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='AreaChart Connect Nulls'\n            component={AreaChartConnectNulls}\n            source={AreaChartConnectNullsSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Synchronized Area Chart'\n            component={SynchronizedAreaChart}\n            source={SynchronizedAreaChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Percent Area Chart'\n            component={PercentAreaChart}\n            source={PercentAreaChartSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\nexport default AreaChart;\n","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst SimpleAreaChart = () => {\\n  return (\\n    <ResponsiveContainer width='100%' height={200}>\\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n        <XAxis dataKey='name' />\\n        <YAxis />\\n        <CartesianGrid strokeDasharray='3 3' />\\n        <Tooltip />\\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\\n      </AreaChart>\\n    </ResponsiveContainer>\\n  );\\n};\\n\\nexport default SimpleAreaChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst StackedAreaChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Area\\n        type='monotone'\\n        dataKey='uv'\\n        stackId='1'\\n        stroke='#4299E1'\\n        fill='#4299E1'\\n      />\\n      <Area\\n        type='monotone'\\n        dataKey='pv'\\n        stackId='1'\\n        stroke='#59AA2B'\\n        fill='#59AA2B'\\n      />\\n      <Area\\n        type='monotone'\\n        dataKey='amt'\\n        stackId='1'\\n        stroke='#F04F47'\\n        fill='#F04F47'\\n      />\\n    </AreaChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default StackedAreaChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport Box from '@material-ui/core/Box';\\n\\nconst data = [\\n  {name: 'Page A', uv: 4000},\\n  {name: 'Page B', uv: 3000},\\n  {name: 'Page C', uv: 2000},\\n  {name: 'Page D'},\\n  {name: 'Page E', uv: 1890},\\n  {name: 'Page F', uv: 2390},\\n  {name: 'Page G', uv: 3490},\\n];\\nconst AreaChartConnectNulls = () => (\\n  <ResponsiveContainer width='100%'>\\n    <div>\\n      <Box mb={5}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <AreaChart\\n            data={data}\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Area\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </AreaChart>\\n        </ResponsiveContainer>\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <AreaChart\\n            data={data}\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Area\\n              connectNulls={true}\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </AreaChart>\\n        </ResponsiveContainer>\\n      </Box>\\n    </div>\\n  </ResponsiveContainer>\\n);\\n\\nexport default AreaChartConnectNulls;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\nimport Box from '@material-ui/core/Box';\\n\\nconst SynchronizedAreaChart = () => (\\n  <ResponsiveContainer width='100%'>\\n    <div>\\n      <Box component='p' mb={4}>\\n        A demo of synchronized AreaCharts\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <AreaChart\\n            data={data}\\n            syncId='anyId'\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Area\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </AreaChart>\\n        </ResponsiveContainer>\\n      </Box>\\n      <Box component='p' mb={4}>\\n        Maybe some other content\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <AreaChart\\n            data={data}\\n            syncId='anyId'\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Area\\n              type='monotone'\\n              dataKey='pv'\\n              stroke='#F04F47'\\n              fill='#F04F47'\\n            />\\n          </AreaChart>\\n        </ResponsiveContainer>\\n      </Box>\\n    </div>\\n  </ResponsiveContainer>\\n);\\n\\nexport default SynchronizedAreaChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  CartesianGrid,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\n\\nconst data = [\\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\\n];\\n\\nconst getPercent = (value, total) => {\\n  const ratio = total > 0 ? value / total : 0;\\n\\n  return toPercent(ratio, 2);\\n};\\n\\nconst toPercent = (decimal, fixed = 0) => {\\n  return `${(decimal * 100).toFixed(fixed)}%`;\\n};\\nconst renderTooltipContent = (o) => {\\n  const {payload, label} = o;\\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\\n\\n  return (\\n    <div className='customized-tooltip-content'>\\n      <p className='total'>{`${label} (Total: ${total})`}</p>\\n      <ul className='list'>\\n        {payload.map((entry, index) => (\\n          <li key={`item-${index}`} style={{color: entry.color}}>\\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\\n          </li>\\n        ))}\\n      </ul>\\n    </div>\\n  );\\n};\\nconst PercentAreaChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <AreaChart\\n      data={data}\\n      stackOffset='expand'\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='month' />\\n      <YAxis tickFormatter={toPercent} />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip content={renderTooltipContent} />\\n      <Area\\n        type='monotone'\\n        dataKey='a'\\n        stackId='1'\\n        stroke='#4299E1'\\n        fill='#4299E1'\\n      />\\n      <Area\\n        type='monotone'\\n        dataKey='b'\\n        stackId='1'\\n        stroke='#59AA2B'\\n        fill='#59AA2B'\\n      />\\n      <Area\\n        type='monotone'\\n        dataKey='c'\\n        stackId='1'\\n        stroke='#F04F47'\\n        fill='#F04F47'\\n      />\\n    </AreaChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default PercentAreaChart;\\n\";"],"sourceRoot":""}