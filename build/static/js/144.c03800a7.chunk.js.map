{"version":3,"sources":["modules/muiComponents/inputs/Selects/SimpleSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/SimpleSelect.js?7291","modules/muiComponents/inputs/Selects/NativeSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/NativeSelect.js?437e","modules/muiComponents/inputs/Selects/CustomizedSelects.js","webpack:///./src/modules/muiComponents/inputs/Selects/CustomizedSelects.js?79f0","modules/muiComponents/inputs/Selects/MultipleSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/MultipleSelect.js?57c6","modules/muiComponents/inputs/Selects/ControlledOpenSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/ControlledOpenSelect.js?8faa","modules/muiComponents/inputs/Selects/WithaDialog.js","modules/muiComponents/inputs/Selects/index.js","webpack:///./src/modules/muiComponents/inputs/Selects/WithaDialog.js?e65d"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","name","values","setValues","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","event","oldValues","target","value","useEffect","current","offsetWidth","className","autoComplete","FormControl","InputLabel","htmlFor","Select","onChange","inputProps","id","MenuItem","FormHelperText","displayEmpty","shrink","disabled","error","renderValue","readOnly","autoWidth","required","variant","ref","NativeSelects","state","setState","native","NativeSelect","label","defaultValue","BootstrapInput","withStyles","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","CustomizedSelects","setAge","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","names","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","useTheme","setPersonName","multiple","Input","map","key","selected","Checkbox","checked","ListItemText","primary","Chip","clsx","length","options","i","l","push","button","ControlledOpenSelect","open","setOpen","handleOpen","Button","onClick","onClose","onOpen","container","DialogSelect","Number","handleClose","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogActions","color","Selects","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source","lg","WithaDialog"],"mappings":"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","file":"static/js/144.c03800a7.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SimpleSelect() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setValues((oldValues) => ({\n      ...oldValues,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  return (\n    <form className={classes.root} autoComplete='off'>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-simple',\n          }}>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-helper',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          displayEmpty\n          name='age'\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Without label</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='age-label-placeholder'>\n          Age\n        </InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-label-Skeleton',\n          }}\n          displayEmpty\n          name='age'\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Label + placeholder</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'name-disabled',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          name='name'\n          renderValue={(value) => `⚠️  - ${value}`}\n          inputProps={{\n            id: 'name-error',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'name-readonly',\n            readOnly: true,\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Read only</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-auto-width',\n          }}\n          autoWidth>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Auto width</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          name='age'\n          displayEmpty\n          className={classes.selectEmpty}>\n          <MenuItem value='' disabled>\n            Placeholder\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Placeholder</FormHelperText>\n      </FormControl>\n      <FormControl required className={classes.formControl}>\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          name='age'\n          inputProps={{\n            id: 'age-required',\n          }}\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n      <FormControl variant='outlined' className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\n          Age\n        </InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: 'age',\n            id: 'outlined-age-simple',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant='filled' className={classes.formControl}>\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'filled-age-simple',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n  selectEmpty: {\\n    marginTop: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function SimpleSelect() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    age: '',\\n    name: 'hai',\\n  });\\n\\n  const inputLabel = React.useRef(null);\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  React.useEffect(() => {\\n    setLabelWidth(inputLabel.current.offsetWidth);\\n  }, []);\\n\\n  function handleChange(event) {\\n    setValues((oldValues) => ({\\n      ...oldValues,\\n      [event.target.name]: event.target.value,\\n    }));\\n  }\\n\\n  return (\\n    <form className={classes.root} autoComplete='off'>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-simple',\\n          }}>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-helper',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          displayEmpty\\n          name='age'\\n          className={classes.selectEmpty}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Without label</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor='age-label-placeholder'>\\n          Age\\n        </InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-label-Skeleton',\\n          }}\\n          displayEmpty\\n          name='age'\\n          className={classes.selectEmpty}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Label + placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'name',\\n            id: 'name-disabled',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value='hai'>Hai</MenuItem>\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          name='name'\\n          renderValue={(value) => `⚠️  - ${value}`}\\n          inputProps={{\\n            id: 'name-error',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value='hai'>Hai</MenuItem>\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'name',\\n            id: 'name-readonly',\\n            readOnly: true,\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value='hai'>Hai</MenuItem>\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Read only</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-auto-width',\\n          }}\\n          autoWidth>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Auto width</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          name='age'\\n          displayEmpty\\n          className={classes.selectEmpty}>\\n          <MenuItem value='' disabled>\\n            Placeholder\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl required className={classes.formControl}>\\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          name='age'\\n          inputProps={{\\n            id: 'age-required',\\n          }}\\n          className={classes.selectEmpty}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Required</FormHelperText>\\n      </FormControl>\\n      <FormControl variant='outlined' className={classes.formControl}>\\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\\n          Age\\n        </InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          labelWidth={labelWidth}\\n          inputProps={{\\n            name: 'age',\\n            id: 'outlined-age-simple',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl variant='filled' className={classes.formControl}>\\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'filled-age-simple',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function NativeSelects() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = (name) => (event) => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-helper',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          name='age'\n          className={classes.selectEmpty}\n          inputProps={{'aria-label': 'age'}}>\n          <option value=''>None</option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>With visually hidden label</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\n          Age\n        </InputLabel>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-label-Skeleton',\n          }}>\n          <option value=''>None</option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Label + placeholder</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\n        <NativeSelect\n          value={state.name}\n          onChange={handleChange('name')}\n          inputProps={{\n            name: 'name',\n            id: 'name-native-disabled',\n          }}>\n          <option value='' />\n          <optgroup label='Author'>\n            <option value='hai'>Hai</option>\n          </optgroup>\n          <optgroup label='Contributors'>\n            <option value='olivier'>Olivier</option>\n            <option value='kevin'>Kevin</option>\n          </optgroup>\n        </NativeSelect>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\n        <NativeSelect\n          value={state.name}\n          onChange={handleChange('name')}\n          name='name'\n          inputProps={{\n            id: 'name-native-error',\n          }}>\n          <option value='' />\n          <optgroup label='Author'>\n            <option value='hai'>Hai</option>\n          </optgroup>\n          <optgroup label='Contributors'>\n            <option value='olivier'>Olivier</option>\n            <option value='kevin'>Kevin</option>\n          </optgroup>\n        </NativeSelect>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\n        <NativeSelect\n          defaultValue={30}\n          inputProps={{\n            name: 'name',\n            id: 'uncontrolled-native',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Uncontrolled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          className={classes.selectEmpty}\n          value={state.age}\n          name='age'\n          onChange={handleChange('age')}\n          inputProps={{'aria-label': 'age'}}>\n          <option value='' disabled>\n            Placeholder\n          </option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Placeholder</FormHelperText>\n      </FormControl>\n      <FormControl required className={classes.formControl}>\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          name='age'\n          inputProps={{\n            id: 'age-native-required',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n      <FormControl variant='outlined' className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\n          Age\n        </InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: 'age',\n            id: 'outlined-age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n      <FormControl variant='filled' className={classes.formControl}>\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'filled-age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n  selectEmpty: {\\n    marginTop: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function NativeSelects() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    age: '',\\n    name: 'hai',\\n  });\\n\\n  const inputLabel = React.useRef(null);\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  React.useEffect(() => {\\n    setLabelWidth(inputLabel.current.offsetWidth);\\n  }, []);\\n\\n  const handleChange = (name) => (event) => {\\n    setState({\\n      ...state,\\n      [name]: event.target.value,\\n    });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-native-simple',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-native-helper',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          name='age'\\n          className={classes.selectEmpty}\\n          inputProps={{'aria-label': 'age'}}>\\n          <option value=''>None</option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>With visually hidden label</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\\n          Age\\n        </InputLabel>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-native-label-Skeleton',\\n          }}>\\n          <option value=''>None</option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Label + placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\\n        <NativeSelect\\n          value={state.name}\\n          onChange={handleChange('name')}\\n          inputProps={{\\n            name: 'name',\\n            id: 'name-native-disabled',\\n          }}>\\n          <option value='' />\\n          <optgroup label='Author'>\\n            <option value='hai'>Hai</option>\\n          </optgroup>\\n          <optgroup label='Contributors'>\\n            <option value='olivier'>Olivier</option>\\n            <option value='kevin'>Kevin</option>\\n          </optgroup>\\n        </NativeSelect>\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\\n        <NativeSelect\\n          value={state.name}\\n          onChange={handleChange('name')}\\n          name='name'\\n          inputProps={{\\n            id: 'name-native-error',\\n          }}>\\n          <option value='' />\\n          <optgroup label='Author'>\\n            <option value='hai'>Hai</option>\\n          </optgroup>\\n          <optgroup label='Contributors'>\\n            <option value='olivier'>Olivier</option>\\n            <option value='kevin'>Kevin</option>\\n          </optgroup>\\n        </NativeSelect>\\n        <FormHelperText>Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\\n        <NativeSelect\\n          defaultValue={30}\\n          inputProps={{\\n            name: 'name',\\n            id: 'uncontrolled-native',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Uncontrolled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <NativeSelect\\n          className={classes.selectEmpty}\\n          value={state.age}\\n          name='age'\\n          onChange={handleChange('age')}\\n          inputProps={{'aria-label': 'age'}}>\\n          <option value='' disabled>\\n            Placeholder\\n          </option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl required className={classes.formControl}>\\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          name='age'\\n          inputProps={{\\n            id: 'age-native-required',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n        <FormHelperText>Required</FormHelperText>\\n      </FormControl>\\n      <FormControl variant='outlined' className={classes.formControl}>\\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\\n          Age\\n        </InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          labelWidth={labelWidth}\\n          inputProps={{\\n            name: 'age',\\n            id: 'outlined-age-native-simple',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n      <FormControl variant='filled' className={classes.formControl}>\\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          inputProps={{\\n            name: 'age',\\n            id: 'filled-age-native-simple',\\n          }}>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <form className={classes.root} autoComplete='off'>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\n        <BootstrapInput id='age-customized-input' />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\n        <Select\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\n        <NativeSelect\n          value={age}\n          onChange={handleChange}\n          input={\n            <BootstrapInput name='age' id='age-customized-native-simple' />\n          }>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\nimport InputBase from '@material-ui/core/InputBase';\\n\\nconst BootstrapInput = withStyles((theme) => ({\\n  root: {\\n    'label + &': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n  input: {\\n    borderRadius: 4,\\n    position: 'relative',\\n    backgroundColor: theme.palette.background.paper,\\n    border: '1px solid #ced4da',\\n    fontSize: 16,\\n    padding: '10px 26px 10px 12px',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    // Use the system font instead of the default Roboto font.\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n    '&:focus': {\\n      borderRadius: 4,\\n      borderColor: '#80bdff',\\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\\n    },\\n  },\\n}))(InputBase);\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedSelects() {\\n  const classes = useStyles();\\n  const [age, setAge] = React.useState('');\\n  const handleChange = (event) => {\\n    setAge(event.target.value);\\n  };\\n  return (\\n    <form className={classes.root} autoComplete='off'>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\\n        <BootstrapInput id='age-customized-input' />\\n      </FormControl>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\\n        <Select\\n          value={age}\\n          onChange={handleChange}\\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\\n        <NativeSelect\\n          value={age}\\n          onChange={handleChange}\\n          input={\\n            <BootstrapInput name='age' id='age-customized-native-simple' />\\n          }>\\n          <option value='' />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  function handleChange(event) {\n    setPersonName(event.target.value);\n  }\n\n  function handleChangeMultiple(event) {\n    const {options} = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple' />}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-checkbox' />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-chip' />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-placeholder' />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}>\n          <MenuItem disabled value=''>\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='select-multiple-native'>\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          onChange={handleChangeMultiple}\n          inputProps={{\n            id: 'select-multiple-native',\n          }}>\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Select from '@material-ui/core/Select';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Chip from '@material-ui/core/Chip';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n    maxWidth: 300,\\n  },\\n  chips: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  chip: {\\n    margin: 2,\\n  },\\n  noLabel: {\\n    marginTop: theme.spacing(3),\\n  },\\n}));\\n\\nconst ITEM_HEIGHT = 48;\\nconst ITEM_PADDING_TOP = 8;\\nconst MenuProps = {\\n  PaperProps: {\\n    style: {\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\n      width: 250,\\n    },\\n  },\\n};\\n\\nconst names = [\\n  'Oliver Hansen',\\n  'Van Henry',\\n  'April Tucker',\\n  'Ralph Hubbard',\\n  'Omar Alexander',\\n  'Carlos Abbott',\\n  'Miriam Wagner',\\n  'Bradley Wilkerson',\\n  'Virginia Andrews',\\n  'Kelly Snyder',\\n];\\n\\nfunction getStyles(name, personName, theme) {\\n  return {\\n    fontWeight:\\n      personName.indexOf(name) === -1\\n        ? theme.typography.fontWeightRegular\\n        : theme.typography.fontWeightMedium,\\n  };\\n}\\n\\nexport default function MultipleSelect() {\\n  const classes = useStyles();\\n  const theme = useTheme();\\n  const [personName, setPersonName] = React.useState([]);\\n\\n  function handleChange(event) {\\n    setPersonName(event.target.value);\\n  }\\n\\n  function handleChangeMultiple(event) {\\n    const {options} = event.target;\\n    const value = [];\\n    for (let i = 0, l = options.length; i < l; i += 1) {\\n      if (options[i].selected) {\\n        value.push(options[i].value);\\n      }\\n    }\\n    setPersonName(value);\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id='select-multiple' />}\\n          MenuProps={MenuProps}>\\n          {names.map((name) => (\\n            <MenuItem\\n              key={name}\\n              value={name}\\n              style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id='select-multiple-checkbox' />}\\n          renderValue={(selected) => selected.join(', ')}\\n          MenuProps={MenuProps}>\\n          {names.map((name) => (\\n            <MenuItem key={name} value={name}>\\n              <Checkbox checked={personName.indexOf(name) > -1} />\\n              <ListItemText primary={name} />\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id='select-multiple-chip' />}\\n          renderValue={(selected) => (\\n            <div className={classes.chips}>\\n              {selected.map((value) => (\\n                <Chip key={value} label={value} className={classes.chip} />\\n              ))}\\n            </div>\\n          )}\\n          MenuProps={MenuProps}>\\n          {names.map((name) => (\\n            <MenuItem\\n              key={name}\\n              value={name}\\n              style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\\n        <Select\\n          multiple\\n          displayEmpty\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id='select-multiple-placeholder' />}\\n          renderValue={(selected) => {\\n            if (selected.length === 0) {\\n              return <em>Placeholder</em>;\\n            }\\n\\n            return selected.join(', ');\\n          }}\\n          MenuProps={MenuProps}>\\n          <MenuItem disabled value=''>\\n            <em>Placeholder</em>\\n          </MenuItem>\\n          {names.map((name) => (\\n            <MenuItem\\n              key={name}\\n              value={name}\\n              style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor='select-multiple-native'>\\n          Native\\n        </InputLabel>\\n        <Select\\n          multiple\\n          native\\n          value={personName}\\n          onChange={handleChangeMultiple}\\n          inputProps={{\\n            id: 'select-multiple-native',\\n          }}>\\n          {names.map((name) => (\\n            <option key={name} value={name}>\\n              {name}\\n            </option>\\n          ))}\\n        </Select>\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function ControlledOpenSelect() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  function handleChange(event) {\n    setAge(event.target.value);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <form autoComplete='off'>\n      <Button className={classes.button} onClick={handleOpen}>\n        Open the select\n      </Button>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\n        <Select\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'demo-controlled-open-select',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  button: {\\n    display: 'block',\\n    marginTop: theme.spacing(2),\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n}));\\n\\nexport default function ControlledOpenSelect() {\\n  const classes = useStyles();\\n  const [age, setAge] = React.useState('');\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleChange(event) {\\n    setAge(event.target.value);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleOpen() {\\n    setOpen(true);\\n  }\\n\\n  return (\\n    <form autoComplete='off'>\\n      <Button className={classes.button} onClick={handleOpen}>\\n        Open the select\\n      </Button>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\\n        <Select\\n          open={open}\\n          onClose={handleClose}\\n          onOpen={handleOpen}\\n          value={age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'demo-controlled-open-select',\\n          }}>\\n          <MenuItem value=''>\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function DialogSelect() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    age: '',\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: Number(event.target.value)});\n  };\n\n  function handleClickOpen() {\n    setState({...state, open: true});\n  }\n\n  function handleClose() {\n    setState({...state, open: false});\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={state.open}\n        onClose={handleClose}>\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\n              <Select\n                native\n                value={state.age}\n                onChange={handleChange('age')}\n                input={<Input id='age-native-simple' />}>\n                <option value='' />\n                <option value={10}>Ten</option>\n                <option value={20}>Twenty</option>\n                <option value={30}>Thirty</option>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\n              <Select\n                value={state.age}\n                onChange={handleChange('age')}\n                input={<Input id='age-simple' />}>\n                <MenuItem value=''>\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color='primary'>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleSelect from './SimpleSelect';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleSelectSource from '!raw-loader!./SimpleSelect';\nimport NativeSelect from './NativeSelect';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport NativeSelectSource from '!raw-loader!./NativeSelect';\nimport CustomizedSelects from './CustomizedSelects';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedSelectsSource from '!raw-loader!./CustomizedSelects';\nimport MultipleSelect from './MultipleSelect';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MultipleSelectSource from '!raw-loader!./MultipleSelect';\nimport ControlledOpenSelect from './ControlledOpenSelect';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ControlledOpenSelectSource from '!raw-loader!./ControlledOpenSelect';\nimport WithaDialog from './WithaDialog';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport WithaDialogSource from '!raw-loader!./WithaDialog';\n\nconst Selects = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Selects'\n        description='Select components are used for collecting user provided information from a list of options'\n        refUrl='https://material-ui.com/components/selects/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Simple Select'\n            component={SimpleSelect}\n            source={SimpleSelectSource}\n            description='Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Native Select'\n            component={NativeSelect}\n            source={NativeSelectSource}\n            description='As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized selects'\n            component={CustomizedSelects}\n            source={CustomizedSelectsSource}\n            description=\"The first step is to style the InputBase component. Once it's styled, you can either use it directly as a text field or provide it to the select input property to have a select field..\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Multiple Select'\n            component={MultipleSelect}\n            source={MultipleSelectSource}\n            description=\"The Select component can handle multiple selections. It's enabled with the multiple property.\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Controlled Open Select'\n            component={ControlledOpenSelect}\n            source={ControlledOpenSelectSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='With a Dialog'\n            component={WithaDialog}\n            source={WithaDialogSource}\n            description=\"While it's discouraged by the Material Design specification, you can use a select inside a dialog.\"\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Selects;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport Input from '@material-ui/core/Input';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n}));\\n\\nexport default function DialogSelect() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    open: false,\\n    age: '',\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: Number(event.target.value)});\\n  };\\n\\n  function handleClickOpen() {\\n    setState({...state, open: true});\\n  }\\n\\n  function handleClose() {\\n    setState({...state, open: false});\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\\n      <Dialog\\n        disableBackdropClick\\n        disableEscapeKeyDown\\n        open={state.open}\\n        onClose={handleClose}>\\n        <DialogTitle>Fill the form</DialogTitle>\\n        <DialogContent>\\n          <form className={classes.container}>\\n            <FormControl className={classes.formControl}>\\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\\n              <Select\\n                native\\n                value={state.age}\\n                onChange={handleChange('age')}\\n                input={<Input id='age-native-simple' />}>\\n                <option value='' />\\n                <option value={10}>Ten</option>\\n                <option value={20}>Twenty</option>\\n                <option value={30}>Thirty</option>\\n              </Select>\\n            </FormControl>\\n            <FormControl className={classes.formControl}>\\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\\n              <Select\\n                value={state.age}\\n                onChange={handleChange('age')}\\n                input={<Input id='age-simple' />}>\\n                <MenuItem value=''>\\n                  <em>None</em>\\n                </MenuItem>\\n                <MenuItem value={10}>Ten</MenuItem>\\n                <MenuItem value={20}>Twenty</MenuItem>\\n                <MenuItem value={30}>Thirty</MenuItem>\\n              </Select>\\n            </FormControl>\\n          </form>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color='primary'>\\n            Cancel\\n          </Button>\\n          <Button onClick={handleClose} color='primary'>\\n            Ok\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}