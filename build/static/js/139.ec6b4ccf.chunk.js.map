{"version":3,"sources":["modules/muiComponents/feedback/Snacksbars/SimpleSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SimpleSnackbars.js?b637","modules/muiComponents/feedback/Snacksbars/CustomizedSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/CustomizedSnackbars.js?bc01","modules/muiComponents/feedback/Snacksbars/PositionedSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/PositionedSnackbars.js?3084","modules/muiComponents/feedback/Snacksbars/MessageLength.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/MessageLength.js?6aa2","modules/muiComponents/feedback/Snacksbars/TransitionsSnckbar.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/TransitionsSnckbar.js?056a","modules/muiComponents/feedback/Snacksbars/SnackbarsFAB.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SnackbarsFAB.js?b909","modules/muiComponents/feedback/Snacksbars/ControlSlideDirection.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/ControlSlideDirection.js?1904","modules/muiComponents/feedback/Snacksbars/SnackbarNotistack.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SnackbarNotistack.js?ebae","modules/muiComponents/feedback/Snacksbars/ChangeTransition.js","modules/muiComponents/feedback/Snacksbars/index.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/ChangeTransition.js?9d06"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","color","size","IconButton","aria-label","className","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","aria-describedby","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbars","queueRef","useRef","undefined","messageInfo","setMessageInfo","processQueue","current","length","shift","push","Date","getTime","onExited","body","background","paper","menuButton","fab","position","bottom","right","breakpoints","down","FabIntegrationSnackbar","Fragment","CssBaseline","AppBar","Toolbar","edge","Typography","Fab","TransitionLeft","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","transition","setTransition","Transition","TransitionComponent","MyApp","enqueueSnackbar","useSnackbar","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","Snacksbars","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","MessageLength","source","PositionedSnackbars","SimpleSnackbars","TransitionsSnckbar","SnackbarsFAB","ChangeTransition","ControlSlideDirection","SnackbarNotistack"],"mappings":"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","file":"static/js/139.ec6b4ccf.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>Note archived</span>}\n        action={[\n          <Button\n            key='undo'\n            color='secondary'\n            size='small'\n            onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  close: {\\n    padding: theme.spacing(0.5),\\n  },\\n}));\\n\\nexport default function SimpleSnackbar() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick}>Open simple snackbar</Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id='message-id'>Note archived</span>}\\n        action={[\\n          <Button\\n            key='undo'\\n            color='secondary'\\n            size='small'\\n            onClick={handleClose}>\\n            UNDO\\n          </Button>,\\n          <IconButton\\n            key='close'\\n            aria-label='close'\\n            color='inherit'\\n            className={classes.close}\\n            onClick={handleClose}>\\n            <CloseIcon />\\n          </IconButton>,\\n        ]}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {amber, green} from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme) => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {className, message, onClose, variant, ...other} = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button\n        variant='outlined'\n        className={classes.margin}\n        onClick={handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}>\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant='success'\n          message='This is a success message!'\n        />\n      </Snackbar>\n      <MySnackbarContentWrapper\n        variant='error'\n        className={classes.margin}\n        message='This is an error message!'\n      />\n      <MySnackbarContentWrapper\n        variant='warning'\n        className={classes.margin}\n        message='This is a warning message!'\n      />\n      <MySnackbarContentWrapper\n        variant='info'\n        className={classes.margin}\n        message='This is an information message!'\n      />\n      <MySnackbarContentWrapper\n        variant='success'\n        className={classes.margin}\n        message='This is a success message!'\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport clsx from 'clsx';\\nimport Button from '@material-ui/core/Button';\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\nimport ErrorIcon from '@material-ui/icons/Error';\\nimport InfoIcon from '@material-ui/icons/Info';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport {amber, green} from '@material-ui/core/colors';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\nimport WarningIcon from '@material-ui/icons/Warning';\\nimport {makeStyles} from '@material-ui/core/styles';\\n\\nconst variantIcon = {\\n  success: CheckCircleIcon,\\n  warning: WarningIcon,\\n  error: ErrorIcon,\\n  info: InfoIcon,\\n};\\n\\nconst useStyles1 = makeStyles((theme) => ({\\n  success: {\\n    backgroundColor: green[600],\\n  },\\n  error: {\\n    backgroundColor: theme.palette.error.dark,\\n  },\\n  info: {\\n    backgroundColor: theme.palette.primary.main,\\n  },\\n  warning: {\\n    backgroundColor: amber[700],\\n  },\\n  icon: {\\n    fontSize: 20,\\n  },\\n  iconVariant: {\\n    opacity: 0.9,\\n    marginRight: theme.spacing(1),\\n  },\\n  message: {\\n    display: 'flex',\\n    alignItems: 'center',\\n  },\\n}));\\n\\nfunction MySnackbarContentWrapper(props) {\\n  const classes = useStyles1();\\n  const {className, message, onClose, variant, ...other} = props;\\n  const Icon = variantIcon[variant];\\n\\n  return (\\n    <SnackbarContent\\n      className={clsx(classes[variant], className)}\\n      aria-describedby='client-snackbar'\\n      message={\\n        <span id='client-snackbar' className={classes.message}>\\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\\n          {message}\\n        </span>\\n      }\\n      action={[\\n        <IconButton\\n          key='close'\\n          aria-label='close'\\n          color='inherit'\\n          onClick={onClose}>\\n          <CloseIcon className={classes.icon} />\\n        </IconButton>,\\n      ]}\\n      {...other}\\n    />\\n  );\\n}\\n\\nMySnackbarContentWrapper.propTypes = {\\n  className: PropTypes.string,\\n  message: PropTypes.string,\\n  onClose: PropTypes.func,\\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\\n};\\n\\nconst useStyles2 = makeStyles((theme) => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedSnackbars() {\\n  const classes = useStyles2();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button\\n        variant='outlined'\\n        className={classes.margin}\\n        onClick={handleClick}>\\n        Open success snackbar\\n      </Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}>\\n        <MySnackbarContentWrapper\\n          onClose={handleClose}\\n          variant='success'\\n          message='This is a success message!'\\n        />\\n      </Snackbar>\\n      <MySnackbarContentWrapper\\n        variant='error'\\n        className={classes.margin}\\n        message='This is an error message!'\\n      />\\n      <MySnackbarContentWrapper\\n        variant='warning'\\n        className={classes.margin}\\n        message='This is a warning message!'\\n      />\\n      <MySnackbarContentWrapper\\n        variant='info'\\n        className={classes.margin}\\n        message='This is an information message!'\\n      />\\n      <MySnackbarContentWrapper\\n        variant='success'\\n        className={classes.margin}\\n        message='This is a success message!'\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const {vertical, horizontal, open} = state;\n\n  const handleClick = (newState) => () => {\n    setState({open: true, ...newState});\n  };\n\n  function handleClose() {\n    setState({...state, open: false});\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\n        Top-Center\n      </Button>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\n        Top-Right\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\n        Bottom-Right\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\n        Bottom-Center\n      </Button>\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\n        Bottom-Left\n      </Button>\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\n        Top-Left\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical, horizontal}}\n        key={`${vertical},${horizontal}`}\n        open={open}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\n\\nexport default function PositionedSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    vertical: 'top',\\n    horizontal: 'center',\\n  });\\n\\n  const {vertical, horizontal, open} = state;\\n\\n  const handleClick = (newState) => () => {\\n    setState({open: true, ...newState});\\n  };\\n\\n  function handleClose() {\\n    setState({...state, open: false});\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\\n        Top-Center\\n      </Button>\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\\n        Top-Right\\n      </Button>\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\\n        Bottom-Right\\n      </Button>\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\\n        Bottom-Center\\n      </Button>\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\\n        Bottom-Left\\n      </Button>\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\\n        Top-Left\\n      </Button>\\n      <Snackbar\\n        anchorOrigin={{vertical, horizontal}}\\n        key={`${vertical},${horizontal}`}\\n        open={open}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id='message-id'>I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst action = (\n  <Button color='secondary' size='small'>\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n  },\n  snackbar: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent\n        className={classes.snackbar}\n        message='I love snacks.'\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message='I love candy. I love cookies. I love cupcakes.'\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n        action={action}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\n\\nconst action = (\\n  <Button color='secondary' size='small'>\\n    lorem ipsum dolorem\\n  </Button>\\n);\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    maxWidth: 600,\\n  },\\n  snackbar: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function LongTextSnackbar() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message='I love snacks.'\\n        action={action}\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes. \\\\\\n          I love cheesecake. I love chocolate.'\\n        }\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message='I love candy. I love cookies. I love cupcakes.'\\n        action={action}\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes. \\\\\\n          I love cheesecake. I love chocolate.'\\n        }\\n        action={action}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function ConsecutiveSnackbars() {\n  const queueRef = React.useRef([]);\n  const [open, setOpen] = React.useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  const processQueue = () => {\n    if (queueRef.current.length > 0) {\n      setMessageInfo(queueRef.current.shift());\n      setOpen(true);\n    }\n  };\n\n  const handleClick = (message) => () => {\n    queueRef.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n\n    if (open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setOpen(false);\n    } else {\n      processQueue();\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => {\n    processQueue();\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\n      <Snackbar\n        key={messageInfo ? messageInfo.key : undefined}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onExited={handleExited}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={\n          <span id='message-id'>\n            {messageInfo ? messageInfo.message : undefined}\n          </span>\n        }\n        action={[\n          <Button\n            key='undo'\n            color='secondary'\n            size='small'\n            onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  close: {\\n    padding: theme.spacing(0.5),\\n  },\\n}));\\n\\nexport default function ConsecutiveSnackbars() {\\n  const queueRef = React.useRef([]);\\n  const [open, setOpen] = React.useState(false);\\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\\n\\n  const processQueue = () => {\\n    if (queueRef.current.length > 0) {\\n      setMessageInfo(queueRef.current.shift());\\n      setOpen(true);\\n    }\\n  };\\n\\n  const handleClick = (message) => () => {\\n    queueRef.current.push({\\n      message,\\n      key: new Date().getTime(),\\n    });\\n\\n    if (open) {\\n      // immediately begin dismissing current message\\n      // to start showing new one\\n      setOpen(false);\\n    } else {\\n      processQueue();\\n    }\\n  };\\n\\n  const handleClose = (event, reason) => {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n    setOpen(false);\\n  };\\n\\n  const handleExited = () => {\\n    processQueue();\\n  };\\n\\n  const classes = useStyles();\\n  return (\\n    <div>\\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\\n      <Snackbar\\n        key={messageInfo ? messageInfo.key : undefined}\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n        onExited={handleExited}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={\\n          <span id='message-id'>\\n            {messageInfo ? messageInfo.message : undefined}\\n          </span>\\n        }\\n        action={[\\n          <Button\\n            key='undo'\\n            color='secondary'\\n            size='small'\\n            onClick={handleClose}>\\n            UNDO\\n          </Button>,\\n          <IconButton\\n            key='close'\\n            aria-label='close'\\n            color='inherit'\\n            className={classes.close}\\n            onClick={handleClose}>\\n            <CloseIcon />\\n          </IconButton>,\\n        ]}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n  },\n}));\n\nexport default function FabIntegrationSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div>\n        <AppBar position='static' color='primary'>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='menu'>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit'>\n              App Bar\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Fab color='secondary' className={classes.fab}>\n          <AddIcon />\n        </Fab>\n        <Snackbar\n          open\n          autoHideDuration={4000}\n          ContentProps={{\n            'aria-describedby': 'snackbar-fab-message-id',\n          }}\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\n          action={\n            <Button color='inherit' size='small'>\n              Undo\n            </Button>\n          }\n          className={classes.snackbar}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport AppBar from '@material-ui/core/AppBar';\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport MenuIcon from '@material-ui/icons/Menu';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport Fab from '@material-ui/core/Fab';\\nimport AddIcon from '@material-ui/icons/Add';\\nimport Snackbar from '@material-ui/core/Snackbar';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  '@global': {\\n    body: {\\n      backgroundColor: theme.palette.background.paper,\\n    },\\n  },\\n  menuButton: {\\n    marginRight: theme.spacing(2),\\n  },\\n  fab: {\\n    position: 'absolute',\\n    bottom: theme.spacing(2),\\n    right: theme.spacing(2),\\n  },\\n  snackbar: {\\n    [theme.breakpoints.down('xs')]: {\\n      bottom: 90,\\n    },\\n  },\\n}));\\n\\nexport default function FabIntegrationSnackbar() {\\n  const classes = useStyles();\\n\\n  return (\\n    <React.Fragment>\\n      <CssBaseline />\\n      <div>\\n        <AppBar position='static' color='primary'>\\n          <Toolbar>\\n            <IconButton\\n              edge='start'\\n              className={classes.menuButton}\\n              color='inherit'\\n              aria-label='menu'>\\n              <MenuIcon />\\n            </IconButton>\\n            <Typography variant='h6' color='inherit'>\\n              App Bar\\n            </Typography>\\n          </Toolbar>\\n        </AppBar>\\n        <Fab color='secondary' className={classes.fab}>\\n          <AddIcon />\\n        </Fab>\\n        <Snackbar\\n          open\\n          autoHideDuration={4000}\\n          ContentProps={{\\n            'aria-describedby': 'snackbar-fab-message-id',\\n          }}\\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\\n          action={\\n            <Button color='inherit' size='small'>\\n              Undo\\n            </Button>\\n          }\\n          className={classes.snackbar}\\n        />\\n      </div>\\n    </React.Fragment>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction='left' />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction='up' />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction='right' />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction='down' />;\n}\n\nexport default function DirectionSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  const handleClick = (Transition) => () => {\n    setTransition(() => Transition);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Slide from '@material-ui/core/Slide';\\n\\nfunction TransitionLeft(props) {\\n  return <Slide {...props} direction='left' />;\\n}\\n\\nfunction TransitionUp(props) {\\n  return <Slide {...props} direction='up' />;\\n}\\n\\nfunction TransitionRight(props) {\\n  return <Slide {...props} direction='right' />;\\n}\\n\\nfunction TransitionDown(props) {\\n  return <Slide {...props} direction='down' />;\\n}\\n\\nexport default function DirectionSnackbar() {\\n  const [open, setOpen] = React.useState(false);\\n  const [transition, setTransition] = React.useState(undefined);\\n\\n  const handleClick = (Transition) => () => {\\n    setTransition(() => Transition);\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\\n      <Snackbar\\n        open={open}\\n        onClose={handleClose}\\n        TransitionComponent={transition}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id='message-id'>I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {SnackbarProvider, useSnackbar} from 'notistack';\n\nfunction MyApp() {\n  const {enqueueSnackbar} = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar('I love snacks.');\n  };\n\n  const handleClickVariant = (variant) => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a warning message!', {variant});\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick}>Show snackbar</Button>\n      <Button onClick={handleClickVariant('warning')}>\n        Show warning snackbar\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <MyApp />\n    </SnackbarProvider>\n  );\n}\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport {SnackbarProvider, useSnackbar} from 'notistack';\\n\\nfunction MyApp() {\\n  const {enqueueSnackbar} = useSnackbar();\\n\\n  const handleClick = () => {\\n    enqueueSnackbar('I love snacks.');\\n  };\\n\\n  const handleClickVariant = (variant) => () => {\\n    // variant could be success, error, warning, info, or default\\n    enqueueSnackbar('This is a warning message!', {variant});\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button onClick={handleClick}>Show snackbar</Button>\\n      <Button onClick={handleClickVariant('warning')}>\\n        Show warning snackbar\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\\nexport default function IntegrationNotistack() {\\n  return (\\n    <SnackbarProvider maxSnack={3}>\\n      <MyApp />\\n    </SnackbarProvider>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction='up' />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({\n      open: true,\n      Transition,\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false,\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id='message-id'>I love snacks</span>}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleSnackbars from './SimpleSnackbars';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleSnackbarsSource from '!raw-loader!./SimpleSnackbars';\nimport CustomizedSnackbars from './CustomizedSnackbars';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedSnackbarsSource from '!raw-loader!./CustomizedSnackbars';\nimport PositionedSnackbars from './PositionedSnackbars';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PositionedSnackbarsSource from '!raw-loader!./PositionedSnackbars';\nimport MessageLength from './MessageLength';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MessageLengthSource from '!raw-loader!./MessageLength';\nimport TransitionsSnckbar from './TransitionsSnckbar';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TransitionsSnckbarSource from '!raw-loader!./TransitionsSnckbar';\nimport SnackbarsFAB from './SnackbarsFAB';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SnackbarsFABSource from '!raw-loader!./SnackbarsFAB';\nimport ControlSlideDirection from './ControlSlideDirection';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ControlSlideDirectionSource from '!raw-loader!./ControlSlideDirection';\nimport SnackbarNotistack from './SnackbarNotistack';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SnackbarNotistackSource from '!raw-loader!./SnackbarNotistack';\nimport ChangeTransition from './ChangeTransition';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ChangeTransitionSource from '!raw-loader!./ChangeTransition';\n\nconst Snacksbars = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Snackbars'\n        description='Snackbars provide brief messages about app processes. The component is also known as a toast.'\n        refUrl='https://material-ui.com/components/snackbars/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Message Length'\n            component={MessageLength}\n            source={MessageLengthSource}\n            description='Some snackbars with varying message length...'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized snackbars'\n            component={CustomizedSnackbars}\n            source={CustomizedSnackbarsSource}\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Positioned snackbars'\n            component={PositionedSnackbars}\n            source={PositionedSnackbarsSource}\n            description='There may be circumstances when the placement of the snackbar needs to be more flexible.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple snackbars'\n            component={SimpleSnackbars}\n            source={SimpleSnackbarsSource}\n            description=\"A basic snackbar that aims to reproduce Google Keep's snackbar behavior.\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Transitions'\n            component={TransitionsSnckbar}\n            source={TransitionsSnckbarSource}\n            description='Some snackbars with varying message length...'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Snackbars and floating action buttons'\n            component={SnackbarsFAB}\n            source={SnackbarsFABSource}\n            description='Some snackbars with varying message length...'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Change Transition'\n            component={ChangeTransition}\n            source={ChangeTransitionSource}\n            description='Grow is the default transition but you can use a different one.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Control Slide direction'\n            component={ControlSlideDirection}\n            source={ControlSlideDirectionSource}\n            description='You can change the direction of the Slide transition..'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Snackbar notistack'\n            component={SnackbarNotistack}\n            source={SnackbarNotistackSource}\n            description=\"In the following example, we demonstrate how to use notistack. notistack makes it easy to display snackbars (so you don't have to deal with open/close state of them). It also enables you to stack them on top of one another (although this is discouraged by the specification).\"\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Snacksbars;\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Fade from '@material-ui/core/Fade';\\nimport Slide from '@material-ui/core/Slide';\\nimport Grow from '@material-ui/core/Grow';\\n\\nfunction SlideTransition(props) {\\n  return <Slide {...props} direction='up' />;\\n}\\n\\nfunction GrowTransition(props) {\\n  return <Grow {...props} />;\\n}\\n\\nexport default function TransitionsSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    Transition: Fade,\\n  });\\n\\n  const handleClick = (Transition) => () => {\\n    setState({\\n      open: true,\\n      Transition,\\n    });\\n  };\\n\\n  function handleClose() {\\n    setState({\\n      ...state,\\n      open: false,\\n    });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\\n      <Snackbar\\n        open={state.open}\\n        onClose={handleClose}\\n        TransitionComponent={state.Transition}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id='message-id'>I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}