{"version":3,"sources":["modules/muiComponents/dataDisplay/Lists/SimpleList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/SimpleList.js?f62b","modules/muiComponents/dataDisplay/Lists/NestedList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/NestedList.js?7d25","modules/muiComponents/dataDisplay/Lists/FolderList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/FolderList.js?1b97","modules/muiComponents/dataDisplay/Lists/AlignListItems.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/AlignListItems.js?e786","modules/muiComponents/dataDisplay/Lists/SelectedListItem.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/SelectedListItem.js?ec75","modules/muiComponents/dataDisplay/Lists/ListControls.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/ListControls.js?6a20","modules/muiComponents/dataDisplay/Lists/SwitchList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/SwitchList.js?5087","modules/muiComponents/dataDisplay/Lists/PinnedSubheaderList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/PinnedSubheaderList.js?8a5b","modules/muiComponents/dataDisplay/Lists/InsetList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/InsetList.js?ccff","modules/muiComponents/dataDisplay/Lists/VirtualizedList.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/VirtualizedList.js?0567","modules/muiComponents/dataDisplay/Lists/InteractiveList.js","modules/muiComponents/dataDisplay/Lists/index.js","webpack:///./src/modules/muiComponents/dataDisplay/Lists/InteractiveList.js?131c"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","ListItemLink","props","ListItem","button","component","SimpleList","classes","className","List","aria-label","ListItemIcon","ListItemText","primary","Divider","href","nested","paddingLeft","spacing","NestedList","React","useState","open","setOpen","aria-labelledby","subheader","ListSubheader","id","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","FolderList","ListItemAvatar","Avatar","secondary","inline","display","AlignItemsList","alignItems","alt","src","Fragment","Typography","variant","color","SelectedListItem","selectedIndex","setSelectedIndex","handleListItemClick","event","index","selected","CheckboxList","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId","key","role","undefined","dense","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","IconButton","SwitchListSecondary","Switch","onChange","position","overflow","maxHeight","listSection","ul","padding","PinnedSubheaderList","sectionId","item","InsetList","inset","height","Row","style","VirtualizedList","itemSize","itemCount","createData","name","calories","fat","carbs","protein","rows","desc","a","b","orderBy","headCells","numeric","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","type","main","lighten","light","text","dark","spacer","flex","actions","title","EnhancedTableToolbar","Toolbar","clsx","Tooltip","marginTop","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","margin","top","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","Table","size","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","isItemSelected","hover","newSelected","concat","handleClick","aria-checked","scope","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Lists","ComponentHeader","description","refUrl","GridContainer","Grid","xs","lg","ComponentCard","source","FolderListSource","InteractiveList","ListControls","AlignListItems","SwitchList"],"mappings":"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","file":"static/js/135.473c8efb.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component='a' {...props} />;\n}\n\nexport default function SimpleList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component='nav' aria-label='main mailbox folders'>\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Inbox' />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary='Drafts' />\n        </ListItem>\n      </List>\n      <Divider />\n      <List component='nav' aria-label='secondary mailbox folders'>\n        <ListItem button>\n          <ListItemText primary='Trash' />\n        </ListItem>\n        <ListItemLink href='#simple-list'>\n          <ListItemText primary='Spam' />\n        </ListItemLink>\n      </List>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Divider from '@material-ui/core/Divider';\\nimport InboxIcon from '@material-ui/icons/Inbox';\\nimport DraftsIcon from '@material-ui/icons/Drafts';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nfunction ListItemLink(props) {\\n  return <ListItem button component='a' {...props} />;\\n}\\n\\nexport default function SimpleList() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <List component='nav' aria-label='main mailbox folders'>\\n        <ListItem button>\\n          <ListItemIcon>\\n            <InboxIcon />\\n          </ListItemIcon>\\n          <ListItemText primary='Inbox' />\\n        </ListItem>\\n        <ListItem button>\\n          <ListItemIcon>\\n            <DraftsIcon />\\n          </ListItemIcon>\\n          <ListItemText primary='Drafts' />\\n        </ListItem>\\n      </List>\\n      <Divider />\\n      <List component='nav' aria-label='secondary mailbox folders'>\\n        <ListItem button>\\n          <ListItemText primary='Trash' />\\n        </ListItem>\\n        <ListItemLink href='#simple-list'>\\n          <ListItemText primary='Spam' />\\n        </ListItemLink>\\n      </List>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default function NestedList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  return (\n    <List\n      component='nav'\n      aria-labelledby='nested-list-subheader'\n      subheader={\n        <ListSubheader component='div' id='nested-list-subheader'>\n          Nested List Items\n        </ListSubheader>\n      }\n      className={classes.root}>\n      <ListItem button>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText primary='Sent mail' />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <DraftsIcon />\n        </ListItemIcon>\n        <ListItemText primary='Drafts' />\n      </ListItem>\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary='Inbox' />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout='auto' unmountOnExit>\n        <List component='div' disablePadding>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary='Starred' />\n          </ListItem>\n        </List>\n      </Collapse>\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Collapse from '@material-ui/core/Collapse';\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\nimport DraftsIcon from '@material-ui/icons/Drafts';\\nimport SendIcon from '@material-ui/icons/Send';\\nimport ExpandLess from '@material-ui/icons/ExpandLess';\\nimport ExpandMore from '@material-ui/icons/ExpandMore';\\nimport StarBorder from '@material-ui/icons/StarBorder';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n  nested: {\\n    paddingLeft: theme.spacing(4),\\n  },\\n}));\\n\\nexport default function NestedList() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(true);\\n\\n  function handleClick() {\\n    setOpen(!open);\\n  }\\n\\n  return (\\n    <List\\n      component='nav'\\n      aria-labelledby='nested-list-subheader'\\n      subheader={\\n        <ListSubheader component='div' id='nested-list-subheader'>\\n          Nested List Items\\n        </ListSubheader>\\n      }\\n      className={classes.root}>\\n      <ListItem button>\\n        <ListItemIcon>\\n          <SendIcon />\\n        </ListItemIcon>\\n        <ListItemText primary='Sent mail' />\\n      </ListItem>\\n      <ListItem button>\\n        <ListItemIcon>\\n          <DraftsIcon />\\n        </ListItemIcon>\\n        <ListItemText primary='Drafts' />\\n      </ListItem>\\n      <ListItem button onClick={handleClick}>\\n        <ListItemIcon>\\n          <InboxIcon />\\n        </ListItemIcon>\\n        <ListItemText primary='Inbox' />\\n        {open ? <ExpandLess /> : <ExpandMore />}\\n      </ListItem>\\n      <Collapse in={open} timeout='auto' unmountOnExit>\\n        <List component='div' disablePadding>\\n          <ListItem button className={classes.nested}>\\n            <ListItemIcon>\\n              <StarBorder />\\n            </ListItemIcon>\\n            <ListItemText primary='Starred' />\\n          </ListItem>\\n        </List>\\n      </Collapse>\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function FolderList() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary='Photos' secondary='Jan 9, 2014' />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary='Work' secondary='Jan 7, 2014' />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <BeachAccessIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary='Vacation' secondary='July 20, 2014' />\n      </ListItem>\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport ImageIcon from '@material-ui/icons/Image';\\nimport WorkIcon from '@material-ui/icons/Work';\\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nexport default function FolderList() {\\n  const classes = useStyles();\\n\\n  return (\\n    <List className={classes.root}>\\n      <ListItem>\\n        <ListItemAvatar>\\n          <Avatar>\\n            <ImageIcon />\\n          </Avatar>\\n        </ListItemAvatar>\\n        <ListItemText primary='Photos' secondary='Jan 9, 2014' />\\n      </ListItem>\\n      <ListItem>\\n        <ListItemAvatar>\\n          <Avatar>\\n            <WorkIcon />\\n          </Avatar>\\n        </ListItemAvatar>\\n        <ListItemText primary='Work' secondary='Jan 7, 2014' />\\n      </ListItem>\\n      <ListItem>\\n        <ListItemAvatar>\\n          <Avatar>\\n            <BeachAccessIcon />\\n          </Avatar>\\n        </ListItemAvatar>\\n        <ListItemText primary='Vacation' secondary='July 20, 2014' />\\n      </ListItem>\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function AlignItemsList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem alignItems='flex-start'>\r\n        <ListItemAvatar>\r\n          <Avatar alt='Remy Sharp' src={'https://via.placeholder.com/150'} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary='Brunch this weekend?'\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component='span'\r\n                variant='body2'\r\n                className={classes.inline}\r\n                color='text.primary'>\r\n                Ali Connors\r\n              </Typography>\r\n              {\" — I'll be in your neighborhood doing errands this…\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant='inset' component='li' />\r\n      <ListItem alignItems='flex-start'>\r\n        <ListItemAvatar>\r\n          <Avatar alt='Travis Howard' src={'https://via.placeholder.com/150'} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary='Summer BBQ'\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component='span'\r\n                variant='body2'\r\n                className={classes.inline}\r\n                color='text.primary'>\r\n                to Scott, Alex, Jennifer\r\n              </Typography>\r\n              {\" — Wish I could come, but I'm out of town this…\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant='inset' component='li' />\r\n      <ListItem alignItems='flex-start'>\r\n        <ListItemAvatar>\r\n          <Avatar alt='Cindy Baker' src={'https://via.placeholder.com/150'} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary='Oui Oui'\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component='span'\r\n                variant='body2'\r\n                className={classes.inline}\r\n                color='text.primary'>\r\n                Sandra Adams\r\n              </Typography>\r\n              {' — Do you have Paris recommendations? Have you ever…'}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    maxWidth: 360,\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n  },\\r\\n  inline: {\\r\\n    display: 'inline',\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function AlignItemsList() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <List className={classes.root}>\\r\\n      <ListItem alignItems='flex-start'>\\r\\n        <ListItemAvatar>\\r\\n          <Avatar alt='Remy Sharp' src={'https://via.placeholder.com/150'} />\\r\\n        </ListItemAvatar>\\r\\n        <ListItemText\\r\\n          primary='Brunch this weekend?'\\r\\n          secondary={\\r\\n            <React.Fragment>\\r\\n              <Typography\\r\\n                component='span'\\r\\n                variant='body2'\\r\\n                className={classes.inline}\\r\\n                color='text.primary'>\\r\\n                Ali Connors\\r\\n              </Typography>\\r\\n              {\\\" — I'll be in your neighborhood doing errands this…\\\"}\\r\\n            </React.Fragment>\\r\\n          }\\r\\n        />\\r\\n      </ListItem>\\r\\n      <Divider variant='inset' component='li' />\\r\\n      <ListItem alignItems='flex-start'>\\r\\n        <ListItemAvatar>\\r\\n          <Avatar alt='Travis Howard' src={'https://via.placeholder.com/150'} />\\r\\n        </ListItemAvatar>\\r\\n        <ListItemText\\r\\n          primary='Summer BBQ'\\r\\n          secondary={\\r\\n            <React.Fragment>\\r\\n              <Typography\\r\\n                component='span'\\r\\n                variant='body2'\\r\\n                className={classes.inline}\\r\\n                color='text.primary'>\\r\\n                to Scott, Alex, Jennifer\\r\\n              </Typography>\\r\\n              {\\\" — Wish I could come, but I'm out of town this…\\\"}\\r\\n            </React.Fragment>\\r\\n          }\\r\\n        />\\r\\n      </ListItem>\\r\\n      <Divider variant='inset' component='li' />\\r\\n      <ListItem alignItems='flex-start'>\\r\\n        <ListItemAvatar>\\r\\n          <Avatar alt='Cindy Baker' src={'https://via.placeholder.com/150'} />\\r\\n        </ListItemAvatar>\\r\\n        <ListItemText\\r\\n          primary='Oui Oui'\\r\\n          secondary={\\r\\n            <React.Fragment>\\r\\n              <Typography\\r\\n                component='span'\\r\\n                variant='body2'\\r\\n                className={classes.inline}\\r\\n                color='text.primary'>\\r\\n                Sandra Adams\\r\\n              </Typography>\\r\\n              {' — Do you have Paris recommendations? Have you ever…'}\\r\\n            </React.Fragment>\\r\\n          }\\r\\n        />\\r\\n      </ListItem>\\r\\n    </List>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SelectedListItem() {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  function handleListItemClick(event, index) {\n    setSelectedIndex(index);\n  }\n\n  return (\n    <div className={classes.root}>\n      <List component='nav' aria-label='main mailbox folders'>\n        <ListItem\n          button\n          selected={selectedIndex === 0}\n          onClick={(event) => handleListItemClick(event, 0)}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Inbox' />\n        </ListItem>\n        <ListItem\n          button\n          selected={selectedIndex === 1}\n          onClick={(event) => handleListItemClick(event, 1)}>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary='Drafts' />\n        </ListItem>\n      </List>\n      <Divider />\n      <List component='nav' aria-label='secondary mailbox folder'>\n        <ListItem\n          button\n          selected={selectedIndex === 2}\n          onClick={(event) => handleListItemClick(event, 2)}>\n          <ListItemText primary='Trash' />\n        </ListItem>\n        <ListItem\n          button\n          selected={selectedIndex === 3}\n          onClick={(event) => handleListItemClick(event, 3)}>\n          <ListItemText primary='Spam' />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Divider from '@material-ui/core/Divider';\\nimport InboxIcon from '@material-ui/icons/Inbox';\\nimport DraftsIcon from '@material-ui/icons/Drafts';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nexport default function SelectedListItem() {\\n  const classes = useStyles();\\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\\n\\n  function handleListItemClick(event, index) {\\n    setSelectedIndex(index);\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <List component='nav' aria-label='main mailbox folders'>\\n        <ListItem\\n          button\\n          selected={selectedIndex === 0}\\n          onClick={(event) => handleListItemClick(event, 0)}>\\n          <ListItemIcon>\\n            <InboxIcon />\\n          </ListItemIcon>\\n          <ListItemText primary='Inbox' />\\n        </ListItem>\\n        <ListItem\\n          button\\n          selected={selectedIndex === 1}\\n          onClick={(event) => handleListItemClick(event, 1)}>\\n          <ListItemIcon>\\n            <DraftsIcon />\\n          </ListItemIcon>\\n          <ListItemText primary='Drafts' />\\n        </ListItem>\\n      </List>\\n      <Divider />\\n      <List component='nav' aria-label='secondary mailbox folder'>\\n        <ListItem\\n          button\\n          selected={selectedIndex === 2}\\n          onClick={(event) => handleListItemClick(event, 2)}>\\n          <ListItemText primary='Trash' />\\n        </ListItem>\\n        <ListItem\\n          button\\n          selected={selectedIndex === 3}\\n          onClick={(event) => handleListItemClick(event, 3)}>\\n          <ListItemText primary='Spam' />\\n        </ListItem>\\n      </List>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CheckboxList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List className={classes.root}>\n      {[0, 1, 2, 3].map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          <ListItem\n            key={value}\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(value)}>\n            <ListItemIcon>\n              <Checkbox\n                edge='start'\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{'aria-labelledby': labelId}}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n            <ListItemSecondaryAction>\n              <IconButton edge='end' aria-label='comments'>\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CommentIcon from '@material-ui/icons/Comment';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nexport default function CheckboxList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([0]);\\n\\n  const handleToggle = (value) => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  return (\\n    <List className={classes.root}>\\n      {[0, 1, 2, 3].map((value) => {\\n        const labelId = `checkbox-list-label-${value}`;\\n\\n        return (\\n          <ListItem\\n            key={value}\\n            role={undefined}\\n            dense\\n            button\\n            onClick={handleToggle(value)}>\\n            <ListItemIcon>\\n              <Checkbox\\n                edge='start'\\n                checked={checked.indexOf(value) !== -1}\\n                tabIndex={-1}\\n                disableRipple\\n                inputProps={{'aria-labelledby': labelId}}\\n              />\\n            </ListItemIcon>\\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\\n            <ListItemSecondaryAction>\\n              <IconButton edge='end' aria-label='comments'>\\n                <CommentIcon />\\n              </IconButton>\\n            </ListItemSecondaryAction>\\n          </ListItem>\\n        );\\n      })}\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SwitchListSecondary() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(['wifi']);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List\n      subheader={<ListSubheader>Settings</ListSubheader>}\n      className={classes.root}>\n      <ListItem>\n        <ListItemIcon>\n          <WifiIcon />\n        </ListItemIcon>\n        <ListItemText id='switch-list-label-wifi' primary='Wi-Fi' />\n        <ListItemSecondaryAction>\n          <Switch\n            edge='end'\n            onChange={handleToggle('wifi')}\n            checked={checked.indexOf('wifi') !== -1}\n            inputProps={{'aria-labelledby': 'switch-list-label-wifi'}}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n      <ListItem>\n        <ListItemIcon>\n          <BluetoothIcon />\n        </ListItemIcon>\n        <ListItemText id='switch-list-label-bluetooth' primary='Bluetooth' />\n        <ListItemSecondaryAction>\n          <Switch\n            edge='end'\n            onChange={handleToggle('bluetooth')}\n            checked={checked.indexOf('bluetooth') !== -1}\n            inputProps={{'aria-labelledby': 'switch-list-label-bluetooth'}}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\nimport Switch from '@material-ui/core/Switch';\\nimport WifiIcon from '@material-ui/icons/Wifi';\\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nexport default function SwitchListSecondary() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState(['wifi']);\\n\\n  const handleToggle = (value) => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  return (\\n    <List\\n      subheader={<ListSubheader>Settings</ListSubheader>}\\n      className={classes.root}>\\n      <ListItem>\\n        <ListItemIcon>\\n          <WifiIcon />\\n        </ListItemIcon>\\n        <ListItemText id='switch-list-label-wifi' primary='Wi-Fi' />\\n        <ListItemSecondaryAction>\\n          <Switch\\n            edge='end'\\n            onChange={handleToggle('wifi')}\\n            checked={checked.indexOf('wifi') !== -1}\\n            inputProps={{'aria-labelledby': 'switch-list-label-wifi'}}\\n          />\\n        </ListItemSecondaryAction>\\n      </ListItem>\\n      <ListItem>\\n        <ListItemIcon>\\n          <BluetoothIcon />\\n        </ListItemIcon>\\n        <ListItemText id='switch-list-label-bluetooth' primary='Bluetooth' />\\n        <ListItemSecondaryAction>\\n          <Switch\\n            edge='end'\\n            onChange={handleToggle('bluetooth')}\\n            checked={checked.indexOf('bluetooth') !== -1}\\n            inputProps={{'aria-labelledby': 'switch-list-label-bluetooth'}}\\n          />\\n        </ListItemSecondaryAction>\\n      </ListItem>\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 300,\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n}));\n\nexport default function PinnedSubheaderList() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root} subheader={<li />}>\n      {[0, 1, 2, 3, 4].map((sectionId) => (\n        <li key={`section-${sectionId}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`I'm sticky ${sectionId}`}</ListSubheader>\n            {[0, 1, 2].map((item) => (\n              <ListItem key={`item-${sectionId}-${item}`}>\n                <ListItemText primary={`Item ${item}`} />\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n    position: 'relative',\\n    overflow: 'auto',\\n    maxHeight: 300,\\n  },\\n  listSection: {\\n    backgroundColor: 'inherit',\\n  },\\n  ul: {\\n    backgroundColor: 'inherit',\\n    padding: 0,\\n  },\\n}));\\n\\nexport default function PinnedSubheaderList() {\\n  const classes = useStyles();\\n\\n  return (\\n    <List className={classes.root} subheader={<li />}>\\n      {[0, 1, 2, 3, 4].map((sectionId) => (\\n        <li key={`section-${sectionId}`} className={classes.listSection}>\\n          <ul className={classes.ul}>\\n            <ListSubheader>{`I'm sticky ${sectionId}`}</ListSubheader>\\n            {[0, 1, 2].map((item) => (\\n              <ListItem key={`item-${sectionId}-${item}`}>\\n                <ListItemText primary={`Item ${item}`} />\\n              </ListItem>\\n            ))}\\n          </ul>\\n        </li>\\n      ))}\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function InsetList() {\n  const classes = useStyles();\n\n  return (\n    <List component='nav' className={classes.root} aria-label='contacts'>\n      <ListItem button>\n        <ListItemIcon>\n          <StarIcon />\n        </ListItemIcon>\n        <ListItemText primary='Chelsea Otakan' />\n      </ListItem>\n      <ListItem button>\n        <ListItemText inset primary='Eric Hoffman' />\n      </ListItem>\n    </List>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport StarIcon from '@material-ui/icons/Star';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nexport default function InsetList() {\\n  const classes = useStyles();\\n\\n  return (\\n    <List component='nav' className={classes.root} aria-label='contacts'>\\n      <ListItem button>\\n        <ListItemIcon>\\n          <StarIcon />\\n        </ListItemIcon>\\n        <ListItemText primary='Chelsea Otakan' />\\n      </ListItem>\\n      <ListItem button>\\n        <ListItemText inset primary='Eric Hoffman' />\\n      </ListItem>\\n    </List>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {FixedSizeList} from 'react-window';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction Row(props) {\n  const {index, style} = props;\n\n  return (\n    <ListItem button style={style} key={index}>\n      <ListItemText primary={`Item ${index + 1}`} />\n    </ListItem>\n  );\n}\n\nRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired,\n};\n\nexport default function VirtualizedList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FixedSizeList height={400} width={360} itemSize={46} itemCount={200}>\n        {Row}\n      </FixedSizeList>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport {FixedSizeList} from 'react-window';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    height: 400,\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}));\\n\\nfunction Row(props) {\\n  const {index, style} = props;\\n\\n  return (\\n    <ListItem button style={style} key={index}>\\n      <ListItemText primary={`Item ${index + 1}`} />\\n    </ListItem>\\n  );\\n}\\n\\nRow.propTypes = {\\n  index: PropTypes.number.isRequired,\\n  style: PropTypes.object.isRequired,\\n};\\n\\nexport default function VirtualizedList() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <FixedSizeList height={400} width={360} itemSize={46} itemCount={200}>\\n        {Row}\\n      </FixedSizeList>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {name, calories, fat, carbs, protein};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)',\n  },\n  {id: 'calories', numeric: true, disablePadding: false, label: 'Calories'},\n  {id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)'},\n  {id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)'},\n  {id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)'},\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected} = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}>\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, name) {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}>\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role='checkbox'\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}>\n                      <TableCell padding='checkbox'>\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{'aria-labelledby': labelId}}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component='th'\n                        id={labelId}\n                        scope='row'\n                        padding='none'>\n                        {row.name}\n                      </TableCell>\n                      <TableCell align='right'>{row.calories}</TableCell>\n                      <TableCell align='right'>{row.fat}</TableCell>\n                      <TableCell align='right'>{row.carbs}</TableCell>\n                      <TableCell align='right'>{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{height: 49 * emptyRows}}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleList from './SimpleList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleListSource from '!raw-loader!./SimpleList';\nimport NestedList from './NestedList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport NestedListSource from '!raw-loader!./NestedList';\nimport FolderList from './FolderList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport FolderListSource from '!raw-loader!./FolderList';\nimport AlignListItems from './AlignListItems';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AlignListItemsSource from '!raw-loader!./AlignListItems';\nimport SelectedListItem from './SelectedListItem';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SelectedListItemSource from '!raw-loader!./SelectedListItem';\nimport ListControls from './ListControls';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ListControlsSource from '!raw-loader!./ListControls';\nimport SwitchList from './SwitchList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SwitchListSource from '!raw-loader!./SwitchList';\nimport PinnedSubheaderList from './PinnedSubheaderList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PinnedSubheaderListSource from '!raw-loader!./PinnedSubheaderList';\nimport InsetList from './InsetList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InsetListSource from '!raw-loader!./InsetList';\nimport VirtualizedList from './VirtualizedList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport VirtualizedListSource from '!raw-loader!./VirtualizedList';\nimport InteractiveList from './InteractiveList';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InteractiveListSource from '!raw-loader!./InteractiveList';\n\nconst Lists = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Lists'\n        description='Lists are continuous, vertical indexes of text or images.'\n        refUrl='https://material-ui.com/components/lists//'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple List'\n            component={SimpleList}\n            source={SimpleListSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Folder List'\n            component={FolderList}\n            source={FolderListSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Interactive List'\n            component={InteractiveList}\n            source={InteractiveListSource}\n            description='Below is an interactive demo that lets you explore the visual results of the different settings:'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Nested List'\n            component={NestedList}\n            source={NestedListSource}\n            description='The Link component is built on top of the Typography component. You can leverage its properties.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Selected ListItem'\n            component={SelectedListItem}\n            source={SelectedListItemSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Folder List'\n            component={FolderList}\n            source={FolderListSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='List Controls'\n            component={ListControls}\n            source={ListControlsSource}\n            description='A checkbox can either be a primary action or a secondary action.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Align list items'\n            component={AlignListItems}\n            source={AlignListItemsSource}\n            description=\"You should change the list item alignment when displaying 3 lines or more, set the alignItems='flex-start' property.\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Pinned Subheader List'\n            component={PinnedSubheaderList}\n            source={PinnedSubheaderListSource}\n            description='Upon scrolling, subheaders remain pinned to the top of the screen until pushed off screen by the next subheader.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Switch List'\n            component={SwitchList}\n            source={SwitchListSource}\n            description='The switch is the secondary action and a separate target.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Inset List'\n            component={InsetList}\n            source={InsetListSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Virtualized List'\n            component={VirtualizedList}\n            source={VirtualizedListSource}\n            description='In the following example, we demonstrate how to use react-window with the List component. It renders 200 rows and can easily handle more. Virtualization helps with performance issues.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Lists;\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport clsx from 'clsx';\\nimport {lighten, makeStyles} from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TablePagination from '@material-ui/core/TablePagination';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport Typography from '@material-ui/core/Typography';\\nimport Paper from '@material-ui/core/Paper';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\nimport DeleteIcon from '@material-ui/icons/Delete';\\nimport FilterListIcon from '@material-ui/icons/FilterList';\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return {name, calories, fat, carbs, protein};\\n}\\n\\nconst rows = [\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Donut', 452, 25.0, 51, 4.9),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\\n  createData('KitKat', 518, 26.0, 65, 7.0),\\n  createData('Lollipop', 392, 0.2, 98, 0.0),\\n  createData('Marshmallow', 318, 0, 81, 2.0),\\n  createData('Nougat', 360, 19.0, 9, 37.0),\\n  createData('Oreo', 437, 18.0, 63, 4.0),\\n];\\n\\nfunction desc(a, b, orderBy) {\\n  if (b[orderBy] < a[orderBy]) {\\n    return -1;\\n  }\\n  if (b[orderBy] > a[orderBy]) {\\n    return 1;\\n  }\\n  return 0;\\n}\\n\\nfunction stableSort(array, cmp) {\\n  const stabilizedThis = array.map((el, index) => [el, index]);\\n  stabilizedThis.sort((a, b) => {\\n    const order = cmp(a[0], b[0]);\\n    if (order !== 0) return order;\\n    return a[1] - b[1];\\n  });\\n  return stabilizedThis.map((el) => el[0]);\\n}\\n\\nfunction getSorting(order, orderBy) {\\n  return order === 'desc'\\n    ? (a, b) => desc(a, b, orderBy)\\n    : (a, b) => -desc(a, b, orderBy);\\n}\\n\\nconst headCells = [\\n  {\\n    id: 'name',\\n    numeric: false,\\n    disablePadding: true,\\n    label: 'Dessert (100g serving)',\\n  },\\n  {id: 'calories', numeric: true, disablePadding: false, label: 'Calories'},\\n  {id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)'},\\n  {id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)'},\\n  {id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)'},\\n];\\n\\nfunction EnhancedTableHead(props) {\\n  const {\\n    classes,\\n    onSelectAllClick,\\n    order,\\n    orderBy,\\n    numSelected,\\n    rowCount,\\n    onRequestSort,\\n  } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        <TableCell padding='checkbox'>\\n          <Checkbox\\n            indeterminate={numSelected > 0 && numSelected < rowCount}\\n            checked={numSelected === rowCount}\\n            onChange={onSelectAllClick}\\n            inputProps={{'aria-label': 'select all desserts'}}\\n          />\\n        </TableCell>\\n        {headCells.map((headCell) => (\\n          <TableCell\\n            key={headCell.id}\\n            align={headCell.numeric ? 'right' : 'left'}\\n            padding={headCell.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === headCell.id ? order : false}>\\n            <TableSortLabel\\n              active={orderBy === headCell.id}\\n              direction={order}\\n              onClick={createSortHandler(headCell.id)}>\\n              {headCell.label}\\n              {orderBy === headCell.id ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nconst useToolbarStyles = makeStyles((theme) => ({\\n  root: {\\n    paddingLeft: theme.spacing(2),\\n    paddingRight: theme.spacing(1),\\n  },\\n  highlight:\\n    theme.palette.type === 'light'\\n      ? {\\n          color: theme.palette.secondary.main,\\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\\n        }\\n      : {\\n          color: theme.palette.text.primary,\\n          backgroundColor: theme.palette.secondary.dark,\\n        },\\n  spacer: {\\n    flex: '1 1 100%',\\n  },\\n  actions: {\\n    color: theme.palette.text.secondary,\\n  },\\n  title: {\\n    flex: '0 0 auto',\\n  },\\n}));\\n\\nconst EnhancedTableToolbar = (props) => {\\n  const classes = useToolbarStyles();\\n  const {numSelected} = props;\\n\\n  return (\\n    <Toolbar\\n      className={clsx(classes.root, {\\n        [classes.highlight]: numSelected > 0,\\n      })}>\\n      <div className={classes.title}>\\n        {numSelected > 0 ? (\\n          <Typography color='inherit' variant='subtitle1'>\\n            {numSelected} selected\\n          </Typography>\\n        ) : (\\n          <Typography variant='h6' id='tableTitle'>\\n            Nutrition\\n          </Typography>\\n        )}\\n      </div>\\n      <div className={classes.spacer} />\\n      <div className={classes.actions}>\\n        {numSelected > 0 ? (\\n          <Tooltip title='Delete'>\\n            <IconButton aria-label='delete'>\\n              <DeleteIcon />\\n            </IconButton>\\n          </Tooltip>\\n        ) : (\\n          <Tooltip title='Filter list'>\\n            <IconButton aria-label='filter list'>\\n              <FilterListIcon />\\n            </IconButton>\\n          </Tooltip>\\n        )}\\n      </div>\\n    </Toolbar>\\n  );\\n};\\n\\nEnhancedTableToolbar.propTypes = {\\n  numSelected: PropTypes.number.isRequired,\\n};\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n  },\\n  paper: {\\n    width: '100%',\\n    marginBottom: theme.spacing(2),\\n  },\\n  table: {\\n    minWidth: 750,\\n  },\\n  tableWrapper: {\\n    overflowX: 'auto',\\n  },\\n  visuallyHidden: {\\n    border: 0,\\n    clip: 'rect(0 0 0 0)',\\n    height: 1,\\n    margin: -1,\\n    overflow: 'hidden',\\n    padding: 0,\\n    position: 'absolute',\\n    top: 20,\\n    width: 1,\\n  },\\n}));\\n\\nexport default function EnhancedTable() {\\n  const classes = useStyles();\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState('calories');\\n  const [selected, setSelected] = React.useState([]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(false);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\n\\n  function handleRequestSort(event, property) {\\n    const isDesc = orderBy === property && order === 'desc';\\n    setOrder(isDesc ? 'asc' : 'desc');\\n    setOrderBy(property);\\n  }\\n\\n  function handleSelectAllClick(event) {\\n    if (event.target.checked) {\\n      const newSelecteds = rows.map((n) => n.name);\\n      setSelected(newSelecteds);\\n      return;\\n    }\\n    setSelected([]);\\n  }\\n\\n  function handleClick(event, name) {\\n    const selectedIndex = selected.indexOf(name);\\n    let newSelected = [];\\n\\n    if (selectedIndex === -1) {\\n      newSelected = newSelected.concat(selected, name);\\n    } else if (selectedIndex === 0) {\\n      newSelected = newSelected.concat(selected.slice(1));\\n    } else if (selectedIndex === selected.length - 1) {\\n      newSelected = newSelected.concat(selected.slice(0, -1));\\n    } else if (selectedIndex > 0) {\\n      newSelected = newSelected.concat(\\n        selected.slice(0, selectedIndex),\\n        selected.slice(selectedIndex + 1),\\n      );\\n    }\\n\\n    setSelected(newSelected);\\n  }\\n\\n  function handleChangePage(event, newPage) {\\n    setPage(newPage);\\n  }\\n\\n  function handleChangeRowsPerPage(event) {\\n    setRowsPerPage(+event.target.value);\\n    setPage(0);\\n  }\\n\\n  function handleChangeDense(event) {\\n    setDense(event.target.checked);\\n  }\\n\\n  const isSelected = (name) => selected.indexOf(name) !== -1;\\n\\n  const emptyRows =\\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <EnhancedTableToolbar numSelected={selected.length} />\\n        <div className={classes.tableWrapper}>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby='tableTitle'\\n            size={dense ? 'small' : 'medium'}>\\n            <EnhancedTableHead\\n              classes={classes}\\n              numSelected={selected.length}\\n              order={order}\\n              orderBy={orderBy}\\n              onSelectAllClick={handleSelectAllClick}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getSorting(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  const isItemSelected = isSelected(row.name);\\n                  const labelId = `enhanced-table-checkbox-${index}`;\\n\\n                  return (\\n                    <TableRow\\n                      hover\\n                      onClick={(event) => handleClick(event, row.name)}\\n                      role='checkbox'\\n                      aria-checked={isItemSelected}\\n                      tabIndex={-1}\\n                      key={row.name}\\n                      selected={isItemSelected}>\\n                      <TableCell padding='checkbox'>\\n                        <Checkbox\\n                          checked={isItemSelected}\\n                          inputProps={{'aria-labelledby': labelId}}\\n                        />\\n                      </TableCell>\\n                      <TableCell\\n                        component='th'\\n                        id={labelId}\\n                        scope='row'\\n                        padding='none'>\\n                        {row.name}\\n                      </TableCell>\\n                      <TableCell align='right'>{row.calories}</TableCell>\\n                      <TableCell align='right'>{row.fat}</TableCell>\\n                      <TableCell align='right'>{row.carbs}</TableCell>\\n                      <TableCell align='right'>{row.protein}</TableCell>\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{height: 49 * emptyRows}}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </div>\\n        <TablePagination\\n          rowsPerPageOptions={[5, 10, 25]}\\n          component='div'\\n          count={rows.length}\\n          rowsPerPage={rowsPerPage}\\n          page={page}\\n          backIconButtonProps={{\\n            'aria-label': 'previous page',\\n          }}\\n          nextIconButtonProps={{\\n            'aria-label': 'next page',\\n          }}\\n          onChangePage={handleChangePage}\\n          onChangeRowsPerPage={handleChangeRowsPerPage}\\n        />\\n      </Paper>\\n      <FormControlLabel\\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\\n        label='Dense padding'\\n      />\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}