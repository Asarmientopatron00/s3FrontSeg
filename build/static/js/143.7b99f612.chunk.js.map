{"version":3,"sources":["modules/muiComponents/inputs/RadiosButton/RadioButtonDefault.js","webpack:///./src/modules/muiComponents/inputs/RadiosButton/RadioButtonDefault.js?6f80","modules/muiComponents/inputs/RadiosButton/StandaloneRadioButtons.js","modules/muiComponents/inputs/RadiosButton/LabelPlacement.js","webpack:///./src/modules/muiComponents/inputs/RadiosButton/LabelPlacement.js?5c6f","modules/muiComponents/inputs/RadiosButton/CustomizedRadios.js","modules/muiComponents/inputs/RadiosButton/index.js","webpack:///./src/modules/muiComponents/inputs/RadiosButton/CustomizedRadios.js?1682","webpack:///./src/modules/muiComponents/inputs/RadiosButton/StandaloneRadioButtons.js?1456"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","RadioButtonsGroup","classes","React","useState","value","setValue","handleChange","event","target","FormControl","component","className","FormLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","disabled","color","labelPlacement","FormHelperText","GreenRadio","withStyles","root","green","checked","props","RadioButtons","selectedValue","setSelectedValue","inputProps","icon","fontSize","checkedIcon","FormControlLabelPosition","row","backgroundColor","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","display","content","StyledRadio","disableRipple","clsx","CustomizedRadios","defaultValue","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","RadioButtonDefault","source","LabelPlacement","StandaloneRadioButtons"],"mappings":"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","file":"static/js/143.7b99f612.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function RadioButtonsGroup() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <FormControl component='fieldset' className={classes.formControl}>\n        <FormLabel component='legend'>Gender</FormLabel>\n        <RadioGroup\n          aria-label='gender'\n          name='gender1'\n          value={value}\n          onChange={handleChange}>\n          <FormControlLabel value='female' control={<Radio />} label='Female' />\n          <FormControlLabel value='male' control={<Radio />} label='Male' />\n          <FormControlLabel value='other' control={<Radio />} label='Other' />\n          <FormControlLabel\n            value='disabled'\n            disabled\n            control={<Radio />}\n            label='(Disabled option)'\n          />\n        </RadioGroup>\n      </FormControl>\n      <FormControl component='fieldset' className={classes.formControl}>\n        <FormLabel component='legend'>Gender</FormLabel>\n        <RadioGroup\n          aria-label='gender'\n          name='gender2'\n          value={value}\n          onChange={handleChange}>\n          <FormControlLabel\n            value='female'\n            control={<Radio color='primary' />}\n            label='Female'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='male'\n            control={<Radio color='primary' />}\n            label='Male'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='other'\n            control={<Radio color='primary' />}\n            label='Other'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='disabled'\n            disabled\n            control={<Radio />}\n            label='(Disabled option)'\n            labelPlacement='start'\n          />\n        </RadioGroup>\n        <FormHelperText>labelPlacement start</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  formControl: {\\n    margin: theme.spacing(3),\\n  },\\n}));\\n\\nexport default function RadioButtonsGroup() {\\n  const classes = useStyles();\\n  const [value, setValue] = React.useState('female');\\n\\n  function handleChange(event) {\\n    setValue(event.target.value);\\n  }\\n\\n  return (\\n    <div>\\n      <FormControl component='fieldset' className={classes.formControl}>\\n        <FormLabel component='legend'>Gender</FormLabel>\\n        <RadioGroup\\n          aria-label='gender'\\n          name='gender1'\\n          value={value}\\n          onChange={handleChange}>\\n          <FormControlLabel value='female' control={<Radio />} label='Female' />\\n          <FormControlLabel value='male' control={<Radio />} label='Male' />\\n          <FormControlLabel value='other' control={<Radio />} label='Other' />\\n          <FormControlLabel\\n            value='disabled'\\n            disabled\\n            control={<Radio />}\\n            label='(Disabled option)'\\n          />\\n        </RadioGroup>\\n      </FormControl>\\n      <FormControl component='fieldset' className={classes.formControl}>\\n        <FormLabel component='legend'>Gender</FormLabel>\\n        <RadioGroup\\n          aria-label='gender'\\n          name='gender2'\\n          value={value}\\n          onChange={handleChange}>\\n          <FormControlLabel\\n            value='female'\\n            control={<Radio color='primary' />}\\n            label='Female'\\n            labelPlacement='start'\\n          />\\n          <FormControlLabel\\n            value='male'\\n            control={<Radio color='primary' />}\\n            label='Male'\\n            labelPlacement='start'\\n          />\\n          <FormControlLabel\\n            value='other'\\n            control={<Radio color='primary' />}\\n            label='Other'\\n            labelPlacement='start'\\n          />\\n          <FormControlLabel\\n            value='disabled'\\n            disabled\\n            control={<Radio />}\\n            label='(Disabled option)'\\n            labelPlacement='start'\\n          />\\n        </RadioGroup>\\n        <FormHelperText>labelPlacement start</FormHelperText>\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {green} from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color='default' {...props} />);\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  function handleChange(event) {\n    setSelectedValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value='a'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'A'}}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value='b'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'B'}}\n      />\n      <GreenRadio\n        checked={selectedValue === 'c'}\n        onChange={handleChange}\n        value='c'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'C'}}\n      />\n      <Radio\n        checked={selectedValue === 'd'}\n        onChange={handleChange}\n        value='d'\n        color='default'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'D'}}\n      />\n      <Radio\n        checked={selectedValue === 'e'}\n        onChange={handleChange}\n        value='e'\n        color='default'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'E'}}\n        icon={<RadioButtonUncheckedIcon fontSize='small' />}\n        checkedIcon={<RadioButtonCheckedIcon fontSize='small' />}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport default function FormControlLabelPosition() {\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>labelPlacement</FormLabel>\n      <RadioGroup\n        aria-label='position'\n        name='position'\n        value={value}\n        onChange={handleChange}\n        row>\n        <FormControlLabel\n          value='top'\n          control={<Radio color='primary' />}\n          label='Top'\n          labelPlacement='top'\n        />\n        <FormControlLabel\n          value='start'\n          control={<Radio color='primary' />}\n          label='Start'\n          labelPlacement='start'\n        />\n        <FormControlLabel\n          value='bottom'\n          control={<Radio color='primary' />}\n          label='Bottom'\n          labelPlacement='bottom'\n        />\n        <FormControlLabel\n          value='end'\n          control={<Radio color='primary' />}\n          label='End'\n          labelPlacement='end'\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","export default \"import React from 'react';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\n\\nexport default function FormControlLabelPosition() {\\n  const [value, setValue] = React.useState('female');\\n\\n  function handleChange(event) {\\n    setValue(event.target.value);\\n  }\\n\\n  return (\\n    <FormControl component='fieldset'>\\n      <FormLabel component='legend'>labelPlacement</FormLabel>\\n      <RadioGroup\\n        aria-label='position'\\n        name='position'\\n        value={value}\\n        onChange={handleChange}\\n        row>\\n        <FormControlLabel\\n          value='top'\\n          control={<Radio color='primary' />}\\n          label='Top'\\n          labelPlacement='top'\\n        />\\n        <FormControlLabel\\n          value='start'\\n          control={<Radio color='primary' />}\\n          label='Start'\\n          labelPlacement='start'\\n        />\\n        <FormControlLabel\\n          value='bottom'\\n          control={<Radio color='primary' />}\\n          label='Bottom'\\n          labelPlacement='bottom'\\n        />\\n        <FormControlLabel\\n          value='end'\\n          control={<Radio color='primary' />}\\n          label='End'\\n          labelPlacement='end'\\n        />\\n      </RadioGroup>\\n    </FormControl>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow:\n      'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n});\n\n// Inspired by blueprintjs\nfunction StyledRadio(props) {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color='default'\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\nexport default function CustomizedRadios() {\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>Gender</FormLabel>\n      <RadioGroup\n        defaultValue='female'\n        aria-label='gender'\n        name='customized-radios'>\n        <FormControlLabel\n          value='female'\n          control={<StyledRadio />}\n          label='Female'\n        />\n        <FormControlLabel value='male' control={<StyledRadio />} label='Male' />\n        <FormControlLabel\n          value='other'\n          control={<StyledRadio />}\n          label='Other'\n        />\n        <FormControlLabel\n          value='disabled'\n          disabled\n          control={<StyledRadio />}\n          label='(Disabled option)'\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport RadioButtonDefault from './RadioButtonDefault';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport RadioButtonDefaultSource from '!raw-loader!./RadioButtonDefault';\nimport StandaloneRadioButtons from './StandaloneRadioButtons';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport StandaloneRadioButtonsSource from '!raw-loader!./StandaloneRadioButtons';\nimport LabelPlacement from './LabelPlacement';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LabelPlacementSource from '!raw-loader!./LabelPlacement';\nimport CustomizedRadios from './CustomizedRadios';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedRadiosSource from '!raw-loader!./CustomizedRadios';\n\nconst RadioButtons = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Radio buttons'\n        description='Radio buttons allow the user to select one option from a set.'\n        refUrl='https://material-ui.com/components/radio-buttons/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Radio Buttons'\n            component={RadioButtonDefault}\n            source={RadioButtonDefaultSource}\n            description='Radio buttons should have the most commonly used option selected by default..'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized radios'\n            component={CustomizedRadios}\n            source={CustomizedRadiosSource}\n            description='Radio buttons should have the most commonly used option selected by default..'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Label placement'\n            component={LabelPlacement}\n            source={LabelPlacementSource}\n            description='You can change the placement of the label'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Standalone Radio Buttons'\n            component={StandaloneRadioButtons}\n            source={StandaloneRadioButtonsSource}\n            description='Radio can also be used standalone, without the wrapper.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default RadioButtons;\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    '&:hover': {\\n      backgroundColor: 'transparent',\\n    },\\n  },\\n  icon: {\\n    borderRadius: '50%',\\n    width: 16,\\n    height: 16,\\n    boxShadow:\\n      'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\\n    backgroundColor: '#f5f8fa',\\n    backgroundImage:\\n      'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\\n    '$root.Mui-focusVisible &': {\\n      outline: '2px auto rgba(19,124,189,.6)',\\n      outlineOffset: 2,\\n    },\\n    'input:hover ~ &': {\\n      backgroundColor: '#ebf1f5',\\n    },\\n    'input:disabled ~ &': {\\n      boxShadow: 'none',\\n      background: 'rgba(206,217,224,.5)',\\n    },\\n  },\\n  checkedIcon: {\\n    backgroundColor: '#137cbd',\\n    backgroundImage:\\n      'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\\n    '&:before': {\\n      display: 'block',\\n      width: 16,\\n      height: 16,\\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\\n      content: '\\\"\\\"',\\n    },\\n    'input:hover ~ &': {\\n      backgroundColor: '#106ba3',\\n    },\\n  },\\n});\\n\\n// Inspired by blueprintjs\\nfunction StyledRadio(props) {\\n  const classes = useStyles();\\n\\n  return (\\n    <Radio\\n      className={classes.root}\\n      disableRipple\\n      color='default'\\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\\n      icon={<span className={classes.icon} />}\\n      {...props}\\n    />\\n  );\\n}\\n\\nexport default function CustomizedRadios() {\\n  return (\\n    <FormControl component='fieldset'>\\n      <FormLabel component='legend'>Gender</FormLabel>\\n      <RadioGroup\\n        defaultValue='female'\\n        aria-label='gender'\\n        name='customized-radios'>\\n        <FormControlLabel\\n          value='female'\\n          control={<StyledRadio />}\\n          label='Female'\\n        />\\n        <FormControlLabel value='male' control={<StyledRadio />} label='Male' />\\n        <FormControlLabel\\n          value='other'\\n          control={<StyledRadio />}\\n          label='Other'\\n        />\\n        <FormControlLabel\\n          value='disabled'\\n          disabled\\n          control={<StyledRadio />}\\n          label='(Disabled option)'\\n        />\\n      </RadioGroup>\\n    </FormControl>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport {green} from '@material-ui/core/colors';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\\n\\nconst GreenRadio = withStyles({\\n  root: {\\n    color: green[400],\\n    '&$checked': {\\n      color: green[600],\\n    },\\n  },\\n  checked: {},\\n})((props) => <Radio color='default' {...props} />);\\n\\nexport default function RadioButtons() {\\n  const [selectedValue, setSelectedValue] = React.useState('a');\\n\\n  function handleChange(event) {\\n    setSelectedValue(event.target.value);\\n  }\\n\\n  return (\\n    <div>\\n      <Radio\\n        checked={selectedValue === 'a'}\\n        onChange={handleChange}\\n        value='a'\\n        name='radio-button-demo'\\n        inputProps={{'aria-label': 'A'}}\\n      />\\n      <Radio\\n        checked={selectedValue === 'b'}\\n        onChange={handleChange}\\n        value='b'\\n        name='radio-button-demo'\\n        inputProps={{'aria-label': 'B'}}\\n      />\\n      <GreenRadio\\n        checked={selectedValue === 'c'}\\n        onChange={handleChange}\\n        value='c'\\n        name='radio-button-demo'\\n        inputProps={{'aria-label': 'C'}}\\n      />\\n      <Radio\\n        checked={selectedValue === 'd'}\\n        onChange={handleChange}\\n        value='d'\\n        color='default'\\n        name='radio-button-demo'\\n        inputProps={{'aria-label': 'D'}}\\n      />\\n      <Radio\\n        checked={selectedValue === 'e'}\\n        onChange={handleChange}\\n        value='e'\\n        color='default'\\n        name='radio-button-demo'\\n        inputProps={{'aria-label': 'E'}}\\n        icon={<RadioButtonUncheckedIcon fontSize='small' />}\\n        checkedIcon={<RadioButtonCheckedIcon fontSize='small' />}\\n      />\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}