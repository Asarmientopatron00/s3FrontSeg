{"version":3,"sources":["modules/muiComponents/inputs/TextFields/SimpleTextField.js","webpack:///./src/modules/muiComponents/inputs/TextFields/SimpleTextField.js?056e","modules/muiComponents/inputs/TextFields/OutlinedTextFields.js","webpack:///./src/modules/muiComponents/inputs/TextFields/OutlinedTextFields.js?8bed","modules/muiComponents/inputs/TextFields/FilledTextField.js","webpack:///./src/modules/muiComponents/inputs/TextFields/FilledTextField.js?5203","modules/muiComponents/inputs/TextFields/ComponentsTextField.js","webpack:///./src/modules/muiComponents/inputs/TextFields/ComponentsTextField.js?c624","modules/muiComponents/inputs/TextFields/InputsTextField.js","webpack:///./src/modules/muiComponents/inputs/TextFields/InputsTextField.js?b271","modules/muiComponents/inputs/TextFields/CustomizedInputs.js","webpack:///./src/modules/muiComponents/inputs/TextFields/CustomizedInputs.js?9947","modules/muiComponents/inputs/TextFields/Customization.js","webpack:///./src/modules/muiComponents/inputs/TextFields/Customization.js?3c34","modules/muiComponents/inputs/TextFields/InputAdornments.js","webpack:///./src/modules/muiComponents/inputs/TextFields/InputAdornments.js?3819","modules/muiComponents/inputs/TextFields/WithIcon.js","webpack:///./src/modules/muiComponents/inputs/TextFields/WithIcon.js?10c3","modules/muiComponents/inputs/TextFields/FilledInputAdornments.js","webpack:///./src/modules/muiComponents/inputs/TextFields/FilledInputAdornments.js?8d4d","modules/muiComponents/inputs/TextFields/OutlinedInputAdornments.js","webpack:///./src/modules/muiComponents/inputs/TextFields/OutlinedInputAdornments.js?e134","modules/muiComponents/inputs/TextFields/ThirdpartyLib.js","modules/muiComponents/inputs/TextFields/index.js","webpack:///./src/modules/muiComponents/inputs/TextFields/ThirdpartyLib.js?1f93"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","currencies","value","label","TextFields","classes","React","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","className","noValidate","autoComplete","TextField","id","onChange","margin","defaultValue","required","error","disabled","type","InputProps","readOnly","clsx","rowsMax","rows","helperText","placeholder","InputLabelProps","shrink","select","SelectProps","MenuProps","map","option","MenuItem","key","native","style","fullWidth","inputProps","OutlinedTextFields","variant","FilledTextFields","hiddenLabel","formControl","ComposedTextField","labelWidth","setLabelWidth","setName","labelRef","useRef","useEffect","current","offsetWidth","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","ref","OutlinedInput","FilledInput","input","Inputs","CssTextField","withStyles","root","color","borderBottomColor","borderColor","BootstrapInput","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","fade","primary","main","InputBase","useStylesReddit","overflow","focused","RedditTextField","props","disableUnderline","ValidationTextField","borderWidth","borderLeftWidth","createMuiTheme","green","CustomizedInputs","ThemeProvider","alignItems","flex","iconButton","divider","height","CustomizedInputBase","Paper","IconButton","aria-label","Divider","orientation","ranges","withoutLabel","flexBasis","InputAdornments","amount","password","weight","weightRange","showPassword","prop","startAdornment","InputAdornment","endAdornment","onClick","onMouseDown","preventDefault","InputWithIcon","Grid","item","FilledInputAdornments","edge","OutlinedInputAdornments","TextMaskCustom","inputRef","other","inputElement","mask","placeholderChar","showMask","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","prefix","FormattedInputs","textmask","numberformat","inputComponent","ComponentHeader","title","description","refUrl","GridContainer","xs","ComponentCard","component","SimpleTextField","source","FilledTextField","ComponentsTextField","InputsTextField","lg","WithIcon","OutlinedInputAdornmentsSource","ThirdpartyLib","Customization"],"mappings":"6NAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,KAETC,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJH,MAAO,SAILI,EAAa,CACjB,CACEC,MAAO,MACPC,MAAO,KAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,SAII,SAASC,IACtB,IAAMC,EAAUlB,IADmB,EAEPmB,IAAMC,SAAS,CACzCC,KAAM,iBACNC,IAAK,GACLC,UAAW,aACXC,SAAU,QANuB,mBAE5BC,EAF4B,KAEpBC,EAFoB,KAS7BC,EAAe,SAACN,GAAD,OAAU,SAACO,GAC9BF,EAAU,2BAAID,GAAL,kBAAcJ,EAAOO,EAAMC,OAAOd,WAG7C,OACE,0BAAMe,UAAWZ,EAAQf,UAAW4B,YAAU,EAACC,aAAa,OAC1D,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHlB,MAAM,OACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOJ,KACdc,SAAUR,EAAa,QACvBS,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,wBACHlB,MAAM,eACNqB,aAAa,MACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEK,UAAQ,EACRJ,GAAG,oBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEM,OAAK,EACLL,GAAG,iBACHlB,MAAM,QACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEO,UAAQ,EACRN,GAAG,oBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,0BACHlB,MAAM,WACNc,UAAWZ,EAAQZ,UACnBmC,KAAK,WACLT,aAAa,mBACbI,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,2BACHlB,MAAM,YACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACPM,WAAY,CACVC,UAAU,KAGd,kBAACV,EAAA,EAAD,CACEC,GAAG,iBACHlB,MAAM,QACNc,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,UAET,kBAACH,EAAA,EAAD,CACEC,GAAG,8BACHlB,MAAM,YACNO,WAAS,EACTsB,QAAQ,IACR9B,MAAOU,EAAOF,UACdY,SAAUR,EAAa,aACvBG,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,4BACHlB,MAAM,YACNO,WAAS,EACTuB,KAAK,IACLT,aAAa,gBACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,sBACHlB,MAAM,cACNqB,aAAa,gBACbP,UAAWZ,EAAQZ,UACnByC,WAAW,sBACXX,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,4BACHlB,MAAM,mBACNgC,YAAY,cACZlB,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,oBACHlB,MAAM,6BACNgC,YAAY,cACZzB,WAAS,EACTO,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,kBACHlB,MAAM,SACND,MAAOU,EAAOH,IACda,SAAUR,EAAa,OACvBc,KAAK,SACLX,UAAWZ,EAAQZ,UACnB2C,gBAAiB,CACfC,QAAQ,GAEVd,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,kBACHlB,MAAM,eACNyB,KAAK,SACLX,UAAWZ,EAAQZ,UACnB8B,OAAO,WAET,kBAACH,EAAA,EAAD,CACEC,GAAG,2BACHiB,QAAM,EACNnC,MAAM,SACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXC,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,UACNtB,EAAWwC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,kCACHiB,QAAM,EACNnC,MAAM,gBACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXM,QAAQ,EACRL,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,UACNtB,EAAWwC,KAAI,SAACC,GAAD,OACd,4BAAQE,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACtCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,sBACHlB,MAAM,QACN2C,MAAO,CAACvB,OAAQ,GAChBY,YAAY,cACZD,WAAW,cACXa,WAAS,EACTxB,OAAO,SACPa,gBAAiB,CACfC,QAAQ,KAGZ,kBAACjB,EAAA,EAAD,CACEC,GAAG,gBACHJ,UAAWZ,EAAQZ,UACnB+B,aAAa,OACbD,OAAO,SACPyB,WAAY,CAAC,aAAc,WChPpB,ICMT/C,EAAa,CACjB,CACEC,MAAO,MACPC,MAAO,KAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,SAILhB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,IAE7BG,MAAO,CACLC,UAAWV,EAAMM,QAAQ,IAE3BK,KAAM,CACJH,MAAO,SAII,SAASoD,IACtB,IAAM5C,EAAUlB,IAD2B,EAEfmB,IAAMC,SAAS,CACzCC,KAAM,iBACNC,IAAK,GACLC,UAAW,aACXC,SAAU,QAN+B,mBAEpCC,EAFoC,KAE5BC,EAF4B,KASrCC,EAAe,SAACN,GAAD,OAAU,SAACO,GAC9BF,EAAU,2BAAID,GAAL,kBAAcJ,EAAOO,EAAMC,OAAOd,WAG7C,OACE,0BAAMe,UAAWZ,EAAQf,UAAW4B,YAAU,EAACC,aAAa,OAC1D,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHlB,MAAM,OACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOJ,KACdc,SAAUR,EAAa,QACvBS,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,wBACHlB,MAAM,eACNqB,aAAa,MACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEK,UAAQ,EACRJ,GAAG,oBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEM,OAAK,EACLL,GAAG,iBACHlB,MAAM,QACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEO,UAAQ,EACRN,GAAG,oBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,uBACHlB,MAAM,QACNc,UAAWZ,EAAQZ,UACnBmC,KAAK,QACLpB,KAAK,QACLW,aAAa,QACbI,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,0BACHlB,MAAM,WACNc,UAAWZ,EAAQZ,UACnBmC,KAAK,WACLT,aAAa,mBACbI,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,2BACHlB,MAAM,YACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACPM,WAAY,CACVC,UAAU,GAEZoB,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,iBACHlB,MAAM,QACNc,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,QACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,2BACHlB,MAAM,kBACNc,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,QACP2B,QAAQ,WACRxC,WAAS,EACTsB,QAAQ,MAEV,kBAACZ,EAAA,EAAD,CACEC,GAAG,8BACHlB,MAAM,YACNO,WAAS,EACTsB,QAAQ,IACR9B,MAAOU,EAAOF,UACdY,SAAUR,EAAa,aACvBG,UAAWZ,EAAQZ,UACnB8B,OAAO,SACPW,WAAW,QACXgB,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,4BACHlB,MAAM,YACNO,WAAS,EACTuB,KAAK,IACLT,aAAa,gBACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,sBACHlB,MAAM,cACNqB,aAAa,gBACbP,UAAWZ,EAAQZ,UACnByC,WAAW,sBACXX,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,4BACHlB,MAAM,mBACNgC,YAAY,cACZlB,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,oBACHlB,MAAM,wBACNgC,YAAY,cACZzB,WAAS,EACTO,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,kBACHlB,MAAM,SACND,MAAOU,EAAOH,IACda,SAAUR,EAAa,OACvBc,KAAK,SACLX,UAAWZ,EAAQZ,UACnB2C,gBAAiB,CACfC,QAAQ,GAEVd,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,kBACHlB,MAAM,eACNyB,KAAK,SACLX,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,aAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,2BACHiB,QAAM,EACNnC,MAAM,SACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXC,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,SACP2B,QAAQ,YACPjD,EAAWwC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,kCACHiB,QAAM,EACNnC,MAAM,gBACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXM,QAAQ,EACRL,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,SACP2B,QAAQ,YACPjD,EAAWwC,KAAI,SAACC,GAAD,OACd,4BAAQE,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACtCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,sBACHlB,MAAM,QACN2C,MAAO,CAACvB,OAAQ,GAChBY,YAAY,cACZD,WAAW,cACXa,WAAS,EACTxB,OAAO,SACP2B,QAAQ,WACRd,gBAAiB,CACfC,QAAQ,KAGZ,kBAACjB,EAAA,EAAD,CACEC,GAAG,gBACHJ,UAAWZ,EAAQZ,UACnB+B,aAAa,OACbD,OAAO,SACP2B,QAAQ,WACRF,WAAY,CAAC,aAAc,WCtRpB,ICMT/C,EAAa,CACjB,CACEC,MAAO,MACPC,MAAO,KAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,SAILhB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,IAE7BG,MAAO,CACLC,UAAWV,EAAMM,QAAQ,IAE3BK,KAAM,CACJH,MAAO,SAII,SAASsD,IACtB,IAAM9C,EAAUlB,IADyB,EAEbmB,IAAMC,SAAS,CACzCC,KAAM,iBACNC,IAAK,GACLC,UAAW,aACXC,SAAU,QAN6B,mBAElCC,EAFkC,KAE1BC,EAF0B,KASnCC,EAAe,SAACN,GAAD,OAAU,SAACO,GAC9BF,EAAU,2BAAID,GAAL,kBAAcJ,EAAOO,EAAMC,OAAOd,WAG7C,OACE,0BAAMe,UAAWZ,EAAQf,UAAW4B,YAAU,EAACC,aAAa,OAC1D,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHlB,MAAM,OACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOJ,KACdc,SAAUR,EAAa,QACvBS,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,sBACHlB,MAAM,eACNqB,aAAa,MACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEK,UAAQ,EACRJ,GAAG,kBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEM,OAAK,EACLL,GAAG,eACHlB,MAAM,QACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEO,UAAQ,EACRN,GAAG,kBACHlB,MAAM,WACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,qBACHlB,MAAM,QACNc,UAAWZ,EAAQZ,UACnBmC,KAAK,QACLpB,KAAK,QACLW,aAAa,QACbI,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,wBACHlB,MAAM,WACNc,UAAWZ,EAAQZ,UACnBmC,KAAK,WACLT,aAAa,mBACbI,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,yBACHlB,MAAM,YACNqB,aAAa,cACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACPM,WAAY,CACVC,UAAU,GAEZoB,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,sBACHJ,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CsD,aAAW,EACXF,QAAQ,SACRf,YAAY,eACZa,WAAY,CAAC,aAAc,kBAE7B,kBAAC5B,EAAA,EAAD,CACEC,GAAG,eACHlB,MAAM,QACNc,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,QACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,4BACHJ,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,QACP6B,aAAW,EACXF,QAAQ,SACRf,YAAY,qBACZa,WAAY,CAAC,aAAc,wBAE7B,kBAAC5B,EAAA,EAAD,CACEC,GAAG,yBACHlB,MAAM,kBACNc,UAAWc,kBAAK1B,EAAQZ,UAAWY,EAAQP,OAC3CyB,OAAO,QACP2B,QAAQ,SACRxC,WAAS,EACTsB,QAAQ,MAEV,kBAACZ,EAAA,EAAD,CACEC,GAAG,4BACHlB,MAAM,YACNO,WAAS,EACTsB,QAAQ,IACR9B,MAAOU,EAAOF,UACdY,SAAUR,EAAa,aACvBG,UAAWZ,EAAQZ,UACnB8B,OAAO,SACPW,WAAW,QACXgB,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,0BACHlB,MAAM,YACNO,WAAS,EACTuB,KAAK,IACLT,aAAa,gBACbP,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,oBACHlB,MAAM,cACNqB,aAAa,gBACbP,UAAWZ,EAAQZ,UACnByC,WAAW,sBACXX,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,0BACHlB,MAAM,mBACNgC,YAAY,cACZlB,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,kBACHlB,MAAM,wBACNgC,YAAY,cACZzB,WAAS,EACTO,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,gBACHlB,MAAM,SACND,MAAOU,EAAOH,IACda,SAAUR,EAAa,OACvBc,KAAK,SACLX,UAAWZ,EAAQZ,UACnB2C,gBAAiB,CACfC,QAAQ,GAEVd,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,gBACHlB,MAAM,eACNyB,KAAK,SACLX,UAAWZ,EAAQZ,UACnB8B,OAAO,SACP2B,QAAQ,WAEV,kBAAC9B,EAAA,EAAD,CACEC,GAAG,yBACHiB,QAAM,EACNnC,MAAM,SACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXC,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,SACP2B,QAAQ,UACPjD,EAAWwC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,gCACHiB,QAAM,EACNnC,MAAM,gBACNc,UAAWZ,EAAQZ,UACnBS,MAAOU,EAAOD,SACdW,SAAUR,EAAa,YACvByB,YAAa,CACXM,QAAQ,EACRL,UAAW,CACTvB,UAAWZ,EAAQL,OAGvBkC,WAAW,8BACXX,OAAO,SACP2B,QAAQ,UACPjD,EAAWwC,KAAI,SAACC,GAAD,OACd,4BAAQE,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACtCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,oBACHlB,MAAM,QACN2C,MAAO,CAACvB,OAAQ,GAChBY,YAAY,cACZD,WAAW,cACXa,WAAS,EACTxB,OAAO,SACP2B,QAAQ,SACRd,gBAAiB,CACfC,QAAQ,KAGZ,kBAACjB,EAAA,EAAD,CACEC,GAAG,cACHJ,UAAWZ,EAAQZ,UACnB+B,aAAa,OACbD,OAAO,SACP2B,QAAQ,SACRF,WAAY,CAAC,aAAc,WCvSpB,I,4DCST7D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZ6D,YAAa,CACX9B,OAAQlC,EAAMM,QAAQ,QAIX,SAAS2D,IAAqB,IAAD,EACNhD,IAAMC,SAAS,GADT,mBACnCgD,EADmC,KACvBC,EADuB,OAElBlD,IAAMC,SAAS,sBAFG,mBAEnCC,EAFmC,KAE7BiD,EAF6B,KAGpCC,EAAWpD,IAAMqD,OAAO,MACxBtD,EAAUlB,IAMhB,SAAS2B,EAAaC,GACpB0C,EAAQ1C,EAAMC,OAAOd,OAGvB,OARAI,IAAMsD,WAAU,WACdJ,EAAcE,EAASG,QAAQC,eAC9B,IAOD,yBAAK7C,UAAWZ,EAAQf,WACtB,kBAACyE,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,aAC9B,kBAACW,EAAA,EAAD,CAAYC,QAAQ,oBAApB,QACA,kBAACC,EAAA,EAAD,CAAO7C,GAAG,mBAAmBnB,MAAOM,EAAMc,SAAUR,KAEtD,kBAACiD,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,aAC9B,kBAACW,EAAA,EAAD,CAAYC,QAAQ,oBAApB,QACA,kBAACC,EAAA,EAAD,CACE7C,GAAG,mBACHnB,MAAOM,EACPc,SAAUR,EACVqD,mBAAiB,0BAEnB,kBAACC,EAAA,EAAD,CAAgB/C,GAAG,yBAAnB,+BAIF,kBAAC0C,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,YAAa1B,UAAQ,GACnD,kBAACqC,EAAA,EAAD,CAAYC,QAAQ,sBAApB,QACA,kBAACC,EAAA,EAAD,CAAO7C,GAAG,qBAAqBnB,MAAOM,EAAMc,SAAUR,IACtD,kBAACsD,EAAA,EAAD,kBAEF,kBAACL,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,YAAa3B,OAAK,GAChD,kBAACsC,EAAA,EAAD,CAAYC,QAAQ,mBAApB,QACA,kBAACC,EAAA,EAAD,CACE7C,GAAG,kBACHnB,MAAOM,EACPc,SAAUR,EACVqD,mBAAiB,yBAEnB,kBAACC,EAAA,EAAD,CAAgB/C,GAAG,wBAAnB,UAEF,kBAAC0C,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,YAAaH,QAAQ,YACnD,kBAACc,EAAA,EAAD,CAAYK,IAAKX,EAAUO,QAAQ,sBAAnC,QAGA,kBAACK,EAAA,EAAD,CACEjD,GAAG,qBACHnB,MAAOM,EACPc,SAAUR,EACVyC,WAAYA,KAGhB,kBAACQ,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,YAAaH,QAAQ,UACnD,kBAACc,EAAA,EAAD,CAAYC,QAAQ,oBAApB,QACA,kBAACM,EAAA,EAAD,CACElD,GAAG,mBACHnB,MAAOM,EACPc,SAAUR,MClFL,ICIT3B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZgF,MAAO,CACLjD,OAAQlC,EAAMM,QAAQ,QAIX,SAAS8E,IACtB,IAAMpE,EAAUlB,IAEhB,OACE,yBAAK8B,UAAWZ,EAAQf,WACtB,kBAAC4E,EAAA,EAAD,CACE1C,aAAa,cACbP,UAAWZ,EAAQmE,MACnBxB,WAAY,CACV,aAAc,iBAGlB,kBAACkB,EAAA,EAAD,CACE/B,YAAY,cACZlB,UAAWZ,EAAQmE,MACnBxB,WAAY,CACV,aAAc,iBAGlB,kBAACkB,EAAA,EAAD,CACEhE,MAAM,WACNe,UAAWZ,EAAQmE,MACnB7C,UAAQ,EACRqB,WAAY,CACV,aAAc,iBAGlB,kBAACkB,EAAA,EAAD,CACE1C,aAAa,QACbP,UAAWZ,EAAQmE,MACnB9C,OAAK,EACLsB,WAAY,CACV,aAAc,kBC9CT,I,sDCcT0B,EAAeC,YAAW,CAC9BC,KAAM,CACJ,sBAAuB,CACrBC,MAAO,SAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,OAEf,mBAAoB,CAClBA,YAAa,UAEf,yBAA0B,CACxBA,YAAa,YAhBAJ,CAoBlBvD,KAEG4D,EAAiBL,aAAW,SAACtF,GAAD,MAAY,CAC5CuF,KAAM,CACJ,YAAa,CACX7E,UAAWV,EAAMM,QAAQ,KAG7B6E,MAAO,CACLS,aAAc,EACdC,SAAU,WACVC,gBAAiB9F,EAAM+F,QAAQC,OAAOC,MACtCC,OAAQ,oBACRC,SAAU,GACV3F,MAAO,OACP4F,QAAS,YACTC,WAAYrG,EAAMsG,YAAYC,OAAO,CAAC,eAAgB,eAEtDC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTC,UAAU,GAAD,OAAKC,YAAK3G,EAAM+F,QAAQa,QAAQC,KAAM,KAAtC,iBACTnB,YAAa1F,EAAM+F,QAAQa,QAAQC,UA9BlBvB,CAiCnBwB,KAEEC,EAAkBhH,aAAW,SAACC,GAAD,MAAY,CAC7CuF,KAAM,CACJW,OAAQ,oBACRc,SAAU,SACVpB,aAAc,EACdE,gBAAiB,UACjBO,WAAYrG,EAAMsG,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTT,gBAAiB,QAEnB,YAAa,CACXA,gBAAiB,OACjBY,UAAU,GAAD,OAAKC,YAAK3G,EAAM+F,QAAQa,QAAQC,KAAM,KAAtC,cACTnB,YAAa1F,EAAM+F,QAAQa,QAAQC,OAGvCI,QAAS,OAGX,SAASC,EAAgBC,GACvB,IAAMnG,EAAU+F,IAEhB,OACE,kBAAChF,EAAA,EAAD,eAAWS,WAAY,CAACxB,UAASoG,kBAAkB,IAAWD,IAIlE,IAAMrH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuF,KAAM,CACJrF,QAAS,OACTC,SAAU,QAEZ+B,OAAQ,CACNA,OAAQlC,EAAMM,QAAQ,QAIpB+G,EAAsB/B,YAAW,CACrCC,KAAM,CACJ,2BAA4B,CAC1BG,YAAa,QACb4B,YAAa,GAEf,6BAA8B,CAC5B5B,YAAa,MACb4B,YAAa,GAEf,iCAAkC,CAChCC,gBAAiB,EACjBnB,QAAS,oBAZad,CAezBvD,KAEG/B,EAAQwH,YAAe,CAC3BzB,QAAS,CACPa,QAASa,OAIE,SAASC,IACtB,IAAM1G,EAAUlB,IAEhB,OACE,0BAAM8B,UAAWZ,EAAQuE,KAAM1D,YAAU,GACvC,kBAACwD,EAAD,CACEzD,UAAWZ,EAAQkB,OACnBF,GAAG,4BACHlB,MAAM,eAER,kBAACuE,EAAD,CACEzD,UAAWZ,EAAQkB,OACnBpB,MAAM,aACN+C,QAAQ,WACR7B,GAAG,+BAEL,kBAAC2F,EAAA,EAAD,CAAe3H,MAAOA,GACpB,kBAAC+B,EAAA,EAAD,CACEH,UAAWZ,EAAQkB,OACnBpB,MAAM,gBACNkB,GAAG,sCAEL,kBAACD,EAAA,EAAD,CACEH,UAAWZ,EAAQkB,OACnBpB,MAAM,gBACN+C,QAAQ,WACR7B,GAAG,uCAGP,kBAAC0C,EAAA,EAAD,CAAa9C,UAAWZ,EAAQkB,QAC9B,kBAACyC,EAAA,EAAD,CAAY3B,QAAM,EAAC4B,QAAQ,mBAA3B,aAGA,kBAACe,EAAD,CAAgBxD,aAAa,kBAAkBH,GAAG,qBAEpD,kBAACkF,EAAD,CACEpG,MAAM,SACNc,UAAWZ,EAAQkB,OACnBC,aAAa,eACb0B,QAAQ,SACR7B,GAAG,iBAEL,kBAAC8E,EAAA,EAAD,CACElF,UAAWZ,EAAQkB,OACnBC,aAAa,cACbwB,WAAY,CAAC,aAAc,WAE7B,kBAAC0D,EAAD,CACEzF,UAAWZ,EAAQkB,OACnBpB,MAAM,uBACNsB,UAAQ,EACRyB,QAAQ,WACR1B,aAAa,UACbH,GAAG,+BCxLI,I,wFCUTlC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuF,KAAM,CACJa,QAAS,UACTlG,QAAS,OACT0H,WAAY,SACZpH,MAAO,KAET2E,MAAO,CACL9E,WAAYL,EAAMM,QAAQ,GAC1BuH,KAAM,GAERC,WAAY,CACV1B,QAAS,IAEX2B,QAAS,CACPC,OAAQ,GACR9F,OAAQ,OAIG,SAAS+F,KACtB,IAAMjH,EAAUlB,KAEhB,OACE,kBAACoI,EAAA,EAAD,CAAOtG,UAAWZ,EAAQuE,MACxB,kBAAC4C,EAAA,EAAD,CAAYvG,UAAWZ,EAAQ8G,WAAYM,aAAW,QACpD,kBAAC,IAAD,OAEF,kBAACtB,EAAA,EAAD,CACElF,UAAWZ,EAAQmE,MACnBrC,YAAY,qBACZa,WAAY,CAAC,aAAc,wBAE7B,kBAACwE,EAAA,EAAD,CAAYvG,UAAWZ,EAAQ8G,WAAYM,aAAW,UACpD,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAASzG,UAAWZ,EAAQ+G,QAASO,YAAY,aACjD,kBAACH,EAAA,EAAD,CACE3C,MAAM,UACN5D,UAAWZ,EAAQ8G,WACnBM,aAAW,cACX,kBAAC,KAAD,QCnDO,I,uDCcTG,GAAS,CACb,CACE1H,MAAO,OACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,YAET,CACED,MAAO,SACPC,MAAO,cAILhB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuF,KAAM,CACJrF,QAAS,OACTC,SAAU,QAEZ+B,OAAQ,CACNA,OAAQlC,EAAMM,QAAQ,IAExBkI,aAAc,CACZ9H,UAAWV,EAAMM,QAAQ,IAE3BF,UAAW,CACTqI,UAAW,SAIA,SAASC,KACtB,IAAM1H,EAAUlB,KADwB,EAEZmB,IAAMC,SAAS,CACzCyH,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,IAPwB,mBAEjCxH,EAFiC,KAEzBC,EAFyB,KAUlCC,EAAe,SAACuH,GAAD,OAAU,SAACtH,GAC9BF,EAAU,2BAAID,GAAL,kBAAcyH,EAAOtH,EAAMC,OAAOd,WAW7C,OACE,yBAAKe,UAAWZ,EAAQuE,MACtB,kBAACxD,EAAA,EAAD,CACEjB,MAAM,wBACNkB,GAAG,yBACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCoC,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,SAGpB,kBAAC9D,EAAA,EAAD,CACEkB,QAAM,EACNnC,MAAM,cACNc,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCS,MAAOU,EAAOuH,YACd7G,SAAUR,EAAa,eACvBe,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAEjB0C,GAAOnF,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAAC4D,EAAA,EAAD,CAAahB,WAAS,EAAC9B,UAAWZ,EAAQkB,QACxC,kBAACyC,EAAA,EAAD,CAAYC,QAAQ,oBAApB,UACA,kBAACC,EAAA,EAAD,CACE7C,GAAG,mBACHnB,MAAOU,EAAOoH,OACd1G,SAAUR,EAAa,UACvBwH,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAGpB,kBAACnB,EAAA,EAAD,CACE9C,UAAWc,kBACT1B,EAAQkB,OACRlB,EAAQwH,aACRxH,EAAQZ,YAEV,kBAACyE,EAAA,EAAD,CACE7C,GAAG,mBACHnB,MAAOU,EAAOsH,OACd5G,SAAUR,EAAa,UACvB0H,aAAc,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OAAzB,MACdf,mBAAiB,qBACjBnB,WAAY,CACV,aAAc,YAGlB,kBAACoB,EAAA,EAAD,CAAgB/C,GAAG,sBAAnB,WAEF,kBAAC0C,EAAA,EAAD,CAAa9C,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,YACnD,kBAACuE,EAAA,EAAD,CAAYC,QAAQ,sBAApB,YACA,kBAACC,EAAA,EAAD,CACE7C,GAAG,qBACHO,KAAMhB,EAAOwH,aAAe,OAAS,WACrClI,MAAOU,EAAOqH,SACd3G,SAAUR,EAAa,YACvB0H,aACE,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OACvB,kBAACsC,EAAA,EAAD,CACEC,aAAW,6BACXgB,QAvEkB,WAC9B5H,EAAU,2BAAID,GAAL,IAAawH,cAAexH,EAAOwH,iBAuEhCM,YApEkB,SAAC3H,GAC/BA,EAAM4H,mBAoEO/H,EAAOwH,aAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,YCpIzC,I,sBCUTjJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkC,OAAQ,CACNA,OAAQlC,EAAMM,QAAQ,QAIX,SAASiJ,KACtB,IAAMvI,EAAUlB,KAEhB,OACE,6BACE,kBAAC4E,EAAA,EAAD,CAAa9C,UAAWZ,EAAQkB,QAC9B,kBAACyC,EAAA,EAAD,CAAYC,QAAQ,6BAApB,0BAGA,kBAACC,EAAA,EAAD,CACE7C,GAAG,4BACHiH,eACE,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SACvB,kBAAC,KAAD,UAKR,kBAAC9D,EAAA,EAAD,CACEH,UAAWZ,EAAQkB,OACnBF,GAAG,4BACHlB,MAAM,YACN0B,WAAY,CACVyG,eACE,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SACvB,kBAAC,KAAD,UAKR,yBAAKjE,UAAWZ,EAAQkB,QACtB,kBAACsH,EAAA,EAAD,CAAMvJ,WAAS,EAACK,QAAS,EAAGsH,WAAW,YACrC,kBAAC4B,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,KAAD,OAEF,kBAACD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC1H,EAAA,EAAD,CAAWC,GAAG,uBAAuBlB,MAAM,oBCpDxC,ICUTyH,GAAS,CACb,CACE1H,MAAO,OACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,YAET,CACED,MAAO,SACPC,MAAO,cAILhB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuF,KAAM,CACJrF,QAAS,OACTC,SAAU,QAEZ+B,OAAQ,CACNA,OAAQlC,EAAMM,QAAQ,IAExBF,UAAW,CACTqI,UAAW,SAIA,SAASiB,KACtB,IAAM1I,EAAUlB,KAD8B,EAElBmB,IAAMC,SAAS,CACzCyH,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,IAP8B,mBAEvCxH,EAFuC,KAE/BC,EAF+B,KAUxCC,EAAe,SAACuH,GAAD,OAAU,SAACtH,GAC9BF,EAAU,2BAAID,GAAL,kBAAcyH,EAAOtH,EAAMC,OAAOd,WAW7C,OACE,yBAAKe,UAAWZ,EAAQuE,MACtB,kBAACxD,EAAA,EAAD,CACEC,GAAG,gCACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR/C,MAAM,wBACN0B,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,SAGpB,kBAAC9D,EAAA,EAAD,CACEkB,QAAM,EACNrB,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR/C,MAAM,cACND,MAAOU,EAAOuH,YACd7G,SAAUR,EAAa,eACvBe,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAEjB0C,GAAOnF,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,0BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR/C,MAAM,SACND,MAAOU,EAAOoH,OACd1G,SAAUR,EAAa,UACvBe,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAGpB,kBAAC9D,EAAA,EAAD,CACEC,GAAG,0BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR/C,MAAM,SACND,MAAOU,EAAOsH,OACd5G,SAAUR,EAAa,UACvBoB,WAAW,SACXL,WAAY,CACV2G,aAAc,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OAAzB,SAGlB,kBAAC9D,EAAA,EAAD,CACEC,GAAG,4BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACRtB,KAAMhB,EAAOwH,aAAe,OAAS,WACrCjI,MAAM,WACND,MAAOU,EAAOqH,SACd3G,SAAUR,EAAa,YACvBe,WAAY,CACV2G,aACE,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OACvB,kBAACsC,EAAA,EAAD,CACEwB,KAAK,MACLvB,aAAW,6BACXgB,QAxEkB,WAC9B5H,EAAU,2BAAID,GAAL,IAAawH,cAAexH,EAAOwH,iBAwEhCM,YArEkB,SAAC3H,GAC/BA,EAAM4H,mBAqEO/H,EAAOwH,aAAe,kBAAC,KAAD,MAAoB,kBAAC,KAAD,WAMrD,kBAAChH,EAAA,EAAD,CACEC,GAAG,yBACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR3B,OAAO,QACPpB,MAAM,iBACN0B,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,aAGpB,kBAAC9D,EAAA,EAAD,CACEC,GAAG,+BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,SACR3B,OAAO,QACP6B,aAAW,EACXvB,WAAY,CACVmB,WAAY,CACV,aAAc,kBAEhBsF,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,cCxJX,ICUT0C,GAAS,CACb,CACE1H,MAAO,OACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,YAET,CACED,MAAO,SACPC,MAAO,cAILhB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuF,KAAM,CACJrF,QAAS,OACTC,SAAU,QAEZ+B,OAAQ,CACNA,OAAQlC,EAAMM,QAAQ,IAExBF,UAAW,CACTqI,UAAW,SAIA,SAASmB,KACtB,IAAM5I,EAAUlB,KADgC,EAEpBmB,IAAMC,SAAS,CACzCyH,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,IAPgC,mBAEzCxH,EAFyC,KAEjCC,EAFiC,KAU1CC,EAAe,SAACuH,GAAD,OAAU,SAACtH,GAC9BF,EAAU,2BAAID,GAAL,kBAAcyH,EAAOtH,EAAMC,OAAOd,WAW7C,OACE,yBAAKe,UAAWZ,EAAQuE,MACtB,kBAACxD,EAAA,EAAD,CACEC,GAAG,kCACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,WACR/C,MAAM,0BACN0B,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,SAGpB,kBAAC9D,EAAA,EAAD,CACEkB,QAAM,EACNrB,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,WACR/C,MAAM,cACND,MAAOU,EAAOuH,YACd7G,SAAUR,EAAa,eACvBe,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAEjB0C,GAAOnF,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOxC,MAAOA,MAAOwC,EAAOxC,OACxCwC,EAAOvC,WAId,kBAACiB,EAAA,EAAD,CACEC,GAAG,6BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,WACR/C,MAAM,SACND,MAAOU,EAAOoH,OACd1G,SAAUR,EAAa,UACvBe,WAAY,CACVyG,eAAgB,kBAACC,GAAA,EAAD,CAAgBrD,SAAS,SAAzB,QAGpB,kBAAC9D,EAAA,EAAD,CACEC,GAAG,6BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,WACR/C,MAAM,SACND,MAAOU,EAAOsH,OACd5G,SAAUR,EAAa,UACvBoB,WAAW,SACXL,WAAY,CACV2G,aAAc,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OAAzB,SAGlB,kBAAC9D,EAAA,EAAD,CACEC,GAAG,+BACHJ,UAAWc,kBAAK1B,EAAQkB,OAAQlB,EAAQZ,WACxCyD,QAAQ,WACRtB,KAAMhB,EAAOwH,aAAe,OAAS,WACrCjI,MAAM,WACND,MAAOU,EAAOqH,SACd3G,SAAUR,EAAa,YACvBe,WAAY,CACV2G,aACE,kBAACD,GAAA,EAAD,CAAgBrD,SAAS,OACvB,kBAACsC,EAAA,EAAD,CACEwB,KAAK,MACLvB,aAAW,6BACXgB,QAxEkB,WAC9B5H,EAAU,2BAAID,GAAL,IAAawH,cAAexH,EAAOwH,iBAwEhCM,YArEkB,SAAC3H,GAC/BA,EAAM4H,mBAqEO/H,EAAOwH,aAAe,kBAAC,KAAD,MAAoB,kBAAC,KAAD,YC9H5C,s0H,2CCUTjJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZ6D,YAAa,CACX9B,OAAQlC,EAAMM,QAAQ,QAI1B,SAASuJ,GAAe1C,GAAQ,IACvB2C,EAAsB3C,EAAtB2C,SAAaC,EADS,aACA5C,EADA,cAG7B,OACE,kBAAC,KAAD,iBACM4C,EADN,CAEE/E,IAAK,SAACA,GACJ8E,EAAS9E,EAAMA,EAAIgF,aAAe,OAEpCC,KAAM,CACJ,IACA,QACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,MAEFC,gBAAiB,SACjBC,UAAQ,KASd,SAASC,GAAmBjD,GAAQ,IAC3B2C,EAAgC3C,EAAhC2C,SAAU7H,EAAsBkF,EAAtBlF,SAAa8H,EADG,aACM5C,EADN,yBAGjC,OACE,kBAAC,KAAD,iBACM4C,EADN,CAEEM,YAAaP,EACbQ,cAAe,SAAC/I,GACdU,EAAS,CACPN,OAAQ,CACNd,MAAOU,EAAOV,UAIpB0J,mBAAiB,EACjBC,OAAO,OAUE,SAASC,KACtB,IAAMzJ,EAAUlB,KADwB,EAEZmB,IAAMC,SAAS,CACzCwJ,SAAU,8DACVC,aAAc,SAJwB,mBAEjCpJ,EAFiC,KAEzBC,EAFyB,KAOlCC,EAAe,SAACN,GAAD,OAAU,SAACO,GAC9BF,EAAU,2BACLD,GADI,kBAENJ,EAAOO,EAAMC,OAAOd,WAIzB,OACE,yBAAKe,UAAWZ,EAAQf,WACtB,kBAACyE,EAAA,EAAD,CAAa9C,UAAWZ,EAAQgD,aAC9B,kBAACW,EAAA,EAAD,CAAYC,QAAQ,6BAApB,mBAGA,kBAACC,EAAA,EAAD,CACEhE,MAAOU,EAAOmJ,SACdzI,SAAUR,EAAa,YACvBO,GAAG,4BACH4I,eAAgBf,MAGpB,kBAAC9H,EAAA,EAAD,CACEH,UAAWZ,EAAQgD,YACnBlD,MAAM,sBACND,MAAOU,EAAOoJ,aACd1I,SAAUR,EAAa,gBACvBO,GAAG,+BACHQ,WAAY,CACVoI,eAAgBR,OCyDXrJ,UApHI,WACjB,OACE,oCACE,kBAAC8J,EAAA,EAAD,CACEC,MAAM,cACNC,YAAY,6CACZC,OAAO,oDAGT,kBAACC,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,YACNM,UAAWC,EACXC,OtBrEG,miMsBsEHP,YAAY,wGAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,WACNM,UAAWxH,EACX0H,OpB7EG,2kOoB8EHP,YAAY,0CAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,SACNM,UAAWG,EACXD,OlBrFG,miPkBsFHP,YAAY,wCAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,aACNM,UAAWI,EACXF,OhB7FG,s/FgBgGP,kBAAC9B,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,SACNM,UAAWK,EACXH,OdpGG,qnCcqGHP,YAAY,wGAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,oBACNM,UAAW1D,EACX4D,OZ5GG,uuJY6GHP,YAAY,6HAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,GAAIQ,GAAI,GACrB,kBAACP,EAAA,EAAD,CACEL,MAAM,mBACNM,UAAW1C,GACX4C,ORpHG,wrIQqHHP,YAAY,mDAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,GAAIQ,GAAI,GACrB,kBAACP,EAAA,EAAD,CACEL,MAAM,YACNM,UAAWO,GACXL,ON5HG,6sDM6HHP,YAAY,qDAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,0BACNM,UAAW1B,GACX4B,OJpIG,wgJIuIP,kBAAC9B,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,4BACNM,UAAWxB,GACX0B,OAAQM,GACRb,YAAY,qDAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,IACb,kBAACC,EAAA,EAAD,CACEL,MAAM,SACNM,UAAWxB,GACX0B,OAAQM,GACRb,YAAY,8PAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,GAAIQ,GAAI,GACrB,kBAACP,EAAA,EAAD,CACEL,MAAM,6CACNM,UAAWS,GACXP,OC3JG,wxFD4JHP,YAAY,qDAGhB,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyB,GAAI,GAAIQ,GAAI,GACrB,kBAACP,EAAA,EAAD,CACEL,MAAM,gBACNM,UAAWU,GACXR,OVnKG","file":"static/js/147.0f9c39ad.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='standard-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n      />\n      <TextField\n        id='standard-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        required\n        id='standard-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        error\n        id='standard-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        disabled\n        id='standard-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n      />\n      <TextField\n        id='standard-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id='standard-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n      />\n      <TextField\n        id='standard-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n      />\n      <TextField\n        id='standard-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-textarea'\n        label='With placeholder multiline'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n      />\n      <TextField\n        id='standard-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n      />\n      <TextField\n        id='standard-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='standard-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='standard-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='standard-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n  dense: {\\n    marginTop: 19,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '€',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '฿',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '¥',\\n  },\\n];\\n\\nexport default function TextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setValues({...values, [name]: event.target.value});\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete='off'>\\n      <TextField\\n        id='standard-name'\\n        label='Name'\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-uncontrolled'\\n        label='Uncontrolled'\\n        defaultValue='foo'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        required\\n        id='standard-required'\\n        label='Required'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        error\\n        id='standard-error'\\n        label='Error'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        disabled\\n        id='standard-disabled'\\n        label='Disabled'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-password-input'\\n        label='Password'\\n        className={classes.textField}\\n        type='password'\\n        autoComplete='current-password'\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-read-only-input'\\n        label='Read Only'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n      />\\n      <TextField\\n        id='standard-dense'\\n        label='Dense'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n      />\\n      <TextField\\n        id='standard-multiline-flexible'\\n        label='Multiline'\\n        multiline\\n        rowsMax='4'\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-multiline-static'\\n        label='Multiline'\\n        multiline\\n        rows='4'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-helperText'\\n        label='Helper text'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        helperText='Some important text'\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-with-placeholder'\\n        label='With placeholder'\\n        placeholder='Placeholder'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-textarea'\\n        label='With placeholder multiline'\\n        placeholder='Placeholder'\\n        multiline\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-number'\\n        label='Number'\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type='number'\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-search'\\n        label='Search field'\\n        type='search'\\n        className={classes.textField}\\n        margin='normal'\\n      />\\n      <TextField\\n        id='standard-select-currency'\\n        select\\n        label='Select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'>\\n        {currencies.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='standard-select-currency-native'\\n        select\\n        label='Native select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'>\\n        {currencies.map((option) => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='standard-full-width'\\n        label='Label'\\n        style={{margin: 8}}\\n        placeholder='Placeholder'\\n        helperText='Full width!'\\n        fullWidth\\n        margin='normal'\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id='standard-bare'\\n        className={classes.textField}\\n        defaultValue='Bare'\\n        margin='normal'\\n        inputProps={{'aria-label': 'bare'}}\\n      />\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='outlined-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        required\n        id='outlined-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        error\n        id='outlined-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        disabled\n        id='outlined-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-email-input'\n        label='Email'\n        className={classes.textField}\n        type='email'\n        name='email'\n        autoComplete='email'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-dense-multiline'\n        label='Dense multiline'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='outlined'\n        multiline\n        rowsMax='4'\n      />\n      <TextField\n        id='outlined-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n        helperText='hello'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-textarea'\n        label='Multiline Placeholder'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n        variant='outlined'\n      />\n      <TextField\n        id='outlined-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='outlined'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='outlined'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        variant='outlined'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='outlined-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        variant='outlined'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '€',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '฿',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '¥',\\n  },\\n];\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: theme.spacing(2),\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function OutlinedTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setValues({...values, [name]: event.target.value});\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete='off'>\\n      <TextField\\n        id='outlined-name'\\n        label='Name'\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-uncontrolled'\\n        label='Uncontrolled'\\n        defaultValue='foo'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        required\\n        id='outlined-required'\\n        label='Required'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        error\\n        id='outlined-error'\\n        label='Error'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        disabled\\n        id='outlined-disabled'\\n        label='Disabled'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-email-input'\\n        label='Email'\\n        className={classes.textField}\\n        type='email'\\n        name='email'\\n        autoComplete='email'\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-password-input'\\n        label='Password'\\n        className={classes.textField}\\n        type='password'\\n        autoComplete='current-password'\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-read-only-input'\\n        label='Read Only'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-dense'\\n        label='Dense'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-dense-multiline'\\n        label='Dense multiline'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n        variant='outlined'\\n        multiline\\n        rowsMax='4'\\n      />\\n      <TextField\\n        id='outlined-multiline-flexible'\\n        label='Multiline'\\n        multiline\\n        rowsMax='4'\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin='normal'\\n        helperText='hello'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-multiline-static'\\n        label='Multiline'\\n        multiline\\n        rows='4'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-helperText'\\n        label='Helper text'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        helperText='Some important text'\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-with-placeholder'\\n        label='With placeholder'\\n        placeholder='Placeholder'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-textarea'\\n        label='Multiline Placeholder'\\n        placeholder='Placeholder'\\n        multiline\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-number'\\n        label='Number'\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type='number'\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-search'\\n        label='Search field'\\n        type='search'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='outlined'\\n      />\\n      <TextField\\n        id='outlined-select-currency'\\n        select\\n        label='Select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'\\n        variant='outlined'>\\n        {currencies.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='outlined-select-currency-native'\\n        select\\n        label='Native select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'\\n        variant='outlined'>\\n        {currencies.map((option) => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='outlined-full-width'\\n        label='Label'\\n        style={{margin: 8}}\\n        placeholder='Placeholder'\\n        helperText='Full width!'\\n        fullWidth\\n        margin='normal'\\n        variant='outlined'\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id='outlined-bare'\\n        className={classes.textField}\\n        defaultValue='Bare'\\n        margin='normal'\\n        variant='outlined'\\n        inputProps={{'aria-label': 'bare'}}\\n      />\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({...values, [name]: event.target.value});\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete='off'>\n      <TextField\n        id='filled-name'\n        label='Name'\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-uncontrolled'\n        label='Uncontrolled'\n        defaultValue='foo'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        required\n        id='filled-required'\n        label='Required'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        error\n        id='filled-error'\n        label='Error'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        disabled\n        id='filled-disabled'\n        label='Disabled'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-email-input'\n        label='Email'\n        className={classes.textField}\n        type='email'\n        name='email'\n        autoComplete='email'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-password-input'\n        label='Password'\n        className={classes.textField}\n        type='password'\n        autoComplete='current-password'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-read-only-input'\n        label='Read Only'\n        defaultValue='Hello World'\n        className={classes.textField}\n        margin='normal'\n        InputProps={{\n          readOnly: true,\n        }}\n        variant='filled'\n      />\n      <TextField\n        id='filled-hidden-label'\n        className={clsx(classes.textField, classes.dense)}\n        hiddenLabel\n        variant='filled'\n        placeholder='Hidden label'\n        inputProps={{'aria-label': 'hidden label'}}\n      />\n      <TextField\n        id='filled-dense'\n        label='Dense'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='filled'\n      />\n      <TextField\n        id='filled-dense-hidden-label'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        hiddenLabel\n        variant='filled'\n        placeholder='Dense hidden label'\n        inputProps={{'aria-label': 'dense hidden label'}}\n      />\n      <TextField\n        id='filled-dense-multiline'\n        label='Dense multiline'\n        className={clsx(classes.textField, classes.dense)}\n        margin='dense'\n        variant='filled'\n        multiline\n        rowsMax='4'\n      />\n      <TextField\n        id='filled-multiline-flexible'\n        label='Multiline'\n        multiline\n        rowsMax='4'\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin='normal'\n        helperText='hello'\n        variant='filled'\n      />\n      <TextField\n        id='filled-multiline-static'\n        label='Multiline'\n        multiline\n        rows='4'\n        defaultValue='Default Value'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-helperText'\n        label='Helper text'\n        defaultValue='Default Value'\n        className={classes.textField}\n        helperText='Some important text'\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-with-placeholder'\n        label='With placeholder'\n        placeholder='Placeholder'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-textarea'\n        label='Multiline Placeholder'\n        placeholder='Placeholder'\n        multiline\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-number'\n        label='Number'\n        value={values.age}\n        onChange={handleChange('age')}\n        type='number'\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-search'\n        label='Search field'\n        type='search'\n        className={classes.textField}\n        margin='normal'\n        variant='filled'\n      />\n      <TextField\n        id='filled-select-currency'\n        select\n        label='Select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='filled'>\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-select-currency-native'\n        select\n        label='Native select'\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText='Please select your currency'\n        margin='normal'\n        variant='filled'>\n        {currencies.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-full-width'\n        label='Label'\n        style={{margin: 8}}\n        placeholder='Placeholder'\n        helperText='Full width!'\n        fullWidth\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='filled-bare'\n        className={classes.textField}\n        defaultValue='Bare'\n        margin='normal'\n        variant='filled'\n        inputProps={{'aria-label': 'bare'}}\n      />\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '€',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '฿',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '¥',\\n  },\\n];\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: theme.spacing(2),\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function FilledTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setValues({...values, [name]: event.target.value});\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete='off'>\\n      <TextField\\n        id='filled-name'\\n        label='Name'\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-uncontrolled'\\n        label='Uncontrolled'\\n        defaultValue='foo'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        required\\n        id='filled-required'\\n        label='Required'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        error\\n        id='filled-error'\\n        label='Error'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        disabled\\n        id='filled-disabled'\\n        label='Disabled'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-email-input'\\n        label='Email'\\n        className={classes.textField}\\n        type='email'\\n        name='email'\\n        autoComplete='email'\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-password-input'\\n        label='Password'\\n        className={classes.textField}\\n        type='password'\\n        autoComplete='current-password'\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-read-only-input'\\n        label='Read Only'\\n        defaultValue='Hello World'\\n        className={classes.textField}\\n        margin='normal'\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-hidden-label'\\n        className={clsx(classes.textField, classes.dense)}\\n        hiddenLabel\\n        variant='filled'\\n        placeholder='Hidden label'\\n        inputProps={{'aria-label': 'hidden label'}}\\n      />\\n      <TextField\\n        id='filled-dense'\\n        label='Dense'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-dense-hidden-label'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n        hiddenLabel\\n        variant='filled'\\n        placeholder='Dense hidden label'\\n        inputProps={{'aria-label': 'dense hidden label'}}\\n      />\\n      <TextField\\n        id='filled-dense-multiline'\\n        label='Dense multiline'\\n        className={clsx(classes.textField, classes.dense)}\\n        margin='dense'\\n        variant='filled'\\n        multiline\\n        rowsMax='4'\\n      />\\n      <TextField\\n        id='filled-multiline-flexible'\\n        label='Multiline'\\n        multiline\\n        rowsMax='4'\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin='normal'\\n        helperText='hello'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-multiline-static'\\n        label='Multiline'\\n        multiline\\n        rows='4'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-helperText'\\n        label='Helper text'\\n        defaultValue='Default Value'\\n        className={classes.textField}\\n        helperText='Some important text'\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-with-placeholder'\\n        label='With placeholder'\\n        placeholder='Placeholder'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-textarea'\\n        label='Multiline Placeholder'\\n        placeholder='Placeholder'\\n        multiline\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-number'\\n        label='Number'\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type='number'\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-search'\\n        label='Search field'\\n        type='search'\\n        className={classes.textField}\\n        margin='normal'\\n        variant='filled'\\n      />\\n      <TextField\\n        id='filled-select-currency'\\n        select\\n        label='Select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'\\n        variant='filled'>\\n        {currencies.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='filled-select-currency-native'\\n        select\\n        label='Native select'\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText='Please select your currency'\\n        margin='normal'\\n        variant='filled'>\\n        {currencies.map((option) => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='filled-full-width'\\n        label='Label'\\n        style={{margin: 8}}\\n        placeholder='Placeholder'\\n        helperText='Full width!'\\n        fullWidth\\n        margin='normal'\\n        variant='filled'\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id='filled-bare'\\n        className={classes.textField}\\n        defaultValue='Bare'\\n        margin='normal'\\n        variant='filled'\\n        inputProps={{'aria-label': 'bare'}}\\n      />\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState('Composed TextField');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='component-simple'>Name</InputLabel>\n        <Input id='component-simple' value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='component-helper'>Name</InputLabel>\n        <Input\n          id='component-helper'\n          value={name}\n          onChange={handleChange}\n          aria-describedby='component-helper-text'\n        />\n        <FormHelperText id='component-helper-text'>\n          Some important helper text\n        </FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='component-disabled'>Name</InputLabel>\n        <Input id='component-disabled' value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='component-error'>Name</InputLabel>\n        <Input\n          id='component-error'\n          value={name}\n          onChange={handleChange}\n          aria-describedby='component-error-text'\n        />\n        <FormHelperText id='component-error-text'>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant='outlined'>\n        <InputLabel ref={labelRef} htmlFor='component-outlined'>\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id='component-outlined'\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant='filled'>\n        <InputLabel htmlFor='component-filled'>Name</InputLabel>\n        <FilledInput\n          id='component-filled'\n          value={name}\n          onChange={handleChange}\n        />\n      </FormControl>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function ComposedTextField() {\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  const [name, setName] = React.useState('Composed TextField');\\n  const labelRef = React.useRef(null);\\n  const classes = useStyles();\\n\\n  React.useEffect(() => {\\n    setLabelWidth(labelRef.current.offsetWidth);\\n  }, []);\\n\\n  function handleChange(event) {\\n    setName(event.target.value);\\n  }\\n\\n  return (\\n    <div className={classes.container}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='component-simple'>Name</InputLabel>\\n        <Input id='component-simple' value={name} onChange={handleChange} />\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='component-helper'>Name</InputLabel>\\n        <Input\\n          id='component-helper'\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby='component-helper-text'\\n        />\\n        <FormHelperText id='component-helper-text'>\\n          Some important helper text\\n        </FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor='component-disabled'>Name</InputLabel>\\n        <Input id='component-disabled' value={name} onChange={handleChange} />\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor='component-error'>Name</InputLabel>\\n        <Input\\n          id='component-error'\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby='component-error-text'\\n        />\\n        <FormHelperText id='component-error-text'>Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant='outlined'>\\n        <InputLabel ref={labelRef} htmlFor='component-outlined'>\\n          Name\\n        </InputLabel>\\n        <OutlinedInput\\n          id='component-outlined'\\n          value={name}\\n          onChange={handleChange}\\n          labelWidth={labelWidth}\\n        />\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant='filled'>\\n        <InputLabel htmlFor='component-filled'>Name</InputLabel>\\n        <FilledInput\\n          id='component-filled'\\n          value={name}\\n          onChange={handleChange}\\n        />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Inputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue='Hello world'\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        placeholder='Placeholder'\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        value='Disabled'\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        defaultValue='Error'\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  input: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function Inputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.container}>\\n      <Input\\n        defaultValue='Hello world'\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'description',\\n        }}\\n      />\\n      <Input\\n        placeholder='Placeholder'\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'description',\\n        }}\\n      />\\n      <Input\\n        value='Disabled'\\n        className={classes.input}\\n        disabled\\n        inputProps={{\\n          'aria-label': 'description',\\n        }}\\n      />\\n      <Input\\n        defaultValue='Error'\\n        className={classes.input}\\n        error\\n        inputProps={{\\n          'aria-label': 'description',\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {\n  createMuiTheme,\n  fade,\n  makeStyles,\n  ThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport {green} from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles((theme) => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{classes, disableUnderline: true}} {...props} />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green',\n      borderWidth: 2,\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2,\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important', // override inline-style\n    },\n  },\n})(TextField);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate>\n      <CssTextField\n        className={classes.margin}\n        id='custom-css-standard-input'\n        label='Custom CSS'\n      />\n      <CssTextField\n        className={classes.margin}\n        label='Custom CSS'\n        variant='outlined'\n        id='custom-css-outlined-input2'\n      />\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label='ThemeProvider'\n          id='mui-theme-provider-standard-input'\n        />\n        <TextField\n          className={classes.margin}\n          label='ThemeProvider'\n          variant='outlined'\n          id='mui-theme-provider-outlined-input'\n        />\n      </ThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor='bootstrap-input'>\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue='react-bootstrap' id='bootstrap-input' />\n      </FormControl>\n      <RedditTextField\n        label='Reddit'\n        className={classes.margin}\n        defaultValue='react-reddit'\n        variant='filled'\n        id='reddit-input'\n      />\n      <InputBase\n        className={classes.margin}\n        defaultValue='Naked input'\n        inputProps={{'aria-label': 'naked'}}\n      />\n      <ValidationTextField\n        className={classes.margin}\n        label='CSS validation style'\n        required\n        variant='outlined'\n        defaultValue='Success'\n        id='validation-outlined-input'\n      />\n    </form>\n  );\n}\n","export default \"import React from 'react';\\nimport {\\n  createMuiTheme,\\n  fade,\\n  makeStyles,\\n  ThemeProvider,\\n  withStyles,\\n} from '@material-ui/core/styles';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport {green} from '@material-ui/core/colors';\\n\\nconst CssTextField = withStyles({\\n  root: {\\n    '& label.Mui-focused': {\\n      color: 'green',\\n    },\\n    '& .MuiInput-underline:after': {\\n      borderBottomColor: 'green',\\n    },\\n    '& .MuiOutlinedInput-root': {\\n      '& fieldset': {\\n        borderColor: 'red',\\n      },\\n      '&:hover fieldset': {\\n        borderColor: 'yellow',\\n      },\\n      '&.Mui-focused fieldset': {\\n        borderColor: 'green',\\n      },\\n    },\\n  },\\n})(TextField);\\n\\nconst BootstrapInput = withStyles((theme) => ({\\n  root: {\\n    'label + &': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n  input: {\\n    borderRadius: 4,\\n    position: 'relative',\\n    backgroundColor: theme.palette.common.white,\\n    border: '1px solid #ced4da',\\n    fontSize: 16,\\n    width: 'auto',\\n    padding: '10px 12px',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    // Use the system font instead of the default Roboto font.\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n    '&:focus': {\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n}))(InputBase);\\n\\nconst useStylesReddit = makeStyles((theme) => ({\\n  root: {\\n    border: '1px solid #e2e2e1',\\n    overflow: 'hidden',\\n    borderRadius: 4,\\n    backgroundColor: '#fcfcfb',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    '&:hover': {\\n      backgroundColor: '#fff',\\n    },\\n    '&$focused': {\\n      backgroundColor: '#fff',\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n  focused: {},\\n}));\\n\\nfunction RedditTextField(props) {\\n  const classes = useStylesReddit();\\n\\n  return (\\n    <TextField InputProps={{classes, disableUnderline: true}} {...props} />\\n  );\\n}\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nconst ValidationTextField = withStyles({\\n  root: {\\n    '& input:valid + fieldset': {\\n      borderColor: 'green',\\n      borderWidth: 2,\\n    },\\n    '& input:invalid + fieldset': {\\n      borderColor: 'red',\\n      borderWidth: 2,\\n    },\\n    '& input:valid:focus + fieldset': {\\n      borderLeftWidth: 6,\\n      padding: '4px !important', // override inline-style\\n    },\\n  },\\n})(TextField);\\n\\nconst theme = createMuiTheme({\\n  palette: {\\n    primary: green,\\n  },\\n});\\n\\nexport default function CustomizedInputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <form className={classes.root} noValidate>\\n      <CssTextField\\n        className={classes.margin}\\n        id='custom-css-standard-input'\\n        label='Custom CSS'\\n      />\\n      <CssTextField\\n        className={classes.margin}\\n        label='Custom CSS'\\n        variant='outlined'\\n        id='custom-css-outlined-input2'\\n      />\\n      <ThemeProvider theme={theme}>\\n        <TextField\\n          className={classes.margin}\\n          label='ThemeProvider'\\n          id='mui-theme-provider-standard-input'\\n        />\\n        <TextField\\n          className={classes.margin}\\n          label='ThemeProvider'\\n          variant='outlined'\\n          id='mui-theme-provider-outlined-input'\\n        />\\n      </ThemeProvider>\\n      <FormControl className={classes.margin}>\\n        <InputLabel shrink htmlFor='bootstrap-input'>\\n          Bootstrap\\n        </InputLabel>\\n        <BootstrapInput defaultValue='react-bootstrap' id='bootstrap-input' />\\n      </FormControl>\\n      <RedditTextField\\n        label='Reddit'\\n        className={classes.margin}\\n        defaultValue='react-reddit'\\n        variant='filled'\\n        id='reddit-input'\\n      />\\n      <InputBase\\n        className={classes.margin}\\n        defaultValue='Naked input'\\n        inputProps={{'aria-label': 'naked'}}\\n      />\\n      <ValidationTextField\\n        className={classes.margin}\\n        label='CSS validation style'\\n        required\\n        variant='outlined'\\n        defaultValue='Success'\\n        id='validation-outlined-input'\\n      />\\n    </form>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label='menu'>\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder='Search Google Maps'\n        inputProps={{'aria-label': 'search google maps'}}\n      />\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        color='primary'\n        className={classes.iconButton}\n        aria-label='directions'>\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport Divider from '@material-ui/core/Divider';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport MenuIcon from '@material-ui/icons/Menu';\\nimport SearchIcon from '@material-ui/icons/Search';\\nimport DirectionsIcon from '@material-ui/icons/Directions';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    padding: '2px 4px',\\n    display: 'flex',\\n    alignItems: 'center',\\n    width: 400,\\n  },\\n  input: {\\n    marginLeft: theme.spacing(1),\\n    flex: 1,\\n  },\\n  iconButton: {\\n    padding: 10,\\n  },\\n  divider: {\\n    height: 28,\\n    margin: 4,\\n  },\\n}));\\n\\nexport default function CustomizedInputBase() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <IconButton className={classes.iconButton} aria-label='menu'>\\n        <MenuIcon />\\n      </IconButton>\\n      <InputBase\\n        className={classes.input}\\n        placeholder='Search Google Maps'\\n        inputProps={{'aria-label': 'search google maps'}}\\n      />\\n      <IconButton className={classes.iconButton} aria-label='search'>\\n        <SearchIcon />\\n      </IconButton>\\n      <Divider className={classes.divider} orientation='vertical' />\\n      <IconButton\\n        color='primary'\\n        className={classes.iconButton}\\n        aria-label='directions'>\\n        <DirectionsIcon />\\n      </IconButton>\\n    </Paper>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label='With normal TextField'\n        id='simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label='With Select'\n        className={clsx(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor='adornment-amount'>Amount</InputLabel>\n        <Input\n          id='adornment-amount'\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position='start'>$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl\n        className={clsx(\n          classes.margin,\n          classes.withoutLabel,\n          classes.textField,\n        )}>\n        <Input\n          id='adornment-weight'\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position='end'>Kg</InputAdornment>}\n          aria-describedby='weight-helper-text'\n          inputProps={{\n            'aria-label': 'weight',\n          }}\n        />\n        <FormHelperText id='weight-helper-text'>Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.textField)}>\n        <InputLabel htmlFor='adornment-password'>Password</InputLabel>\n        <Input\n          id='adornment-password'\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  withoutLabel: {\\n    marginTop: theme.spacing(3),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function InputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = (prop) => (event) => {\\n    setValues({...values, [prop]: event.target.value});\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({...values, showPassword: !values.showPassword});\\n  };\\n\\n  const handleMouseDownPassword = (event) => {\\n    event.preventDefault();\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        label='With normal TextField'\\n        id='simple-start-adornment'\\n        className={clsx(classes.margin, classes.textField)}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        label='With Select'\\n        className={clsx(classes.margin, classes.textField)}\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}>\\n        {ranges.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <FormControl fullWidth className={classes.margin}>\\n        <InputLabel htmlFor='adornment-amount'>Amount</InputLabel>\\n        <Input\\n          id='adornment-amount'\\n          value={values.amount}\\n          onChange={handleChange('amount')}\\n          startAdornment={<InputAdornment position='start'>$</InputAdornment>}\\n        />\\n      </FormControl>\\n      <FormControl\\n        className={clsx(\\n          classes.margin,\\n          classes.withoutLabel,\\n          classes.textField,\\n        )}>\\n        <Input\\n          id='adornment-weight'\\n          value={values.weight}\\n          onChange={handleChange('weight')}\\n          endAdornment={<InputAdornment position='end'>Kg</InputAdornment>}\\n          aria-describedby='weight-helper-text'\\n          inputProps={{\\n            'aria-label': 'weight',\\n          }}\\n        />\\n        <FormHelperText id='weight-helper-text'>Weight</FormHelperText>\\n      </FormControl>\\n      <FormControl className={clsx(classes.margin, classes.textField)}>\\n        <InputLabel htmlFor='adornment-password'>Password</InputLabel>\\n        <Input\\n          id='adornment-password'\\n          type={values.showPassword ? 'text' : 'password'}\\n          value={values.password}\\n          onChange={handleChange('password')}\\n          endAdornment={\\n            <InputAdornment position='end'>\\n              <IconButton\\n                aria-label='toggle password visibility'\\n                onClick={handleClickShowPassword}\\n                onMouseDown={handleMouseDownPassword}>\\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\\n              </IconButton>\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='input-with-icon-adornment'>\n          With a start adornment\n        </InputLabel>\n        <Input\n          id='input-with-icon-adornment'\n          startAdornment={\n            <InputAdornment position='start'>\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id='input-with-icon-textfield'\n        label='TextField'\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position='start'>\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={1} alignItems='flex-end'>\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id='input-with-icon-grid' label='With a grid' />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport Grid from '@material-ui/core/Grid';\\nimport AccountCircle from '@material-ui/icons/AccountCircle';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function InputWithIcon() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor='input-with-icon-adornment'>\\n          With a start adornment\\n        </InputLabel>\\n        <Input\\n          id='input-with-icon-adornment'\\n          startAdornment={\\n            <InputAdornment position='start'>\\n              <AccountCircle />\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n      <TextField\\n        className={classes.margin}\\n        id='input-with-icon-textfield'\\n        label='TextField'\\n        InputProps={{\\n          startAdornment: (\\n            <InputAdornment position='start'>\\n              <AccountCircle />\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n      <div className={classes.margin}>\\n        <Grid container spacing={1} alignItems='flex-end'>\\n          <Grid item>\\n            <AccountCircle />\\n          </Grid>\\n          <Grid item>\\n            <TextField id='input-with-icon-grid' label='With a grid' />\\n          </Grid>\\n        </Grid>\\n      </div>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id='filled-simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='With filled TextField'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='With Select'\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='filled-adornment-amount'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='Amount'\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-weight'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        label='Weight'\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText='Weight'\n        InputProps={{\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-password'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        type={values.showPassword ? 'text' : 'password'}\n        label='Password'\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                edge='end'\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        id='filled-adornment-dense'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        margin='dense'\n        label='Amount in Euro'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>€</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='filled-adornment-extra-dense'\n        className={clsx(classes.margin, classes.textField)}\n        variant='filled'\n        margin='dense'\n        hiddenLabel\n        InputProps={{\n          inputProps: {\n            'aria-label': 'amount in Euro',\n          },\n          startAdornment: <InputAdornment position='start'>€</InputAdornment>,\n        }}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function FilledInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = (prop) => (event) => {\\n    setValues({...values, [prop]: event.target.value});\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({...values, showPassword: !values.showPassword});\\n  };\\n\\n  const handleMouseDownPassword = (event) => {\\n    event.preventDefault();\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id='filled-simple-start-adornment'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        label='With filled TextField'\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        label='With Select'\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}>\\n        {ranges.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='filled-adornment-amount'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        label='Amount'\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id='filled-adornment-weight'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        label='Weight'\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText='Weight'\\n        InputProps={{\\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id='filled-adornment-password'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        type={values.showPassword ? 'text' : 'password'}\\n        label='Password'\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position='end'>\\n              <IconButton\\n                edge='end'\\n                aria-label='toggle password visibility'\\n                onClick={handleClickShowPassword}\\n                onMouseDown={handleMouseDownPassword}>\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n      <TextField\\n        id='filled-adornment-dense'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        margin='dense'\\n        label='Amount in Euro'\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>€</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id='filled-adornment-extra-dense'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='filled'\\n        margin='dense'\\n        hiddenLabel\\n        InputProps={{\\n          inputProps: {\\n            'aria-label': 'amount in Euro',\\n          },\\n          startAdornment: <InputAdornment position='start'>€</InputAdornment>,\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id='outlined-simple-start-adornment'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='With outlined TextField'\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='With Select'\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\n        }}>\n        {ranges.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id='outlined-adornment-amount2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='Amount'\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='outlined-adornment-weight2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        label='Weight'\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText='Weight'\n        InputProps={{\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id='outlined-adornment-password2'\n        className={clsx(classes.margin, classes.textField)}\n        variant='outlined'\n        type={values.showPassword ? 'text' : 'password'}\n        label='Password'\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                edge='end'\n                aria-label='toggle password visibility'\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport clsx from 'clsx';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function OutlinedInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = (prop) => (event) => {\\n    setValues({...values, [prop]: event.target.value});\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({...values, showPassword: !values.showPassword});\\n  };\\n\\n  const handleMouseDownPassword = (event) => {\\n    event.preventDefault();\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id='outlined-simple-start-adornment'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='outlined'\\n        label='With outlined TextField'\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='outlined'\\n        label='With Select'\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>Kg</InputAdornment>,\\n        }}>\\n        {ranges.map((option) => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id='outlined-adornment-amount2'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='outlined'\\n        label='Amount'\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position='start'>$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id='outlined-adornment-weight2'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='outlined'\\n        label='Weight'\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText='Weight'\\n        InputProps={{\\n          endAdornment: <InputAdornment position='end'>Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id='outlined-adornment-password2'\\n        className={clsx(classes.margin, classes.textField)}\\n        variant='outlined'\\n        type={values.showPassword ? 'text' : 'password'}\\n        label='Password'\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position='end'>\\n              <IconButton\\n                edge='end'\\n                aria-label='toggle password visibility'\\n                onClick={handleClickShowPassword}\\n                onMouseDown={handleMouseDownPassword}>\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction TextMaskCustom(props) {\n  const {inputRef, ...other} = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[\n        '(',\n        /[1-9]/,\n        /\\d/,\n        /\\d/,\n        ')',\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        '-',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n      ]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const {inputRef, onChange, ...other} = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix='$'\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function FormattedInputs() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  });\n\n  const handleChange = (name) => (event) => {\n    setValues({\n      ...values,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='formatted-text-mask-input'>\n          react-text-mask\n        </InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange('textmask')}\n          id='formatted-text-mask-input'\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField\n        className={classes.formControl}\n        label='react-number-format'\n        value={values.numberformat}\n        onChange={handleChange('numberformat')}\n        id='formatted-numberformat-input'\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleTextField from './SimpleTextField';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleTextFieldSource from '!raw-loader!./SimpleTextField';\n\nimport OutlinedTextFields from './OutlinedTextFields';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport OutlinedTextFieldsSource from '!raw-loader!./OutlinedTextFields';\n\nimport FilledTextField from './FilledTextField';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport FilledTextFieldSource from '!raw-loader!./FilledTextField';\n\nimport ComponentsTextField from './ComponentsTextField';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ComponentsTextFieldSource from '!raw-loader!./ComponentsTextField';\n\nimport InputsTextField from './InputsTextField';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InputsTextFieldSource from '!raw-loader!./InputsTextField';\n\nimport CustomizedInputs from './CustomizedInputs';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedInputsSource from '!raw-loader!./CustomizedInputs';\n\nimport Customization from './Customization';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizationSource from '!raw-loader!./Customization';\n\nimport InputAdornments from './InputAdornments';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InputAdornmentsSource from '!raw-loader!./InputAdornments';\n\nimport WithIcon from './WithIcon';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport WithIconSource from '!raw-loader!./WithIcon';\n\nimport FilledInputAdornments from './FilledInputAdornments';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport FilledInputAdornmentsSource from '!raw-loader!./FilledInputAdornments';\n\nimport OutlinedInputAdornments from './OutlinedInputAdornments';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport OutlinedInputAdornmentsSource from '!raw-loader!./OutlinedInputAdornments';\n\nimport ThirdpartyLib from './ThirdpartyLib';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ThirdpartyLibSource from '!raw-loader!./ThirdpartyLib';\n\nconst TextFields = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Text Fields'\n        description='Text fields let users enter and edit text.'\n        refUrl='https://material-ui.com/components/text-fields/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='TextField'\n            component={SimpleTextField}\n            source={SimpleTextFieldSource}\n            description='The TextField wrapper component is a complete form control including a label, input and help text.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Outlined'\n            component={OutlinedTextFields}\n            source={OutlinedTextFieldsSource}\n            description='TextField supports outlined styling.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Filled'\n            component={FilledTextField}\n            source={FilledTextFieldSource}\n            description='TextField supports filled styling.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Components'\n            component={ComponentsTextField}\n            source={ComponentsTextFieldSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Inputs'\n            component={InputsTextField}\n            source={InputsTextFieldSource}\n            description='The TextField wrapper component is a complete form control including a label, input and help text.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Customized inputs'\n            component={CustomizedInputs}\n            source={CustomizedInputsSource}\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Input Adornments'\n            component={InputAdornments}\n            source={InputAdornmentsSource}\n            description='Input allows the provision of InputAdornment.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='With icon'\n            component={WithIcon}\n            source={WithIconSource}\n            description='Icons can be specified as prepended or appended'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Filled Input Adornments'\n            component={FilledInputAdornments}\n            source={FilledInputAdornmentsSource}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Outlined Input Adornments'\n            component={OutlinedInputAdornments}\n            source={OutlinedInputAdornmentsSource}\n            description='Icons can be specified as prepended or appended'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Layout'\n            component={OutlinedInputAdornments}\n            source={OutlinedInputAdornmentsSource}\n            description='TextField, FormControl allow the specification of margin to alter the vertical spacing of inputs. Using none (default) will not apply margins to the FormControl, whereas dense and normal will as well as alter other styles to meet the specification.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Integration with 3rd party input libraries'\n            component={ThirdpartyLib}\n            source={ThirdpartyLibSource}\n            description='Icons can be specified as prepended or appended'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customization'\n            component={Customization}\n            source={CustomizationSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default TextFields;\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport MaskedInput from 'react-text-mask';\\nimport NumberFormat from 'react-number-format';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nfunction TextMaskCustom(props) {\\n  const {inputRef, ...other} = props;\\n\\n  return (\\n    <MaskedInput\\n      {...other}\\n      ref={(ref) => {\\n        inputRef(ref ? ref.inputElement : null);\\n      }}\\n      mask={[\\n        '(',\\n        /[1-9]/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ')',\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        '-',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n      ]}\\n      placeholderChar={'\\\\u2000'}\\n      showMask\\n    />\\n  );\\n}\\n\\nTextMaskCustom.propTypes = {\\n  inputRef: PropTypes.func.isRequired,\\n};\\n\\nfunction NumberFormatCustom(props) {\\n  const {inputRef, onChange, ...other} = props;\\n\\n  return (\\n    <NumberFormat\\n      {...other}\\n      getInputRef={inputRef}\\n      onValueChange={(values) => {\\n        onChange({\\n          target: {\\n            value: values.value,\\n          },\\n        });\\n      }}\\n      thousandSeparator\\n      prefix='$'\\n    />\\n  );\\n}\\n\\nNumberFormatCustom.propTypes = {\\n  inputRef: PropTypes.func.isRequired,\\n  onChange: PropTypes.func.isRequired,\\n};\\n\\nexport default function FormattedInputs() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    textmask: '(1  )    -    ',\\n    numberformat: '1320',\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setValues({\\n      ...values,\\n      [name]: event.target.value,\\n    });\\n  };\\n\\n  return (\\n    <div className={classes.container}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor='formatted-text-mask-input'>\\n          react-text-mask\\n        </InputLabel>\\n        <Input\\n          value={values.textmask}\\n          onChange={handleChange('textmask')}\\n          id='formatted-text-mask-input'\\n          inputComponent={TextMaskCustom}\\n        />\\n      </FormControl>\\n      <TextField\\n        className={classes.formControl}\\n        label='react-number-format'\\n        value={values.numberformat}\\n        onChange={handleChange('numberformat')}\\n        id='formatted-numberformat-input'\\n        InputProps={{\\n          inputComponent: NumberFormatCustom,\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}