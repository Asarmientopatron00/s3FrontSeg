{"version":3,"sources":["modules/muiComponents/inputs/Switches/SimpleSwitches.js","webpack:///./src/modules/muiComponents/inputs/Switches/SimpleSwitches.js?74d1","modules/muiComponents/inputs/Switches/SwitchesWithFormControlLabel.js","webpack:///./src/modules/muiComponents/inputs/Switches/SwitchesWithFormControlLabel.js?9f11","modules/muiComponents/inputs/Switches/SwitchesWithFormGroup.js","webpack:///./src/modules/muiComponents/inputs/Switches/SwitchesWithFormGroup.js?0ccc","modules/muiComponents/inputs/Switches/CustomizedSwitches.js","modules/muiComponents/inputs/Switches/SwitchSizes.js","modules/muiComponents/inputs/Switches/LabelPlacement.js","modules/muiComponents/inputs/Switches/index.js","webpack:///./src/modules/muiComponents/inputs/Switches/CustomizedSwitches.js?36f4","webpack:///./src/modules/muiComponents/inputs/Switches/SwitchSizes.js?28db","webpack:///./src/modules/muiComponents/inputs/Switches/LabelPlacement.js?3b83"],"names":["Switches","React","useState","checkedA","checkedB","state","setState","handleChange","name","event","target","checked","Switch","onChange","value","inputProps","color","disabled","defaultChecked","SwitchLabels","FormGroup","row","FormControlLabel","control","label","SwitchesGroup","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","PurpleSwitch","withStyles","switchBase","purple","backgroundColor","track","IOSSwitch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","props","focusVisibleClassName","disableRipple","AntSwitch","display","primary","main","borderColor","boxShadow","CustomizedSwitches","checkedC","Typography","Grid","container","alignItems","item","SwitchesSize","setChecked","toggleChecked","prev","size","FormControlLabelPosition","aria-label","labelPlacement","ComponentHeader","title","description","refUrl","GridContainer","xs","lg","ComponentCard","SimpleSwitches","source","SwitchesWithFormControlLabel","SwitchesWithFormGroup","SwitchSizes","LabelPlacement"],"mappings":"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","file":"static/js/151.ecb09120.chunk.js","sourcesContent":["import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value='checkedA'\n        inputProps={{'aria-label': 'secondary checkbox'}}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value='checkedB'\n        color='primary'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        value='checkedC'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        disabled\n        value='checkedD'\n        inputProps={{'aria-label': 'disabled checkbox'}}\n      />\n      <Switch\n        disabled\n        checked\n        value='checkedE'\n        inputProps={{'aria-label': 'primary checkbox'}}\n      />\n      <Switch\n        defaultChecked\n        value='checkedF'\n        color='default'\n        inputProps={{'aria-label': 'checkbox with default color'}}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function Switches() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <div>\\n      <Switch\\n        checked={state.checkedA}\\n        onChange={handleChange('checkedA')}\\n        value='checkedA'\\n        inputProps={{'aria-label': 'secondary checkbox'}}\\n      />\\n      <Switch\\n        checked={state.checkedB}\\n        onChange={handleChange('checkedB')}\\n        value='checkedB'\\n        color='primary'\\n        inputProps={{'aria-label': 'primary checkbox'}}\\n      />\\n      <Switch\\n        value='checkedC'\\n        inputProps={{'aria-label': 'primary checkbox'}}\\n      />\\n      <Switch\\n        disabled\\n        value='checkedD'\\n        inputProps={{'aria-label': 'disabled checkbox'}}\\n      />\\n      <Switch\\n        disabled\\n        checked\\n        value='checkedE'\\n        inputProps={{'aria-label': 'primary checkbox'}}\\n      />\\n      <Switch\\n        defaultChecked\\n        value='checkedF'\\n        color='default'\\n        inputProps={{'aria-label': 'checkbox with default color'}}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value='checkedA'\n          />\n        }\n        label='Secondary'\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value='checkedB'\n            color='primary'\n          />\n        }\n        label='Primary'\n      />\n      <FormControlLabel\n        control={<Switch value='checkedC' />}\n        label='Uncontrolled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch value='checkedD' />}\n        label='Disabled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch checked value='checkedE' />}\n        label='Disabled'\n      />\n    </FormGroup>\n  );\n}\n","export default \"import React from 'react';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function SwitchLabels() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <FormGroup row>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={state.checkedA}\\n            onChange={handleChange('checkedA')}\\n            value='checkedA'\\n          />\\n        }\\n        label='Secondary'\\n      />\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={state.checkedB}\\n            onChange={handleChange('checkedB')}\\n            value='checkedB'\\n            color='primary'\\n          />\\n        }\\n        label='Primary'\\n      />\\n      <FormControlLabel\\n        control={<Switch value='checkedC' />}\\n        label='Uncontrolled'\\n      />\\n      <FormControlLabel\\n        disabled\\n        control={<Switch value='checkedD' />}\\n        label='Disabled'\\n      />\\n      <FormControlLabel\\n        disabled\\n        control={<Switch checked value='checkedE' />}\\n        label='Disabled'\\n      />\\n    </FormGroup>\\n  );\\n}\\n\";","import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.gilad}\n              onChange={handleChange('gilad')}\n              value='gilad'\n            />\n          }\n          label='Gilad Gray'\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.jason}\n              onChange={handleChange('jason')}\n              value='jason'\n            />\n          }\n          label='Jason Killian'\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.antoine}\n              onChange={handleChange('antoine')}\n              value='antoine'\n            />\n          }\n          label='Antoine Llorca'\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n","export default \"import React from 'react';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function SwitchesGroup() {\\n  const [state, setState] = React.useState({\\n    gilad: true,\\n    jason: false,\\n    antoine: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <FormControl component='fieldset'>\\n      <FormLabel component='legend'>Assign responsibility</FormLabel>\\n      <FormGroup>\\n        <FormControlLabel\\n          control={\\n            <Switch\\n              checked={state.gilad}\\n              onChange={handleChange('gilad')}\\n              value='gilad'\\n            />\\n          }\\n          label='Gilad Gray'\\n        />\\n        <FormControlLabel\\n          control={\\n            <Switch\\n              checked={state.jason}\\n              onChange={handleChange('jason')}\\n              value='jason'\\n            />\\n          }\\n          label='Jason Killian'\\n        />\\n        <FormControlLabel\\n          control={\\n            <Switch\\n              checked={state.antoine}\\n              onChange={handleChange('antoine')}\\n              value='antoine'\\n            />\\n          }\\n          label='Antoine Llorca'\\n        />\\n      </FormGroup>\\n      <FormHelperText>Be careful</FormHelperText>\\n    </FormControl>\\n  );\\n}\\n\";","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {purple} from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({classes, ...props}) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value='checkedA'\n          />\n        }\n        label='Custom color'\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value='checkedB'\n          />\n        }\n        label='iOS style'\n      />\n      <Typography component='div'>\n        <Grid component='label' container alignItems='center' spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange('checkedC')}\n              value='checkedC'\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function SwitchesSize() {\n  const [checked, setChecked] = React.useState(false);\n\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch size='small' checked={checked} onChange={toggleChecked} />\n        }\n        label='Small'\n      />\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={toggleChecked} />}\n        label='Normal'\n      />\n    </FormGroup>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nexport default function FormControlLabelPosition() {\n  return (\n    <FormControl component='fieldset'>\n      <FormGroup aria-label='position' row>\n        <FormControlLabel\n          value='top'\n          control={<Switch color='primary' />}\n          label='Top'\n          labelPlacement='top'\n        />\n        <FormControlLabel\n          value='start'\n          control={<Switch color='primary' />}\n          label='Start'\n          labelPlacement='start'\n        />\n        <FormControlLabel\n          value='bottom'\n          control={<Switch color='primary' />}\n          label='Bottom'\n          labelPlacement='bottom'\n        />\n        <FormControlLabel\n          value='end'\n          control={<Switch color='primary' />}\n          label='End'\n          labelPlacement='end'\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport Grid from '@material-ui/core/Grid';\nimport SimpleSwitches from './SimpleSwitches';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleSwitchesSource from '!raw-loader!./SimpleSwitches';\nimport SwitchesWithFormControlLabel from './SwitchesWithFormControlLabel';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SwitchesWithFormControlLabelSource from '!raw-loader!./SwitchesWithFormControlLabel';\nimport SwitchesWithFormGroup from './SwitchesWithFormGroup';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SwitchesWithFormGroupSource from '!raw-loader!./SwitchesWithFormGroup';\nimport CustomizedSwitches from './CustomizedSwitches';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedSwitchesSource from '!raw-loader!./CustomizedSwitches';\nimport SwitchSizes from './SwitchSizes';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SwitchSizesSource from '!raw-loader!./SwitchSizes';\nimport LabelPlacement from './LabelPlacement';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LabelPlacementSource from '!raw-loader!./LabelPlacement';\n\nconst Switches = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Switches'\n        description='Switches toggle the state of a single setting on or off.'\n        refUrl='https://material-ui.com/components/switches//'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Switches'\n            component={SimpleSwitches}\n            source={SimpleSwitchesSource}\n            description='Switches are the preferred way to adjust settings on mobile. The option that the switch controls, as well as the state it’s in, should be made clear from the corresponding inline label.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Switches with FormControlLabel'\n            component={SwitchesWithFormControlLabel}\n            source={SwitchesWithFormControlLabelSource}\n            description='Switch can also be used with a label description thanks to the FormControlLabel component.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Switches with FormGroup'\n            component={SwitchesWithFormGroup}\n            source={SwitchesWithFormGroupSource}\n            description='FormGroup is a helpful wrapper used to group selection controls components that provides an easier API. However, we encourage you to use a Checkbox instead.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized switches'\n            component={CustomizedSwitches}\n            source={CustomizedSwitchesSource}\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Switch Sizes'\n            component={SwitchSizes}\n            source={SwitchSizesSource}\n            description='Fancy smaller switches? Use the size property.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Label placement'\n            component={LabelPlacement}\n            source={LabelPlacementSource}\n            description='You can change the placement of the label.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Switches;\n","export default \"import React from 'react';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport {purple} from '@material-ui/core/colors';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\nimport Grid from '@material-ui/core/Grid';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst PurpleSwitch = withStyles({\\n  switchBase: {\\n    color: purple[300],\\n    '&$checked': {\\n      color: purple[500],\\n    },\\n    '&$checked + $track': {\\n      backgroundColor: purple[500],\\n    },\\n  },\\n  checked: {},\\n  track: {},\\n})(Switch);\\n\\nconst IOSSwitch = withStyles((theme) => ({\\n  root: {\\n    width: 42,\\n    height: 26,\\n    padding: 0,\\n    margin: theme.spacing(1),\\n  },\\n  switchBase: {\\n    padding: 1,\\n    '&$checked': {\\n      transform: 'translateX(16px)',\\n      color: theme.palette.common.white,\\n      '& + $track': {\\n        backgroundColor: '#52d869',\\n        opacity: 1,\\n        border: 'none',\\n      },\\n    },\\n    '&$focusVisible $thumb': {\\n      color: '#52d869',\\n      border: '6px solid #fff',\\n    },\\n  },\\n  thumb: {\\n    width: 24,\\n    height: 24,\\n  },\\n  track: {\\n    borderRadius: 26 / 2,\\n    border: `1px solid ${theme.palette.grey[400]}`,\\n    backgroundColor: theme.palette.grey[50],\\n    opacity: 1,\\n    transition: theme.transitions.create(['background-color', 'border']),\\n  },\\n  checked: {},\\n  focusVisible: {},\\n}))(({classes, ...props}) => {\\n  return (\\n    <Switch\\n      focusVisibleClassName={classes.focusVisible}\\n      disableRipple\\n      classes={{\\n        root: classes.root,\\n        switchBase: classes.switchBase,\\n        thumb: classes.thumb,\\n        track: classes.track,\\n        checked: classes.checked,\\n      }}\\n      {...props}\\n    />\\n  );\\n});\\n\\nconst AntSwitch = withStyles((theme) => ({\\n  root: {\\n    width: 28,\\n    height: 16,\\n    padding: 0,\\n    display: 'flex',\\n  },\\n  switchBase: {\\n    padding: 2,\\n    color: theme.palette.grey[500],\\n    '&$checked': {\\n      transform: 'translateX(12px)',\\n      color: theme.palette.common.white,\\n      '& + $track': {\\n        opacity: 1,\\n        backgroundColor: theme.palette.primary.main,\\n        borderColor: theme.palette.primary.main,\\n      },\\n    },\\n  },\\n  thumb: {\\n    width: 12,\\n    height: 12,\\n    boxShadow: 'none',\\n  },\\n  track: {\\n    border: `1px solid ${theme.palette.grey[500]}`,\\n    borderRadius: 16 / 2,\\n    opacity: 1,\\n    backgroundColor: theme.palette.common.white,\\n  },\\n  checked: {},\\n}))(Switch);\\n\\nexport default function CustomizedSwitches() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n    checkedC: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <FormGroup>\\n      <FormControlLabel\\n        control={\\n          <PurpleSwitch\\n            checked={state.checkedA}\\n            onChange={handleChange('checkedA')}\\n            value='checkedA'\\n          />\\n        }\\n        label='Custom color'\\n      />\\n      <FormControlLabel\\n        control={\\n          <IOSSwitch\\n            checked={state.checkedB}\\n            onChange={handleChange('checkedB')}\\n            value='checkedB'\\n          />\\n        }\\n        label='iOS style'\\n      />\\n      <Typography component='div'>\\n        <Grid component='label' container alignItems='center' spacing={1}>\\n          <Grid item>Off</Grid>\\n          <Grid item>\\n            <AntSwitch\\n              checked={state.checkedC}\\n              onChange={handleChange('checkedC')}\\n              value='checkedC'\\n            />\\n          </Grid>\\n          <Grid item>On</Grid>\\n        </Grid>\\n      </Typography>\\n    </FormGroup>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport Switch from '@material-ui/core/Switch';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\n\\nexport default function SwitchesSize() {\\n  const [checked, setChecked] = React.useState(false);\\n\\n  const toggleChecked = () => {\\n    setChecked((prev) => !prev);\\n  };\\n\\n  return (\\n    <FormGroup>\\n      <FormControlLabel\\n        control={\\n          <Switch size='small' checked={checked} onChange={toggleChecked} />\\n        }\\n        label='Small'\\n      />\\n      <FormControlLabel\\n        control={<Switch checked={checked} onChange={toggleChecked} />}\\n        label='Normal'\\n      />\\n    </FormGroup>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport Switch from '@material-ui/core/Switch';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\n\\nexport default function FormControlLabelPosition() {\\n  return (\\n    <FormControl component='fieldset'>\\n      <FormGroup aria-label='position' row>\\n        <FormControlLabel\\n          value='top'\\n          control={<Switch color='primary' />}\\n          label='Top'\\n          labelPlacement='top'\\n        />\\n        <FormControlLabel\\n          value='start'\\n          control={<Switch color='primary' />}\\n          label='Start'\\n          labelPlacement='start'\\n        />\\n        <FormControlLabel\\n          value='bottom'\\n          control={<Switch color='primary' />}\\n          label='Bottom'\\n          labelPlacement='bottom'\\n        />\\n        <FormControlLabel\\n          value='end'\\n          control={<Switch color='primary' />}\\n          label='End'\\n          labelPlacement='end'\\n        />\\n      </FormGroup>\\n    </FormControl>\\n  );\\n}\\n\";"],"sourceRoot":""}