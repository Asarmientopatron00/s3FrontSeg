(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[159],{3120:function(e,n,a){"use strict";a.r(n);var t=a(0),o=a.n(t),i=a(1081),l=a(306),c=a(305),r=a(304),s=a(22),m=a(4),p=a(164),d=a(1279),u=a(1450),h=a(1485),f=a(1336),S=a(1409),D=a(31),v=a(3031),C=a(3168),b=a(3032),g=a(1782),E=a.n(g),O=a(1458),I=a.n(O),y=a(1783),k=a.n(y),L=a(1385),F=a.n(L),R=a(1215),N=a.n(R),w=Object(p.a)((function(e){return{root:{width:"100%"},controls:{margin:e.spacing(3)},exampleWrapper:{position:"relative",height:380},radioGroup:{margin:e.spacing(1,0)},speedDial:{position:"absolute","&$directionUp, &$directionLeft":{bottom:e.spacing(2),right:e.spacing(3)},"&$directionDown, &$directionRight":{top:e.spacing(2),left:e.spacing(3)}},directionUp:{},directionRight:{},directionDown:{},directionLeft:{}}})),x=[{icon:o.a.createElement(E.a,null),name:"Copy"},{icon:o.a.createElement(I.a,null),name:"Save"},{icon:o.a.createElement(k.a,null),name:"Print"},{icon:o.a.createElement(F.a,null),name:"Share"},{icon:o.a.createElement(N.a,null),name:"Delete"}];function H(){var e=w(),n=o.a.useState("up"),a=Object(s.a)(n,2),t=a[0],i=a[1],l=o.a.useState(!1),c=Object(s.a)(l,2),r=c[0],p=c[1],g=o.a.useState(!1),E=Object(s.a)(g,2),O=E[0],I=E[1],y=function(){p((function(e){return!e}))},k=function(){p(!1)},L=function(){p(!0)},F=Object(m.default)(e.speedDial,e["direction".concat(Object(D.a)(t))]);return o.a.createElement("div",{className:e.root},o.a.createElement("div",{className:e.controls},o.a.createElement(d.a,{control:o.a.createElement(S.a,{checked:O,onChange:function(e,n){I(n),p(!n&&r)},value:"hidden",color:"primary"}),label:"Hidden"}),o.a.createElement(u.a,{component:"legend"},"Direction"),o.a.createElement(f.a,{"aria-label":"direction",name:"direction",className:e.radioGroup,value:t,onChange:function(e){i(e.target.value)},row:!0},o.a.createElement(d.a,{value:"up",control:o.a.createElement(h.a,null),label:"Up"}),o.a.createElement(d.a,{value:"right",control:o.a.createElement(h.a,null),label:"Right"}),o.a.createElement(d.a,{value:"down",control:o.a.createElement(h.a,null),label:"Down"}),o.a.createElement(d.a,{value:"left",control:o.a.createElement(h.a,null),label:"Left"}))),o.a.createElement("div",{className:e.exampleWrapper},o.a.createElement(v.a,{ariaLabel:"SpeedDial example",className:F,hidden:O,icon:o.a.createElement(C.a,null),onBlur:k,onClick:y,onClose:k,onFocus:L,onMouseEnter:L,onMouseLeave:k,open:r,direction:t},x.map((function(e){return o.a.createElement(b.a,{key:e.name,icon:e.icon,tooltipTitle:e.name,onClick:y})})))))}var P=a(493),B=a(1240),j=a.n(B),T=Object(p.a)((function(e){return{root:{height:380},speedDial:{position:"absolute",bottom:e.spacing(2),right:e.spacing(3)}}})),M=[{icon:o.a.createElement(E.a,null),name:"Copy"},{icon:o.a.createElement(I.a,null),name:"Save"},{icon:o.a.createElement(k.a,null),name:"Print"},{icon:o.a.createElement(F.a,null),name:"Share"},{icon:o.a.createElement(N.a,null),name:"Delete"}];function A(){var e=T(),n=o.a.useState(!1),a=Object(s.a)(n,2),t=a[0],i=a[1],l=o.a.useState(!1),c=Object(s.a)(l,2),r=c[0],m=c[1],p=function(){i((function(e){return!e}))},d=function(){r||i(!0)},u=function(){i(!1)};return o.a.createElement("div",{className:e.root},o.a.createElement(P.a,{onClick:function(){i(!1),m((function(e){return!e}))}},"Toggle Speed Dial"),o.a.createElement(v.a,{ariaLabel:"SpeedDial openIcon example",className:e.speedDial,hidden:r,icon:o.a.createElement(C.a,{openIcon:o.a.createElement(j.a,null)}),onBlur:u,onClick:p,onClose:u,onFocus:d,onMouseEnter:d,onMouseLeave:u,open:t},M.map((function(e){return o.a.createElement(b.a,{key:e.name,icon:e.icon,tooltipTitle:e.name,onClick:p})}))))}var $=Object(p.a)((function(e){return{root:{height:380},speedDial:{position:"absolute",bottom:e.spacing(2),right:e.spacing(3)}}})),G=[{icon:o.a.createElement(E.a,null),name:"Copy"},{icon:o.a.createElement(I.a,null),name:"Save"},{icon:o.a.createElement(k.a,null),name:"Print"},{icon:o.a.createElement(F.a,null),name:"Share"},{icon:o.a.createElement(N.a,null),name:"Delete"}];function U(){var e=$(),n=o.a.useState(!1),a=Object(s.a)(n,2),t=a[0],i=a[1],l=o.a.useState(!1),c=Object(s.a)(l,2),r=c[0],m=c[1],p=function(){i((function(e){return!e}))},d=function(){r||i(!0)},u=function(){i(!1)};return o.a.createElement("div",{className:e.root},o.a.createElement(P.a,{onClick:function(){i(!1),m((function(e){return!e}))}},"Toggle Speed Dial"),o.a.createElement(v.a,{ariaLabel:"SpeedDial tooltip example",className:e.speedDial,hidden:r,icon:o.a.createElement(C.a,null),onBlur:u,onClick:p,onClose:u,onFocus:d,onMouseEnter:d,onMouseLeave:u,open:t},G.map((function(e){return o.a.createElement(b.a,{key:e.name,icon:e.icon,tooltipTitle:e.name,tooltipOpen:!0,onClick:p})}))))}var W=Object(p.a)((function(e){return{relative:{position:"relative"}}}));n.default=function(e){var n=W(e);return o.a.createElement(o.a.Fragment,null,o.a.createElement(c.a,{title:"Speed Dial",description:"When pressed, a floating action button can display three to six related actions in the form of a speed dial.",refUrl:"https://material-ui.com/components/speed-dial/"}),o.a.createElement(r.a,null,o.a.createElement(i.a,{item:!0,xs:12,className:n.relative},o.a.createElement(l.a,{title:"Simple Speed Dial",component:H,source:"import clsx from 'clsx';\nimport React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport {capitalize} from '@material-ui/core/utils';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  controls: {\n    margin: theme.spacing(3),\n  },\n  exampleWrapper: {\n    position: 'relative',\n    height: 380,\n  },\n  radioGroup: {\n    margin: theme.spacing(1, 0),\n  },\n  speedDial: {\n    position: 'absolute',\n    '&$directionUp, &$directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n    '&$directionDown, &$directionRight': {\n      top: theme.spacing(2),\n      left: theme.spacing(3),\n    },\n  },\n  directionUp: {},\n  directionRight: {},\n  directionDown: {},\n  directionLeft: {},\n}));\n\nconst actions = [\n  {icon: <FileCopyIcon />, name: 'Copy'},\n  {icon: <SaveIcon />, name: 'Save'},\n  {icon: <PrintIcon />, name: 'Print'},\n  {icon: <ShareIcon />, name: 'Share'},\n  {icon: <DeleteIcon />, name: 'Delete'},\n];\n\nexport default function SpeedDials() {\n  const classes = useStyles();\n  const [direction, setDirection] = React.useState('up');\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleDirectionChange = (event) => {\n    setDirection(event.target.value);\n  };\n\n  const handleHiddenChange = (event, newHidden) => {\n    setHidden(newHidden);\n    setOpen(newHidden ? false : open);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const speedDialClassName = clsx(\n    classes.speedDial,\n    classes[`direction${capitalize(direction)}`],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={hidden}\n              onChange={handleHiddenChange}\n              value='hidden'\n              color='primary'\n            />\n          }\n          label='Hidden'\n        />\n        <FormLabel component='legend'>Direction</FormLabel>\n        <RadioGroup\n          aria-label='direction'\n          name='direction'\n          className={classes.radioGroup}\n          value={direction}\n          onChange={handleDirectionChange}\n          row>\n          <FormControlLabel value='up' control={<Radio />} label='Up' />\n          <FormControlLabel value='right' control={<Radio />} label='Right' />\n          <FormControlLabel value='down' control={<Radio />} label='Down' />\n          <FormControlLabel value='left' control={<Radio />} label='Left' />\n        </RadioGroup>\n      </div>\n      <div className={classes.exampleWrapper}>\n        <SpeedDial\n          ariaLabel='SpeedDial example'\n          className={speedDialClassName}\n          hidden={hidden}\n          icon={<SpeedDialIcon />}\n          onBlur={handleClose}\n          onClick={handleClick}\n          onClose={handleClose}\n          onFocus={handleOpen}\n          onMouseEnter={handleOpen}\n          onMouseLeave={handleClose}\n          open={open}\n          direction={direction}>\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              onClick={handleClick}\n            />\n          ))}\n        </SpeedDial>\n      </div>\n    </div>\n  );\n}\n",description:"The floating action button can display related actions."})),o.a.createElement(i.a,{item:!0,xs:12,className:n.relative},o.a.createElement(l.a,{title:"Custom close icon",component:A,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 380,\n  },\n  speedDial: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nconst actions = [\n  {icon: <FileCopyIcon />, name: 'Copy'},\n  {icon: <SaveIcon />, name: 'Save'},\n  {icon: <PrintIcon />, name: 'Print'},\n  {icon: <ShareIcon />, name: 'Share'},\n  {icon: <DeleteIcon />, name: 'Delete'},\n];\n\nexport default function OpenIconSpeedDial() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n\n  const handleVisibility = () => {\n    setOpen(false);\n    setHidden((prevHidden) => !prevHidden);\n  };\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleOpen = () => {\n    if (!hidden) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button onClick={handleVisibility}>Toggle Speed Dial</Button>\n      <SpeedDial\n        ariaLabel='SpeedDial openIcon example'\n        className={classes.speedDial}\n        hidden={hidden}\n        icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n        onBlur={handleClose}\n        onClick={handleClick}\n        onClose={handleClose}\n        onFocus={handleOpen}\n        onMouseEnter={handleOpen}\n        onMouseLeave={handleClose}\n        open={open}>\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClick}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n}\n",description:"You can provide an alternate icon for the closed and open states using the icon and openIcon props of the SpeedDialIcon component."})),o.a.createElement(i.a,{item:!0,xs:12,className:n.relative},o.a.createElement(l.a,{title:"Persistent action tooltips",component:U,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 380,\n  },\n  speedDial: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nconst actions = [\n  {icon: <FileCopyIcon />, name: 'Copy'},\n  {icon: <SaveIcon />, name: 'Save'},\n  {icon: <PrintIcon />, name: 'Print'},\n  {icon: <ShareIcon />, name: 'Share'},\n  {icon: <DeleteIcon />, name: 'Delete'},\n];\n\nexport default function SpeedDialTooltipOpen() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n\n  const handleVisibility = () => {\n    setOpen(false);\n    setHidden((prevHidden) => !prevHidden);\n  };\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleOpen = () => {\n    if (!hidden) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button onClick={handleVisibility}>Toggle Speed Dial</Button>\n      <SpeedDial\n        ariaLabel='SpeedDial tooltip example'\n        className={classes.speedDial}\n        hidden={hidden}\n        icon={<SpeedDialIcon />}\n        onBlur={handleClose}\n        onClick={handleClick}\n        onClose={handleClose}\n        onFocus={handleOpen}\n        onMouseEnter={handleOpen}\n        onMouseLeave={handleClose}\n        open={open}>\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            tooltipOpen\n            onClick={handleClick}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n}\n",description:"The SpeedDialActions tooltips can be be displayed persistently so that users don't have to long-press in order to see the tooltip on touch devices."}))))}}}]);
//# sourceMappingURL=159.f8f8301e.chunk.js.map