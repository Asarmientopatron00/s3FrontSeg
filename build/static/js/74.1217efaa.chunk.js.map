{"version":3,"sources":["../node_modules/@material-ui/icons/Check.js","../node_modules/@material-ui/icons/ArrowDropDown.js","../node_modules/@material-ui/icons/FormatAlignLeft.js","../node_modules/@material-ui/icons/FormatAlignCenter.js","../node_modules/@material-ui/icons/FormatAlignRight.js","../node_modules/@material-ui/icons/FormatAlignJustify.js","../node_modules/@material-ui/icons/FormatBold.js","../node_modules/@material-ui/icons/FormatItalic.js","../node_modules/@material-ui/icons/FormatUnderlined.js","../node_modules/@material-ui/icons/FormatColorFill.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","modules/muiComponents/util/ToggleButtons/SimpleToggle.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/SimpleToggle.js?2a3c","modules/muiComponents/util/ToggleButtons/ToggleSizes.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/ToggleSizes.js?2e54","modules/muiComponents/util/ToggleButtons/StandaloneToggle.js","modules/muiComponents/util/ToggleButtons/index.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/StandaloneToggle.js?f7e9"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Fragment","fillOpacity","ToggleButton","React","props","ref","children","classes","className","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","onClick","selected","_props$size","size","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","focusRipple","event","isDefaultPrevented","label","withStyles","theme","typography","button","boxSizing","borderRadius","shape","padding","border","fade","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","name","isValueSelected","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","_props$exclusive","exclusive","_props$orientation","orientation","handleChange","buttonValue","newValue","index","slice","splice","handleExclusiveChange","role","vertical","map","child","grouped","flexDirection","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","useStyles","makeStyles","toggleContainer","margin","spacing","ToggleButtons","useState","alignment","setAlignment","formats","setFormats","Grid","container","item","sm","md","newAlignment","aria-label","Typography","gutterBottom","newFormats","arial-label","bgTransparent","ToggleButtonSizes","key","direction","StandaloneToggleButton","setSelected","ComponentHeader","title","description","refUrl","GridContainer","xs","ComponentCard","component","SimpleToggle","source","lg","ToggleSizes","StandaloneToggle"],"mappings":"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","file":"static/js/74.1217efaa.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"\n}), 'FormatAlignCenter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"\n}), 'FormatAlignJustify');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"\n}), 'FormatBold');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"\n}), 'FormatItalic');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"\n}), 'FormatUnderlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"\n}), _react.default.createElement(\"path\", {\n  fillOpacity: \".36\",\n  d: \"M0 20h24v4H0z\"\n})), 'FormatColorFill');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  toggleContainer: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = React.useState('left');\n  const [formats, setFormats] = React.useState(() => ['bold']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item sm={12} md={6}>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup\n            className='bg-transparent'\n            value={alignment}\n            exclusive\n            onChange={handleAlignment}\n            aria-label='text alignment'>\n            <ToggleButton value='left' aria-label='left aligned'>\n              <FormatAlignLeftIcon />\n            </ToggleButton>\n            <ToggleButton value='center' aria-label='centered'>\n              <FormatAlignCenterIcon />\n            </ToggleButton>\n            <ToggleButton value='right' aria-label='right aligned'>\n              <FormatAlignRightIcon />\n            </ToggleButton>\n            <ToggleButton value='justify' aria-label='justified' disabled>\n              <FormatAlignJustifyIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <Typography gutterBottom>Exclusive Selection</Typography>\n        <Typography>\n          Text justification toggle buttons present options for left, right,\n          center, full, and justified text with only one item available for\n          selection at a time. Selecting one option deselects any other.\n        </Typography>\n      </Grid>\n      <Grid item sm={12} md={6}>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup\n            className='bg-transparent'\n            value={formats}\n            onChange={handleFormat}\n            arial-label='text formatting'>\n            <ToggleButton value='bold' aria-label='bold'>\n              <FormatBoldIcon />\n            </ToggleButton>\n            <ToggleButton value='italic' aria-label='italic'>\n              <FormatItalicIcon />\n            </ToggleButton>\n            <ToggleButton value='underlined' aria-label='underlined'>\n              <FormatUnderlinedIcon />\n            </ToggleButton>\n            <ToggleButton value='color' aria-label='color' disabled>\n              <FormatColorFillIcon />\n              <ArrowDropDownIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <Typography gutterBottom>Multiple Selection</Typography>\n        <Typography>\n          Logically-grouped options, like Bold, Italic, and Underline, allow\n          multiple options to be selected.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport Typography from '@material-ui/core/Typography';\\nimport Grid from '@material-ui/core/Grid';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  toggleContainer: {\\n    margin: theme.spacing(2, 0),\\n  },\\n}));\\n\\nexport default function ToggleButtons() {\\n  const [alignment, setAlignment] = React.useState('left');\\n  const [formats, setFormats] = React.useState(() => ['bold']);\\n\\n  const handleFormat = (event, newFormats) => {\\n    setFormats(newFormats);\\n  };\\n\\n  const handleAlignment = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container spacing={2}>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            className='bg-transparent'\\n            value={alignment}\\n            exclusive\\n            onChange={handleAlignment}\\n            aria-label='text alignment'>\\n            <ToggleButton value='left' aria-label='left aligned'>\\n              <FormatAlignLeftIcon />\\n            </ToggleButton>\\n            <ToggleButton value='center' aria-label='centered'>\\n              <FormatAlignCenterIcon />\\n            </ToggleButton>\\n            <ToggleButton value='right' aria-label='right aligned'>\\n              <FormatAlignRightIcon />\\n            </ToggleButton>\\n            <ToggleButton value='justify' aria-label='justified' disabled>\\n              <FormatAlignJustifyIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n        <Typography gutterBottom>Exclusive Selection</Typography>\\n        <Typography>\\n          Text justification toggle buttons present options for left, right,\\n          center, full, and justified text with only one item available for\\n          selection at a time. Selecting one option deselects any other.\\n        </Typography>\\n      </Grid>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            className='bg-transparent'\\n            value={formats}\\n            onChange={handleFormat}\\n            arial-label='text formatting'>\\n            <ToggleButton value='bold' aria-label='bold'>\\n              <FormatBoldIcon />\\n            </ToggleButton>\\n            <ToggleButton value='italic' aria-label='italic'>\\n              <FormatItalicIcon />\\n            </ToggleButton>\\n            <ToggleButton value='underlined' aria-label='underlined'>\\n              <FormatUnderlinedIcon />\\n            </ToggleButton>\\n            <ToggleButton value='color' aria-label='color' disabled>\\n              <FormatColorFillIcon />\\n              <ArrowDropDownIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n        <Typography gutterBottom>Multiple Selection</Typography>\\n        <Typography>\\n          Logically-grouped options, like Bold, Italic, and Underline, allow\\n          multiple options to be selected.\\n        </Typography>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n\";","import React from 'react';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  bgTransparent: {\n    backgroundColor: 'transparent',\n  },\n}));\nexport default function ToggleButtonSizes(props) {\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const classes = useStyles(props);\n\n  const children = [\n    <ToggleButton key={1} value='left'>\n      <FormatAlignLeftIcon />\n    </ToggleButton>,\n    <ToggleButton key={2} value='center'>\n      <FormatAlignCenterIcon />\n    </ToggleButton>,\n    <ToggleButton key={3} value='right'>\n      <FormatAlignRightIcon />\n    </ToggleButton>,\n    <ToggleButton key={4} value='justify' disabled>\n      <FormatAlignJustifyIcon />\n    </ToggleButton>,\n  ];\n\n  return (\n    <Grid container spacing={2} direction='column' alignItems='center'>\n      <Grid item>\n        <ToggleButtonGroup\n          className={classes.bgTransparent}\n          size='small'\n          value={alignment}\n          exclusive\n          onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n      <Grid item>\n        <ToggleButtonGroup\n          className={classes.bgTransparent}\n          size='medium'\n          value={alignment}\n          exclusive\n          onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n      <Grid item>\n        <ToggleButtonGroup\n          className={classes.bgTransparent}\n          size='large'\n          value={alignment}\n          exclusive\n          onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n    </Grid>\n  );\n}\n","export default \"import React from 'react';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport Grid from '@material-ui/core/Grid';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\nimport {makeStyles} from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  bgTransparent: {\\n    backgroundColor: 'transparent',\\n  },\\n}));\\nexport default function ToggleButtonSizes(props) {\\n  const [alignment, setAlignment] = React.useState('left');\\n\\n  const handleChange = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const classes = useStyles(props);\\n\\n  const children = [\\n    <ToggleButton key={1} value='left'>\\n      <FormatAlignLeftIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={2} value='center'>\\n      <FormatAlignCenterIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={3} value='right'>\\n      <FormatAlignRightIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={4} value='justify' disabled>\\n      <FormatAlignJustifyIcon />\\n    </ToggleButton>,\\n  ];\\n\\n  return (\\n    <Grid container spacing={2} direction='column' alignItems='center'>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          className={classes.bgTransparent}\\n          size='small'\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          className={classes.bgTransparent}\\n          size='medium'\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          className={classes.bgTransparent}\\n          size='large'\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n\";","import React from 'react';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\n\nexport default function StandaloneToggleButton() {\n  const [selected, setSelected] = React.useState(false);\n\n  return (\n    <ToggleButton\n      value='check'\n      selected={selected}\n      onChange={() => {\n        setSelected(!selected);\n      }}>\n      <CheckIcon />\n    </ToggleButton>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleToggle from './SimpleToggle';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleToggleSource from '!raw-loader!./SimpleToggle';\nimport ToggleSizes from './ToggleSizes';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ToggleSizesSource from '!raw-loader!./ToggleSizes';\nimport StandaloneToggle from './StandaloneToggle';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport StandaloneToggleSource from '!raw-loader!./StandaloneToggle';\n\nconst ToggleButtons = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Toggle Buttons'\n        description='Toggle buttons can be used to group related options.'\n        refUrl='https://material-ui.com/components/toggle-button/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Simple Toggle'\n            component={SimpleToggle}\n            source={SimpleToggleSource}\n            description='To emphasize groups of related Toggle buttons, a group should share a common container.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Toggle Size'\n            component={ToggleSizes}\n            source={ToggleSizesSource}\n            description='Fancy larger or smaller buttons? Use the size property.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Standalone toggle button'\n            component={StandaloneToggle}\n            source={StandaloneToggleSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ToggleButtons;\n","export default \"import React from 'react';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\n\\nexport default function StandaloneToggleButton() {\\n  const [selected, setSelected] = React.useState(false);\\n\\n  return (\\n    <ToggleButton\\n      value='check'\\n      selected={selected}\\n      onChange={() => {\\n        setSelected(!selected);\\n      }}>\\n      <CheckIcon />\\n    </ToggleButton>\\n  );\\n}\\n\";"],"sourceRoot":""}