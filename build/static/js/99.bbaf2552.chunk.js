(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[99],{1151:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(0);function i(e){var t=e.controlled,n=e.default,i=(e.name,e.state,a.useRef(void 0!==t).current),c=a.useState(n),l=c[0],r=c[1];return[i?t:l,a.useCallback((function(e){i||r(e)}),[])]}},1155:function(e,t,n){"use strict";var a=n(3),i=n(116),c=n(12),l=n(0),r=(n(11),n(4)),o=n(1151),s=n(1159),d=n(21),m=n(485),u=l.forwardRef((function(e,t){var n=e.autoFocus,d=e.checked,u=e.checkedIcon,h=e.classes,f=e.className,b=e.defaultChecked,p=e.disabled,k=e.icon,g=e.id,v=e.inputProps,C=e.inputRef,I=e.name,x=e.onBlur,L=e.onChange,O=e.onFocus,E=e.readOnly,y=e.required,j=e.tabIndex,S=e.type,R=e.value,N=Object(c.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),B=Object(o.a)({controlled:d,default:Boolean(b),name:"SwitchBase",state:"checked"}),z=Object(i.a)(B,2),w=z[0],G=z[1],T=Object(s.a)(),P=p;T&&"undefined"===typeof P&&(P=T.disabled);var F="checkbox"===S||"radio"===S;return l.createElement(m.a,Object(a.a)({component:"span",className:Object(r.default)(h.root,f,w&&h.checked,P&&h.disabled),disabled:P,tabIndex:null,role:void 0,onFocus:function(e){O&&O(e),T&&T.onFocus&&T.onFocus(e)},onBlur:function(e){x&&x(e),T&&T.onBlur&&T.onBlur(e)},ref:t},N),l.createElement("input",Object(a.a)({autoFocus:n,checked:d,defaultChecked:b,className:h.input,disabled:P,id:F&&g,name:I,onChange:function(e){var t=e.target.checked;G(t),L&&L(e,t)},readOnly:E,ref:C,required:y,tabIndex:j,type:S,value:R},v)),w?u:k)}));t.a=Object(d.a)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}},{name:"PrivateSwitchBase"})(u)},1159:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(0),i=n(239);function c(){return a.useContext(i.a)}},1243:function(e,t,n){"use strict";var a=n(3),i=n(12),c=n(0),l=(n(11),n(4)),r=n(1155),o=n(237),s=Object(o.a)(c.createElement("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),d=Object(o.a)(c.createElement("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),m=n(50),u=Object(o.a)(c.createElement("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),h=n(31),f=n(21),b=c.createElement(d,null),p=c.createElement(s,null),k=c.createElement(u,null),g=c.forwardRef((function(e,t){var n=e.checkedIcon,o=void 0===n?b:n,s=e.classes,d=e.color,m=void 0===d?"secondary":d,u=e.icon,f=void 0===u?p:u,g=e.indeterminate,v=void 0!==g&&g,C=e.indeterminateIcon,I=void 0===C?k:C,x=e.inputProps,L=e.size,O=void 0===L?"medium":L,E=Object(i.a)(e,["checkedIcon","classes","color","icon","indeterminate","indeterminateIcon","inputProps","size"]),y=v?I:f,j=v?I:o;return c.createElement(r.a,Object(a.a)({type:"checkbox",classes:{root:Object(l.default)(s.root,s["color".concat(Object(h.a)(m))],v&&s.indeterminate),checked:s.checked,disabled:s.disabled},color:m,inputProps:Object(a.a)({"data-indeterminate":v},x),icon:c.cloneElement(y,{fontSize:void 0===y.props.fontSize&&"small"===O?O:y.props.fontSize}),checkedIcon:c.cloneElement(j,{fontSize:void 0===j.props.fontSize&&"small"===O?O:j.props.fontSize}),ref:t},E))}));t.a=Object(f.a)((function(e){return{root:{color:e.palette.text.secondary},checked:{},disabled:{},indeterminate:{},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(m.d)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(m.d)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}}}}),{name:"MuiCheckbox"})(g)},1386:function(e,t,n){"use strict";var a=n(3),i=n(12),c=n(0),l=(n(11),n(4)),r=n(21),o=n(108),s=c.forwardRef((function(e,t){var n=e.classes,r=e.className,s=Object(i.a)(e,["classes","className"]),d=c.useContext(o.a);return c.createElement("div",Object(a.a)({className:Object(l.default)(n.root,r,"flex-start"===d.alignItems&&n.alignItemsFlexStart),ref:t},s))}));t.a=Object(r.a)((function(e){return{root:{minWidth:56,color:e.palette.action.active,flexShrink:0,display:"inline-flex"},alignItemsFlexStart:{marginTop:8}}}),{name:"MuiListItemIcon"})(s)},3152:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),c=n(1086),l=n(306),r=n(304),o=n(303),s=n(26),d=n(22),m=n(164),u=n(1077),h=n(296),f=n(1386),b=n(1124),p=n(1243),k=n(499),g=n(165),v=Object(m.a)((function(e){return{root:{margin:"auto"},paper:{width:200,height:230,overflow:"auto"},button:{margin:e.spacing(.5,0)}}}));function C(e,t){return e.filter((function(e){return-1===t.indexOf(e)}))}function I(e,t){return e.filter((function(e){return-1!==t.indexOf(e)}))}function x(){var e=v(),t=i.a.useState([]),n=Object(d.a)(t,2),a=n[0],l=n[1],r=i.a.useState([0,1,2,3]),o=Object(d.a)(r,2),m=o[0],x=o[1],L=i.a.useState([4,5,6,7]),O=Object(d.a)(L,2),E=O[0],y=O[1],j=I(a,m),S=I(a,E),R=function(e){return function(){var t=a.indexOf(e),n=Object(s.a)(a);-1===t?n.push(e):n.splice(t,1),l(n)}},N=function(t){return i.a.createElement(g.a,{className:e.paper},i.a.createElement(u.a,{dense:!0,component:"div",role:"list"},t.map((function(e){var t="transfer-list-item-".concat(e,"-label");return i.a.createElement(h.a,{key:e,role:"listitem",button:!0,onClick:R(e)},i.a.createElement(f.a,null,i.a.createElement(p.a,{checked:-1!==a.indexOf(e),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})),i.a.createElement(b.a,{id:t,primary:"List item ".concat(e+1)}))})),i.a.createElement(h.a,null)))};return i.a.createElement(c.a,{container:!0,spacing:2,justify:"center",alignItems:"center",className:e.root},i.a.createElement(c.a,{item:!0},N(m)),i.a.createElement(c.a,{item:!0},i.a.createElement(c.a,{container:!0,direction:"column",alignItems:"center"},i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){y(E.concat(m)),x([])},disabled:0===m.length,"aria-label":"move all right"},"\u226b"),i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){y(E.concat(j)),x(C(m,j)),l(C(a,j))},disabled:0===j.length,"aria-label":"move selected right"},">"),i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){x(m.concat(S)),y(C(E,S)),l(C(a,S))},disabled:0===S.length,"aria-label":"move selected left"},"<"),i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){x(m.concat(E)),y([])},disabled:0===E.length,"aria-label":"move all left"},"\u226a"))),i.a.createElement(c.a,{item:!0},N(E)))}var L=n(1082),O=n(1083),E=n(1139),y=Object(m.a)((function(e){return{root:{margin:"auto"},cardHeader:{padding:e.spacing(1,2)},list:{width:200,height:230,backgroundColor:e.palette.background.paper,overflow:"auto"},button:{margin:e.spacing(.5,0)}}}));function j(e,t){return e.filter((function(e){return-1===t.indexOf(e)}))}function S(e,t){return e.filter((function(e){return-1!==t.indexOf(e)}))}function R(){var e=y(),t=i.a.useState([]),n=Object(d.a)(t,2),a=n[0],l=n[1],r=i.a.useState([0,1,2,3]),o=Object(d.a)(r,2),m=o[0],g=o[1],v=i.a.useState([4,5,6,7]),C=Object(d.a)(v,2),I=C[0],x=C[1],R=S(a,m),N=S(a,I),B=function(e){return function(){var t=a.indexOf(e),n=Object(s.a)(a);-1===t?n.push(e):n.splice(t,1),l(n)}},z=function(e){return S(a,e).length},w=function(e){return function(){var t,n;z(e)===e.length?l(j(a,e)):l((t=a,n=e,[].concat(Object(s.a)(t),Object(s.a)(j(n,t)))))}},G=function(t,n){return i.a.createElement(L.a,null,i.a.createElement(O.a,{className:e.cardHeader,avatar:i.a.createElement(p.a,{onClick:w(n),checked:z(n)===n.length&&0!==n.length,indeterminate:z(n)!==n.length&&0!==z(n),disabled:0===n.length,inputProps:{"aria-label":"all items selected"}}),title:t,subheader:"".concat(z(n),"/").concat(n.length," selected")}),i.a.createElement(E.a,null),i.a.createElement(u.a,{className:e.list,dense:!0,component:"div",role:"list"},n.map((function(e){var t="transfer-list-all-item-".concat(e,"-label");return i.a.createElement(h.a,{key:e,role:"listitem",button:!0,onClick:B(e)},i.a.createElement(f.a,null,i.a.createElement(p.a,{checked:-1!==a.indexOf(e),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})),i.a.createElement(b.a,{id:t,primary:"List item ".concat(e+1)}))})),i.a.createElement(h.a,null)))};return i.a.createElement(c.a,{container:!0,spacing:2,justify:"center",alignItems:"center",className:e.root},i.a.createElement(c.a,{item:!0},G("Choices",m)),i.a.createElement(c.a,{item:!0},i.a.createElement(c.a,{container:!0,direction:"column",alignItems:"center"},i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){x(I.concat(R)),g(j(m,R)),l(j(a,R))},disabled:0===R.length,"aria-label":"move selected right"},">"),i.a.createElement(k.a,{variant:"outlined",size:"small",className:e.button,onClick:function(){g(m.concat(N)),x(j(I,N)),l(j(a,N))},disabled:0===N.length,"aria-label":"move selected left"},"<"))),i.a.createElement(c.a,{item:!0},G("Chosen",I)))}t.default=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(r.a,{title:"Transfer List",description:"transfer list (or shuttle) enables the user to move one or more list items between lists.",refUrl:"https://material-ui.com/components/transfer-list/"}),i.a.createElement(o.a,null,i.a.createElement(c.a,{item:!0,xs:12,lg:6},i.a.createElement(l.a,{title:"Simple Transfer List",component:x,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper className={classes.paper}>\n      <List dense component='div' role='list'>\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role='listitem'\n              button\n              onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{'aria-labelledby': labelId}}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify='center'\n      alignItems='center'\n      className={classes.root}>\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction='column' alignItems='center'>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label='move all right'>\n            \u226b\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label='move selected right'>\n            &gt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label='move selected left'>\n            &lt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label='move all left'>\n            \u226a\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n",description:"For completeness, this example includes buttons for move all, but not every transfer list needs these."})),i.a.createElement(c.a,{item:!0,xs:12,lg:6},i.a.createElement(l.a,{title:"Enhanced Transfer List",component:R,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={\n              numberOfChecked(items) === items.length && items.length !== 0\n            }\n            indeterminate={\n              numberOfChecked(items) !== items.length &&\n              numberOfChecked(items) !== 0\n            }\n            disabled={items.length === 0}\n            inputProps={{'aria-label': 'all items selected'}}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <List className={classes.list} dense component='div' role='list'>\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role='listitem'\n              button\n              onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{'aria-labelledby': labelId}}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify='center'\n      alignItems='center'\n      className={classes.root}>\n      <Grid item>{customList('Choices', left)}</Grid>\n      <Grid item>\n        <Grid container direction='column' alignItems='center'>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label='move selected right'>\n            &gt;\n          </Button>\n          <Button\n            variant='outlined'\n            size='small'\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label='move selected left'>\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n",description:"This example exchanges the move all buttons for a select all / select none checkbox, and adds a counter."}))))}}}]);
//# sourceMappingURL=99.bbaf2552.chunk.js.map