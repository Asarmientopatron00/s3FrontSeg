(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[144],{3108:function(e,n,a){"use strict";a.r(n);var t=a(0),l=a.n(t),o=a(1081),r=a(306),m=a(305),i=a(304),u=a(2),c=a(8),s=a(22),p=a(164),v=a(1405),g=a(1115),h=a(1353),d=a(1314),E=a(1532),f=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120},selectEmpty:{marginTop:e.spacing(2)}}}));function C(){var e=f(),n=l.a.useState({age:"",name:"hai"}),a=Object(s.a)(n,2),t=a[0],o=a[1],r=l.a.useRef(null),m=l.a.useState(0),i=Object(s.a)(m,2),p=i[0],C=i[1];function y(e){o((function(n){return Object(c.a)(Object(c.a)({},n),{},Object(u.a)({},e.target.name,e.target.value))}))}return l.a.useEffect((function(){C(r.current.offsetWidth)}),[]),l.a.createElement("form",{className:e.root,autoComplete:"off"},l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-simple"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-simple"}},l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-helper"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-helper"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Some important helper text")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(E.a,{value:t.age,onChange:y,displayEmpty:!0,name:"age",className:e.selectEmpty},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Without label")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{shrink:!0,htmlFor:"age-label-placeholder"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-label-Skeleton"},displayEmpty:!0,name:"age",className:e.selectEmpty},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Label + placeholder")),l.a.createElement(d.a,{className:e.formControl,disabled:!0},l.a.createElement(v.a,{htmlFor:"name-disabled"},"Name"),l.a.createElement(E.a,{value:t.name,onChange:y,inputProps:{name:"name",id:"name-disabled"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:"hai"},"Hai"),l.a.createElement(g.a,{value:"olivier"},"Olivier"),l.a.createElement(g.a,{value:"kevin"},"Kevin")),l.a.createElement(h.a,null,"Disabled")),l.a.createElement(d.a,{className:e.formControl,error:!0},l.a.createElement(v.a,{htmlFor:"name-error"},"Name"),l.a.createElement(E.a,{value:t.name,onChange:y,name:"name",renderValue:function(e){return"\u26a0\ufe0f  - ".concat(e)},inputProps:{id:"name-error"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:"hai"},"Hai"),l.a.createElement(g.a,{value:"olivier"},"Olivier"),l.a.createElement(g.a,{value:"kevin"},"Kevin")),l.a.createElement(h.a,null,"Error")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"name-readonly"},"Name"),l.a.createElement(E.a,{value:t.name,onChange:y,inputProps:{name:"name",id:"name-readonly",readOnly:!0}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:"hai"},"Hai"),l.a.createElement(g.a,{value:"olivier"},"Olivier"),l.a.createElement(g.a,{value:"kevin"},"Kevin")),l.a.createElement(h.a,null,"Read only")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-auto-width"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-auto-width"},autoWidth:!0},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Auto width")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(E.a,{value:t.age,onChange:y,name:"age",displayEmpty:!0,className:e.selectEmpty},l.a.createElement(g.a,{value:"",disabled:!0},"Placeholder"),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Placeholder")),l.a.createElement(d.a,{required:!0,className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-required"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,name:"age",inputProps:{id:"age-required"},className:e.selectEmpty},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty")),l.a.createElement(h.a,null,"Required")),l.a.createElement(d.a,{variant:"outlined",className:e.formControl},l.a.createElement(v.a,{ref:r,htmlFor:"outlined-age-simple"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,labelWidth:p,inputProps:{name:"age",id:"outlined-age-simple"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))),l.a.createElement(d.a,{variant:"filled",className:e.formControl},l.a.createElement(v.a,{htmlFor:"filled-age-simple"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"filled-age-simple"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))))}var y=a(2168),I=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120},selectEmpty:{marginTop:e.spacing(2)}}}));function b(){var e=I(),n=l.a.useState({age:"",name:"hai"}),a=Object(s.a)(n,2),t=a[0],o=a[1],r=l.a.useRef(null),m=l.a.useState(0),i=Object(s.a)(m,2),p=i[0],g=i[1];l.a.useEffect((function(){g(r.current.offsetWidth)}),[]);var f=function(e){return function(n){o(Object(c.a)(Object(c.a)({},t),{},Object(u.a)({},e,n.target.value)))}};return l.a.createElement("div",{className:e.root},l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-native-simple"},"Age"),l.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-simple"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty"))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-native-helper"},"Age"),l.a.createElement(y.a,{value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-helper"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"Some important helper text")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(y.a,{value:t.age,onChange:f("age"),name:"age",className:e.selectEmpty,inputProps:{"aria-label":"age"}},l.a.createElement("option",{value:""},"None"),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"With visually hidden label")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{shrink:!0,htmlFor:"age-native-label-placeholder"},"Age"),l.a.createElement(y.a,{value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-label-Skeleton"}},l.a.createElement("option",{value:""},"None"),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"Label + placeholder")),l.a.createElement(d.a,{className:e.formControl,disabled:!0},l.a.createElement(v.a,{htmlFor:"name-native-disabled"},"Name"),l.a.createElement(y.a,{value:t.name,onChange:f("name"),inputProps:{name:"name",id:"name-native-disabled"}},l.a.createElement("option",{value:""}),l.a.createElement("optgroup",{label:"Author"},l.a.createElement("option",{value:"hai"},"Hai")),l.a.createElement("optgroup",{label:"Contributors"},l.a.createElement("option",{value:"olivier"},"Olivier"),l.a.createElement("option",{value:"kevin"},"Kevin"))),l.a.createElement(h.a,null,"Disabled")),l.a.createElement(d.a,{className:e.formControl,error:!0},l.a.createElement(v.a,{htmlFor:"name-native-error"},"Name"),l.a.createElement(y.a,{value:t.name,onChange:f("name"),name:"name",inputProps:{id:"name-native-error"}},l.a.createElement("option",{value:""}),l.a.createElement("optgroup",{label:"Author"},l.a.createElement("option",{value:"hai"},"Hai")),l.a.createElement("optgroup",{label:"Contributors"},l.a.createElement("option",{value:"olivier"},"Olivier"),l.a.createElement("option",{value:"kevin"},"Kevin"))),l.a.createElement(h.a,null,"Error")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"uncontrolled-native"},"Name"),l.a.createElement(y.a,{defaultValue:30,inputProps:{name:"name",id:"uncontrolled-native"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"Uncontrolled")),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(y.a,{className:e.selectEmpty,value:t.age,name:"age",onChange:f("age"),inputProps:{"aria-label":"age"}},l.a.createElement("option",{value:"",disabled:!0},"Placeholder"),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"Placeholder")),l.a.createElement(d.a,{required:!0,className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-native-required"},"Age"),l.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),name:"age",inputProps:{id:"age-native-required"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty")),l.a.createElement(h.a,null,"Required")),l.a.createElement(d.a,{variant:"outlined",className:e.formControl},l.a.createElement(v.a,{ref:r,htmlFor:"outlined-age-native-simple"},"Age"),l.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),labelWidth:p,inputProps:{name:"age",id:"outlined-age-native-simple"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty"))),l.a.createElement(d.a,{variant:"filled",className:e.formControl},l.a.createElement(v.a,{htmlFor:"filled-age-native-simple"},"Age"),l.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),inputProps:{name:"age",id:"filled-age-native-simple"}},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty"))))}var T=a(21),N=a(1085),F=Object(T.a)((function(e){return{root:{"label + &":{marginTop:e.spacing(3)}},input:{borderRadius:4,position:"relative",backgroundColor:e.palette.background.paper,border:"1px solid #ced4da",fontSize:16,padding:"10px 26px 10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{borderRadius:4,borderColor:"#80bdff",boxShadow:"0 0 0 0.2rem rgba(0,123,255,.25)"}}}}))(N.a),S=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)}}}));function M(){var e=S(),n=l.a.useState(""),a=Object(s.a)(n,2),t=a[0],o=a[1],r=function(e){o(e.target.value)};return l.a.createElement("form",{className:e.root,autoComplete:"off"},l.a.createElement(d.a,{className:e.margin},l.a.createElement(v.a,{htmlFor:"age-customized-input"},"Age"),l.a.createElement(F,{id:"age-customized-input"})),l.a.createElement(d.a,{className:e.margin},l.a.createElement(v.a,{htmlFor:"age-customized-select"},"Age"),l.a.createElement(E.a,{value:t,onChange:r,input:l.a.createElement(F,{name:"age",id:"age-customized-select"})},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))),l.a.createElement(d.a,{className:e.margin},l.a.createElement(v.a,{htmlFor:"age-customized-native-simple"},"Age"),l.a.createElement(y.a,{value:t,onChange:r,input:l.a.createElement(F,{name:"age",id:"age-customized-native-simple"})},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty"))))}var x=a(4),L=a(57),k=a(1403),P=a(1119),w=a(1233),O=a(1257),A=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120,maxWidth:300},chips:{display:"flex",flexWrap:"wrap"},chip:{margin:2},noLabel:{marginTop:e.spacing(3)}}})),H={PaperProps:{style:{maxHeight:224,width:250}}},W=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function j(e,n,a){return{fontWeight:-1===n.indexOf(e)?a.typography.fontWeightRegular:a.typography.fontWeightMedium}}function R(){var e=A(),n=Object(L.a)(),a=l.a.useState([]),t=Object(s.a)(a,2),o=t[0],r=t[1];function m(e){r(e.target.value)}return l.a.createElement("div",{className:e.root},l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"select-multiple"},"Name"),l.a.createElement(E.a,{multiple:!0,value:o,onChange:m,input:l.a.createElement(k.a,{id:"select-multiple"}),MenuProps:H},W.map((function(e){return l.a.createElement(g.a,{key:e,value:e,style:j(e,o,n)},e)})))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"select-multiple-checkbox"},"Tag"),l.a.createElement(E.a,{multiple:!0,value:o,onChange:m,input:l.a.createElement(k.a,{id:"select-multiple-checkbox"}),renderValue:function(e){return e.join(", ")},MenuProps:H},W.map((function(e){return l.a.createElement(g.a,{key:e,value:e},l.a.createElement(w.a,{checked:o.indexOf(e)>-1}),l.a.createElement(P.a,{primary:e}))})))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"select-multiple-chip"},"Chip"),l.a.createElement(E.a,{multiple:!0,value:o,onChange:m,input:l.a.createElement(k.a,{id:"select-multiple-chip"}),renderValue:function(n){return l.a.createElement("div",{className:e.chips},n.map((function(n){return l.a.createElement(O.a,{key:n,label:n,className:e.chip})})))},MenuProps:H},W.map((function(e){return l.a.createElement(g.a,{key:e,value:e,style:j(e,o,n)},e)})))),l.a.createElement(d.a,{className:Object(x.default)(e.formControl,e.noLabel)},l.a.createElement(E.a,{multiple:!0,displayEmpty:!0,value:o,onChange:m,input:l.a.createElement(k.a,{id:"select-multiple-placeholder"}),renderValue:function(e){return 0===e.length?l.a.createElement("em",null,"Placeholder"):e.join(", ")},MenuProps:H},l.a.createElement(g.a,{disabled:!0,value:""},l.a.createElement("em",null,"Placeholder")),W.map((function(e){return l.a.createElement(g.a,{key:e,value:e,style:j(e,o,n)},e)})))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{shrink:!0,htmlFor:"select-multiple-native"},"Native"),l.a.createElement(E.a,{multiple:!0,native:!0,value:o,onChange:function(e){for(var n=e.target.options,a=[],t=0,l=n.length;t<l;t+=1)n[t].selected&&a.push(n[t].value);r(a)},inputProps:{id:"select-multiple-native"}},W.map((function(e){return l.a.createElement("option",{key:e,value:e},e)})))))}var D=a(493),B=Object(p.a)((function(e){return{button:{display:"block",marginTop:e.spacing(2)},formControl:{margin:e.spacing(1),minWidth:120}}}));function V(){var e=B(),n=l.a.useState(""),a=Object(s.a)(n,2),t=a[0],o=a[1],r=l.a.useState(!1),m=Object(s.a)(r,2),i=m[0],u=m[1];function c(){u(!0)}return l.a.createElement("form",{autoComplete:"off"},l.a.createElement(D.a,{className:e.button,onClick:c},"Open the select"),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"demo-controlled-open-select"},"Age"),l.a.createElement(E.a,{open:i,onClose:function(){u(!1)},onOpen:c,value:t,onChange:function(e){o(e.target.value)},inputProps:{name:"age",id:"demo-controlled-open-select"}},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))))}var q=a(1303),z=a(1377),K=a(1376),U=a(1731),_=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120}}}));function G(){var e=_(),n=l.a.useState({open:!1,age:""}),a=Object(s.a)(n,2),t=a[0],o=a[1],r=function(e){return function(n){o(Object(c.a)(Object(c.a)({},t),{},Object(u.a)({},e,Number(n.target.value))))}};function m(){o(Object(c.a)(Object(c.a)({},t),{},{open:!1}))}return l.a.createElement("div",null,l.a.createElement(D.a,{onClick:function(){o(Object(c.a)(Object(c.a)({},t),{},{open:!0}))}},"Open select dialog"),l.a.createElement(q.a,{disableBackdropClick:!0,disableEscapeKeyDown:!0,open:t.open,onClose:m},l.a.createElement(U.a,null,"Fill the form"),l.a.createElement(K.a,null,l.a.createElement("form",{className:e.container},l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-native-simple"},"Age"),l.a.createElement(E.a,{native:!0,value:t.age,onChange:r("age"),input:l.a.createElement(k.a,{id:"age-native-simple"})},l.a.createElement("option",{value:""}),l.a.createElement("option",{value:10},"Ten"),l.a.createElement("option",{value:20},"Twenty"),l.a.createElement("option",{value:30},"Thirty"))),l.a.createElement(d.a,{className:e.formControl},l.a.createElement(v.a,{htmlFor:"age-simple"},"Age"),l.a.createElement(E.a,{value:t.age,onChange:r("age"),input:l.a.createElement(k.a,{id:"age-simple"})},l.a.createElement(g.a,{value:""},l.a.createElement("em",null,"None")),l.a.createElement(g.a,{value:10},"Ten"),l.a.createElement(g.a,{value:20},"Twenty"),l.a.createElement(g.a,{value:30},"Thirty"))))),l.a.createElement(z.a,null,l.a.createElement(D.a,{onClick:m,color:"primary"},"Cancel"),l.a.createElement(D.a,{onClick:m,color:"primary"},"Ok"))))}n.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(m.a,{title:"Selects",description:"Select components are used for collecting user provided information from a list of options",refUrl:"https://material-ui.com/components/selects/"}),l.a.createElement(i.a,null,l.a.createElement(o.a,{item:!0,xs:12},l.a.createElement(r.a,{title:"Simple Select",component:C,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SimpleSelect() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setValues((oldValues) => ({\n      ...oldValues,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  return (\n    <form className={classes.root} autoComplete='off'>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-simple',\n          }}>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-helper',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          displayEmpty\n          name='age'\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Without label</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='age-label-placeholder'>\n          Age\n        </InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-label-Skeleton',\n          }}\n          displayEmpty\n          name='age'\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Label + placeholder</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'name-disabled',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          name='name'\n          renderValue={(value) => `\u26a0\ufe0f  - ${value}`}\n          inputProps={{\n            id: 'name-error',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\n        <Select\n          value={values.name}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'name-readonly',\n            readOnly: true,\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value='hai'>Hai</MenuItem>\n          <MenuItem value='olivier'>Olivier</MenuItem>\n          <MenuItem value='kevin'>Kevin</MenuItem>\n        </Select>\n        <FormHelperText>Read only</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'age-auto-width',\n          }}\n          autoWidth>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Auto width</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          name='age'\n          displayEmpty\n          className={classes.selectEmpty}>\n          <MenuItem value='' disabled>\n            Placeholder\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Placeholder</FormHelperText>\n      </FormControl>\n      <FormControl required className={classes.formControl}>\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          name='age'\n          inputProps={{\n            id: 'age-required',\n          }}\n          className={classes.selectEmpty}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n      <FormControl variant='outlined' className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\n          Age\n        </InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: 'age',\n            id: 'outlined-age-simple',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant='filled' className={classes.formControl}>\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\n        <Select\n          value={values.age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'filled-age-simple',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n",description:"Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element"})),l.a.createElement(o.a,{item:!0,xs:12},l.a.createElement(r.a,{title:"Native Select",component:b,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function NativeSelects() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = (name) => (event) => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-helper',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          name='age'\n          className={classes.selectEmpty}\n          inputProps={{'aria-label': 'age'}}>\n          <option value=''>None</option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>With visually hidden label</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\n          Age\n        </InputLabel>\n        <NativeSelect\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-label-Skeleton',\n          }}>\n          <option value=''>None</option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Label + placeholder</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\n        <NativeSelect\n          value={state.name}\n          onChange={handleChange('name')}\n          inputProps={{\n            name: 'name',\n            id: 'name-native-disabled',\n          }}>\n          <option value='' />\n          <optgroup label='Author'>\n            <option value='hai'>Hai</option>\n          </optgroup>\n          <optgroup label='Contributors'>\n            <option value='olivier'>Olivier</option>\n            <option value='kevin'>Kevin</option>\n          </optgroup>\n        </NativeSelect>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\n        <NativeSelect\n          value={state.name}\n          onChange={handleChange('name')}\n          name='name'\n          inputProps={{\n            id: 'name-native-error',\n          }}>\n          <option value='' />\n          <optgroup label='Author'>\n            <option value='hai'>Hai</option>\n          </optgroup>\n          <optgroup label='Contributors'>\n            <option value='olivier'>Olivier</option>\n            <option value='kevin'>Kevin</option>\n          </optgroup>\n        </NativeSelect>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\n        <NativeSelect\n          defaultValue={30}\n          inputProps={{\n            name: 'name',\n            id: 'uncontrolled-native',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Uncontrolled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          className={classes.selectEmpty}\n          value={state.age}\n          name='age'\n          onChange={handleChange('age')}\n          inputProps={{'aria-label': 'age'}}>\n          <option value='' disabled>\n            Placeholder\n          </option>\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n        <FormHelperText>Placeholder</FormHelperText>\n      </FormControl>\n      <FormControl required className={classes.formControl}>\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          name='age'\n          inputProps={{\n            id: 'age-native-required',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n      <FormControl variant='outlined' className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\n          Age\n        </InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: 'age',\n            id: 'outlined-age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n      <FormControl variant='filled' className={classes.formControl}>\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange('age')}\n          inputProps={{\n            name: 'age',\n            id: 'filled-age-native-simple',\n          }}>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",description:"As the user experience can be improved on mobile using the native select of the platform, we allow such pattern."})),l.a.createElement(o.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Customized selects",component:M,source:"import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <form className={classes.root} autoComplete='off'>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\n        <BootstrapInput id='age-customized-input' />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\n        <Select\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\n        <NativeSelect\n          value={age}\n          onChange={handleChange}\n          input={\n            <BootstrapInput name='age' id='age-customized-native-simple' />\n          }>\n          <option value='' />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </form>\n  );\n}\n",description:"The first step is to style the InputBase component. Once it's styled, you can either use it directly as a text field or provide it to the select input property to have a select field.."})),l.a.createElement(o.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Multiple Select",component:R,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  function handleChange(event) {\n    setPersonName(event.target.value);\n  }\n\n  function handleChangeMultiple(event) {\n    const {options} = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple' />}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-checkbox' />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-chip' />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<Input id='select-multiple-placeholder' />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}>\n          <MenuItem disabled value=''>\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor='select-multiple-native'>\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          onChange={handleChangeMultiple}\n          inputProps={{\n            id: 'select-multiple-native',\n          }}>\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",description:"The Select component can handle multiple selections. It's enabled with the multiple property."})),l.a.createElement(o.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Controlled Open Select",component:V,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function ControlledOpenSelect() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  function handleChange(event) {\n    setAge(event.target.value);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <form autoComplete='off'>\n      <Button className={classes.button} onClick={handleOpen}>\n        Open the select\n      </Button>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\n        <Select\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={age}\n          onChange={handleChange}\n          inputProps={{\n            name: 'age',\n            id: 'demo-controlled-open-select',\n          }}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n"})),l.a.createElement(o.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"With a Dialog",component:G,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function DialogSelect() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    age: '',\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: Number(event.target.value)});\n  };\n\n  function handleClickOpen() {\n    setState({...state, open: true});\n  }\n\n  function handleClose() {\n    setState({...state, open: false});\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={state.open}\n        onClose={handleClose}>\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\n              <Select\n                native\n                value={state.age}\n                onChange={handleChange('age')}\n                input={<Input id='age-native-simple' />}>\n                <option value='' />\n                <option value={10}>Ten</option>\n                <option value={20}>Twenty</option>\n                <option value={30}>Thirty</option>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\n              <Select\n                value={state.age}\n                onChange={handleChange('age')}\n                input={<Input id='age-simple' />}>\n                <MenuItem value=''>\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color='primary'>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n",description:"While it's discouraged by the Material Design specification, you can use a select inside a dialog."}))))}}}]);
//# sourceMappingURL=144.c03800a7.chunk.js.map