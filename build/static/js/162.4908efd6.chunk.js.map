{"version":3,"sources":["modules/thirdParty/googleMap/Directions/Components/MapDirections.js","modules/thirdParty/googleMap/Directions/index.js","webpack:///./src/modules/thirdParty/googleMap/Directions/Components/MapDirections.js?6693"],"names":["google","window","DirectionsExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","center","directions","MapDirections","state","origin","maps","LatLng","destination","DirectionsService","route","this","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","containerElement","className","mapElement","Component","Directions","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"iNAGMA,EAASC,OAAOD,OAEhBE,EAA6BC,yBAAc,SAACC,GAAD,OAC/C,kBAAC,YAAD,CAAWC,YAAa,EAAGC,cAAeF,EAAMG,QAC7CH,EAAMI,YAAc,kBAAC,qBAAD,CAAoBA,WAAYJ,EAAMI,iBAO1CC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,IAAIX,EAAOY,KAAKC,OAAO,UAAW,UAC1CC,YAAa,IAAId,EAAOY,KAAKC,OAAO,UAAW,UAC/CL,WAAY,MALF,E,gEASO,IAAD,QACQ,IAAIR,EAAOY,KAAKG,mBAExBC,MAChB,CACEL,OAAQM,KAAKP,MAAMC,OACnBG,YAAaG,KAAKP,MAAMI,YACxBI,WAAYlB,EAAOY,KAAKO,WAAWC,UAErC,SAACC,EAAQC,GACHA,IAAWtB,EAAOY,KAAKW,iBAAiBC,GAC1C,EAAKC,SAAS,CACZjB,WAAYa,IAGdK,QAAQC,MAAR,oCAA2CN,S,+BAOjD,OACE,kBAACnB,EAAD,CACE0B,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BtB,OAAQU,KAAKP,MAAMC,OACnBH,WAAYS,KAAKP,MAAMF,iB,GAvCYuB,aCmB5BC,UAtBI,WACjB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,iCACNC,YAAY,kDACZC,OAAO,mGAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,iBACNQ,UAAWjC,EACXkC,OCzBG","file":"static/js/162.4908efd6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from 'react-google-maps';\n\nconst google = window.google;\n\nconst DirectionsExampleGoogleMap = withGoogleMap((props) => (\n  <GoogleMap defaultZoom={7} defaultCenter={props.center}>\n    {props.directions && <DirectionsRenderer directions={props.directions} />}\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapDirections extends Component {\n  constructor() {\n    super();\n    this.state = {\n      origin: new google.maps.LatLng(41.85073, -87.65126),\n      destination: new google.maps.LatLng(41.85258, -87.65141),\n      directions: null,\n    };\n  }\n\n  componentDidMount() {\n    const DirectionsService = new google.maps.DirectionsService();\n\n    DirectionsService.route(\n      {\n        origin: this.state.origin,\n        destination: this.state.destination,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result,\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      },\n    );\n  }\n\n  render() {\n    return (\n      <DirectionsExampleGoogleMap\n        containerElement={\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\n        }\n        mapElement={<div className='cr-embed-responsive-item' />}\n        center={this.state.origin}\n        directions={this.state.directions}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport MapDirections from './Components/MapDirections';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapDirectionsSource from '!raw-loader!./Components/MapDirections';\n\nconst Directions = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Directions Renderer Google Map'\n        description='A wrapper around google.maps.DirectionsRenderer'\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#DirectionsRenderer'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Directions Map'\n            component={MapDirections}\n            source={MapDirectionsSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Directions;\n","export default \"import React, {Component} from 'react';\\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from 'react-google-maps';\\n\\nconst google = window.google;\\n\\nconst DirectionsExampleGoogleMap = withGoogleMap((props) => (\\n  <GoogleMap defaultZoom={7} defaultCenter={props.center}>\\n    {props.directions && <DirectionsRenderer directions={props.directions} />}\\n  </GoogleMap>\\n));\\n\\n/*\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\n */\\nexport default class MapDirections extends Component {\\n  constructor() {\\n    super();\\n    this.state = {\\n      origin: new google.maps.LatLng(41.85073, -87.65126),\\n      destination: new google.maps.LatLng(41.85258, -87.65141),\\n      directions: null,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    const DirectionsService = new google.maps.DirectionsService();\\n\\n    DirectionsService.route(\\n      {\\n        origin: this.state.origin,\\n        destination: this.state.destination,\\n        travelMode: google.maps.TravelMode.DRIVING,\\n      },\\n      (result, status) => {\\n        if (status === google.maps.DirectionsStatus.OK) {\\n          this.setState({\\n            directions: result,\\n          });\\n        } else {\\n          console.error(`error fetching directions ${result}`);\\n        }\\n      },\\n    );\\n  }\\n\\n  render() {\\n    return (\\n      <DirectionsExampleGoogleMap\\n        containerElement={\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\n        }\\n        mapElement={<div className='cr-embed-responsive-item' />}\\n        center={this.state.origin}\\n        directions={this.state.directions}\\n      />\\n    );\\n  }\\n}\\n\";"],"sourceRoot":""}