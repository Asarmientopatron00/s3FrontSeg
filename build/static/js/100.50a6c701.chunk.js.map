{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/Face.js","../node_modules/@material-ui/icons/TagFaces.js","modules/muiComponents/dataDisplay/Chips/SimpleChip.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/SimpleChip.js?c391","modules/muiComponents/dataDisplay/Chips/OutlinedChips.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/OutlinedChips.js?6bc2","modules/muiComponents/dataDisplay/Chips/ChipArray.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/ChipArray.js?3df1","modules/muiComponents/dataDisplay/Chips/SmallChip.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/SmallChip.js?ba34","modules/muiComponents/dataDisplay/Chips/OutlinedVariant.js","modules/muiComponents/dataDisplay/Chips/index.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/OutlinedVariant.js?df6c"],"names":["createSvgIcon","React","d","isDeleteKeyboardEvent","keyboardEvent","key","Chip","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyDown","onKeyUp","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","clsx","concat","capitalize","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","_extends","role","undefined","root","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","preventDefault","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","fade","text","primary","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","contrastText","dark","secondary","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","useStyles","makeStyles","flexWrap","chip","spacing","Chips","handleDelete","alert","handleClick","Avatar","alt","src","href","OutlinedChips","ChipsArray","useState","chipData","setChipData","Paper","map","data","chipToDelete","chips","filter","SmallChips","SmallOutlinedChips","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","SimpleChip","source","SmallChip","OutlinedVariant","lg","ChipArray"],"mappings":"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","file":"static/js/100.50a6c701.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), 'Face');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"\n}), 'TagFaces');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Chips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label='Basic Chip' className={classes.chip} />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\r\n        }\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function Chips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip label='Basic Chip' className={classes.chip} />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\\r\\n        }\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function OutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label='Basic Chip' className={classes.chip} variant='outlined' />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\r\n        }\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n        variant='outlined'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function OutlinedChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip label='Basic Chip' className={classes.chip} variant='outlined' />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\\r\\n        }\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function ChipsArray() {\n  const classes = useStyles();\n  const [chipData, setChipData] = React.useState([\n    {key: 0, label: 'Angular'},\n    {key: 1, label: 'jQuery'},\n    {key: 2, label: 'Polymer'},\n    {key: 3, label: 'React'},\n    {key: 4, label: 'Vue.js'},\n  ]);\n\n  const handleDelete = (chipToDelete) => () => {\n    if (chipToDelete.label === 'React') {\n      alert('Why would you want to delete React?! :)');\n      return;\n    }\n\n    setChipData((chips) =>\n      chips.filter((chip) => chip.key !== chipToDelete.key),\n    );\n  };\n\n  return (\n    <Paper className={classes.root}>\n      {chipData.map((data) => {\n        let icon;\n\n        if (data.label === 'React') {\n          icon = <TagFacesIcon />;\n        }\n\n        return (\n          <Chip\n            key={data.key}\n            icon={icon}\n            label={data.label}\n            onDelete={handleDelete(data)}\n            className={classes.chip}\n          />\n        );\n      })}\n    </Paper>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Chip from '@material-ui/core/Chip';\\nimport Paper from '@material-ui/core/Paper';\\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    flexWrap: 'wrap',\\n    padding: theme.spacing(0.5),\\n  },\\n  chip: {\\n    margin: theme.spacing(0.5),\\n  },\\n}));\\n\\nexport default function ChipsArray() {\\n  const classes = useStyles();\\n  const [chipData, setChipData] = React.useState([\\n    {key: 0, label: 'Angular'},\\n    {key: 1, label: 'jQuery'},\\n    {key: 2, label: 'Polymer'},\\n    {key: 3, label: 'React'},\\n    {key: 4, label: 'Vue.js'},\\n  ]);\\n\\n  const handleDelete = (chipToDelete) => () => {\\n    if (chipToDelete.label === 'React') {\\n      alert('Why would you want to delete React?! :)');\\n      return;\\n    }\\n\\n    setChipData((chips) =>\\n      chips.filter((chip) => chip.key !== chipToDelete.key),\\n    );\\n  };\\n\\n  return (\\n    <Paper className={classes.root}>\\n      {chipData.map((data) => {\\n        let icon;\\n\\n        if (data.label === 'React') {\\n          icon = <TagFacesIcon />;\\n        }\\n\\n        return (\\n          <Chip\\n            key={data.key}\\n            icon={icon}\\n            label={data.label}\\n            onDelete={handleDelete(data)}\\n            className={classes.chip}\\n          />\\n        );\\n      })}\\n    </Paper>\\n  );\\n}\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip size='small' label='Basic Chip' className={classes.chip} />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\r\n        }\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SmallChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip size='small' label='Basic Chip' className={classes.chip} />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\\r\\n        }\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallOutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Basic Chip'\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\r\n        }\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport SimpleChip from './SimpleChip';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleChipSource from '!raw-loader!./SimpleChip';\nimport OutlinedChips from './OutlinedChips';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport OutlinedChipsSource from '!raw-loader!./OutlinedChips';\nimport ChipArray from './ChipArray';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ChipArraySource from '!raw-loader!./ChipArray';\nimport SmallChip from './SmallChip';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SmallChipSource from '!raw-loader!./SmallChip';\nimport OutlinedVariant from './OutlinedVariant';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport OutlinedVariantSource from '!raw-loader!./OutlinedVariant';\n\nconst Chips = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Chips'\n        description='Chips are compact elements that represent an input, attribute, or action.'\n        refUrl='https://material-ui.com/components/chips/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Simple Chip'\n            component={SimpleChip}\n            source={SimpleChipSource}\n            description='Examples of Chips, using an image Avatar, SVG Icon Avatar, Letter and (string) Avatar..'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Outlined Chips'\n            component={OutlinedChips}\n            source={OutlinedChipsSource}\n            description='Outlined chips offer an alternative style.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Small Chip'\n            component={SmallChip}\n            source={SmallChipSource}\n            description='You can use the size prop to define a small Chip.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Outlined variant'\n            component={OutlinedVariant}\n            source={OutlinedVariantSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Chip array'\n            component={ChipArray}\n            source={ChipArraySource}\n            description='An example of rendering multiple Chips from an array of values. Deleting a chip removes it from the array. Note that since no onClick property is defined, the Chip can be focused, but does not gain depth while clicked or touched.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Chips;\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SmallOutlinedChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Basic Chip'\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar alt='Natacha' src={'https://via.placeholder.com/150'} />\\r\\n        }\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}