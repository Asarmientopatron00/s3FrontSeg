{"version":3,"sources":["modules/muiComponents/inputs/Checkboxes/DefaultCheckboxes.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/DefaultCheckboxes.js?6d16","modules/muiComponents/inputs/Checkboxes/FormControlLabelCB.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/FormControlLabelCB.js?90df","modules/muiComponents/inputs/Checkboxes/CheckboxesFormGroup.js","modules/muiComponents/inputs/Checkboxes/LabelPlacement.js","modules/muiComponents/inputs/Checkboxes/index.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/CheckboxesFormGroup.js?a9ea","webpack:///./src/modules/muiComponents/inputs/Checkboxes/LabelPlacement.js?9810"],"names":["Checkboxes","React","useState","checkedA","checkedB","checkedF","state","setState","handleChange","name","event","target","checked","Checkbox","onChange","value","inputProps","color","disabled","indeterminate","defaultChecked","GreenCheckbox","withStyles","root","green","props","CheckboxLabels","checkedG","FormGroup","row","FormControlLabel","control","label","icon","checkedIcon","fontSize","useStyles","makeStyles","theme","display","flexDirection","breakpoints","up","formControl","margin","spacing","CheckboxesGroup","classes","gilad","jason","antoine","error","filter","v","length","Box","className","FormControl","component","FormLabel","FormHelperText","required","FormControlLabelPosition","setValue","aria-label","labelPlacement","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","DefaultCheckboxes","source","FormControlLabelCB","lg","CheckboxesFormGroup","LabelPlacement"],"mappings":"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","file":"static/js/142.5ba46cd7.chunk.js","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Checkboxes() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value='checkedA'\n        inputProps={{\n          'aria-label': 'primary checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value='checkedB'\n        color='primary'\n        inputProps={{\n          'aria-label': 'secondary checkbox',\n        }}\n      />\n      <Checkbox\n        value='checkedC'\n        inputProps={{\n          'aria-label': 'uncontrolled-checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        value='checkedD'\n        inputProps={{\n          'aria-label': 'disabled checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        checked\n        value='checkedE'\n        inputProps={{\n          'aria-label': 'disabled checked checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value='checkedF'\n        indeterminate\n        inputProps={{\n          'aria-label': 'indeterminate checkbox',\n        }}\n      />\n      <Checkbox\n        defaultChecked\n        color='default'\n        value='checkedG'\n        inputProps={{\n          'aria-label': 'checkbox with default color',\n        }}\n      />\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Checkbox from '@material-ui/core/Checkbox';\\n\\nexport default function Checkboxes() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n    checkedF: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <div>\\n      <Checkbox\\n        checked={state.checkedA}\\n        onChange={handleChange('checkedA')}\\n        value='checkedA'\\n        inputProps={{\\n          'aria-label': 'primary checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        checked={state.checkedB}\\n        onChange={handleChange('checkedB')}\\n        value='checkedB'\\n        color='primary'\\n        inputProps={{\\n          'aria-label': 'secondary checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        value='checkedC'\\n        inputProps={{\\n          'aria-label': 'uncontrolled-checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        disabled\\n        value='checkedD'\\n        inputProps={{\\n          'aria-label': 'disabled checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        disabled\\n        checked\\n        value='checkedE'\\n        inputProps={{\\n          'aria-label': 'disabled checked checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        checked={state.checkedF}\\n        onChange={handleChange('checkedF')}\\n        value='checkedF'\\n        indeterminate\\n        inputProps={{\\n          'aria-label': 'indeterminate checkbox',\\n        }}\\n      />\\n      <Checkbox\\n        defaultChecked\\n        color='default'\\n        value='checkedG'\\n        inputProps={{\\n          'aria-label': 'checkbox with default color',\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {green} from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color='default' {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value='checkedA'\n          />\n        }\n        label='Secondary'\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value='checkedB'\n            color='primary'\n          />\n        }\n        label='Primary'\n      />\n      <FormControlLabel\n        control={<Checkbox value='checkedC' />}\n        label='Uncontrolled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Checkbox value='checkedD' />}\n        label='Disabled'\n      />\n      <FormControlLabel\n        disabled\n        control={<Checkbox checked value='checkedE' />}\n        label='Disabled'\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange('checkedF')}\n            value='checkedF'\n            indeterminate\n          />\n        }\n        label='Indeterminate'\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={state.checkedG}\n            onChange={handleChange('checkedG')}\n            value='checkedG'\n          />\n        }\n        label='Custom color'\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            value='checkedH'\n          />\n        }\n        label='Custom icon'\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\n            checkedIcon={<CheckBoxIcon fontSize='small' />}\n            value='checkedI'\n          />\n        }\n        label='Custom size'\n      />\n    </FormGroup>\n  );\n}\n","export default \"import React from 'react';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport {green} from '@material-ui/core/colors';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\\nimport Favorite from '@material-ui/icons/Favorite';\\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\\n\\nconst GreenCheckbox = withStyles({\\n  root: {\\n    color: green[400],\\n    '&$checked': {\\n      color: green[600],\\n    },\\n  },\\n  checked: {},\\n})((props) => <Checkbox color='default' {...props} />);\\n\\nexport default function CheckboxLabels() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n    checkedF: true,\\n    checkedG: true,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  return (\\n    <FormGroup row>\\n      <FormControlLabel\\n        control={\\n          <Checkbox\\n            checked={state.checkedA}\\n            onChange={handleChange('checkedA')}\\n            value='checkedA'\\n          />\\n        }\\n        label='Secondary'\\n      />\\n      <FormControlLabel\\n        control={\\n          <Checkbox\\n            checked={state.checkedB}\\n            onChange={handleChange('checkedB')}\\n            value='checkedB'\\n            color='primary'\\n          />\\n        }\\n        label='Primary'\\n      />\\n      <FormControlLabel\\n        control={<Checkbox value='checkedC' />}\\n        label='Uncontrolled'\\n      />\\n      <FormControlLabel\\n        disabled\\n        control={<Checkbox value='checkedD' />}\\n        label='Disabled'\\n      />\\n      <FormControlLabel\\n        disabled\\n        control={<Checkbox checked value='checkedE' />}\\n        label='Disabled'\\n      />\\n      <FormControlLabel\\n        control={\\n          <Checkbox\\n            checked={state.checkedF}\\n            onChange={handleChange('checkedF')}\\n            value='checkedF'\\n            indeterminate\\n          />\\n        }\\n        label='Indeterminate'\\n      />\\n      <FormControlLabel\\n        control={\\n          <GreenCheckbox\\n            checked={state.checkedG}\\n            onChange={handleChange('checkedG')}\\n            value='checkedG'\\n          />\\n        }\\n        label='Custom color'\\n      />\\n      <FormControlLabel\\n        control={\\n          <Checkbox\\n            icon={<FavoriteBorder />}\\n            checkedIcon={<Favorite />}\\n            value='checkedH'\\n          />\\n        }\\n        label='Custom icon'\\n      />\\n      <FormControlLabel\\n        control={\\n          <Checkbox\\n            icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\\n            checkedIcon={<CheckBoxIcon fontSize='small' />}\\n            value='checkedI'\\n          />\\n        }\\n        label='Custom size'\\n      />\\n    </FormGroup>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({...state, [name]: event.target.checked});\n  };\n\n  const {gilad, jason, antoine} = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  return (\n    <Box className={classes.root}>\n      <FormControl component='fieldset' className={classes.formControl}>\n        <FormLabel component='legend'>Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={gilad}\n                onChange={handleChange('gilad')}\n                value='gilad'\n              />\n            }\n            label='Gilad Gray'\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={jason}\n                onChange={handleChange('jason')}\n                value='jason'\n              />\n            }\n            label='Jason Killian'\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={antoine}\n                onChange={handleChange('antoine')}\n                value='antoine'\n              />\n            }\n            label='Antoine Llorca'\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl\n        required\n        error={error}\n        component='fieldset'\n        className={classes.formControl}>\n        <FormLabel component='legend'>Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={gilad}\n                onChange={handleChange('gilad')}\n                value='gilad'\n              />\n            }\n            label='Gilad Gray'\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={jason}\n                onChange={handleChange('jason')}\n                value='jason'\n              />\n            }\n            label='Jason Killian'\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={antoine}\n                onChange={handleChange('antoine')}\n                value='antoine'\n              />\n            }\n            label='Antoine Llorca'\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction FormControlLabelPosition() {\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>labelPlacement</FormLabel>\n      <FormGroup\n        aria-label='position'\n        name='position'\n        value={value}\n        onChange={handleChange}\n        row>\n        <FormControlLabel\n          value='top'\n          control={<Checkbox color='primary' />}\n          label='Top'\n          labelPlacement='top'\n        />\n        <FormControlLabel\n          value='start'\n          control={<Checkbox color='primary' />}\n          label='Start'\n          labelPlacement='start'\n        />\n        <FormControlLabel\n          value='bottom'\n          control={<Checkbox color='primary' />}\n          label='Bottom'\n          labelPlacement='bottom'\n        />\n        <FormControlLabel\n          value='end'\n          control={<Checkbox color='primary' />}\n          label='End'\n          labelPlacement='end'\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default FormControlLabelPosition;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\nimport DefaultCheckboxes from './DefaultCheckboxes';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport DefaultCheckboxesSource from '!raw-loader!./DefaultCheckboxes';\nimport FormControlLabelCB from './FormControlLabelCB';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport FormControlLabelCBSource from '!raw-loader!./FormControlLabelCB';\nimport CheckboxesFormGroup from './CheckboxesFormGroup';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CheckboxesFormGroupSource from '!raw-loader!./CheckboxesFormGroup';\nimport LabelPlacement from './LabelPlacement';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LabelPlacementSource from '!raw-loader!./LabelPlacement';\n\nconst Checkboxes = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Checkboxes'\n        description='Checkboxes allow the user to select one or more items from a set.'\n        refUrl='https://material-ui.com/components/checkboxes/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='Checkboxes'\n            component={DefaultCheckboxes}\n            source={DefaultCheckboxesSource}\n            description='Checkboxes can be used to turn an option on or off.'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ComponentCard\n            title='FormControl Label Checkboxes'\n            component={FormControlLabelCB}\n            source={FormControlLabelCBSource}\n            description='Checkbox can also be used with a label description thanks to the FormControlLabel component.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Checkboxes with FormGroup'\n            component={CheckboxesFormGroup}\n            source={CheckboxesFormGroupSource}\n            description='FormGroup is a helpful wrapper used to group selection controls components that provides an easier API.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Label placement'\n            component={LabelPlacement}\n            source={LabelPlacementSource}\n            description='You can change the placement of the label'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Checkboxes;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Box from '@material-ui/core/Box';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    [theme.breakpoints.up('sm')]: {\\n      flexDirection: 'row',\\n    },\\n  },\\n  formControl: {\\n    margin: theme.spacing(3),\\n  },\\n}));\\n\\nexport default function CheckboxesGroup() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    gilad: true,\\n    jason: false,\\n    antoine: false,\\n  });\\n\\n  const handleChange = (name) => (event) => {\\n    setState({...state, [name]: event.target.checked});\\n  };\\n\\n  const {gilad, jason, antoine} = state;\\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\\n\\n  return (\\n    <Box className={classes.root}>\\n      <FormControl component='fieldset' className={classes.formControl}>\\n        <FormLabel component='legend'>Assign responsibility</FormLabel>\\n        <FormGroup>\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={gilad}\\n                onChange={handleChange('gilad')}\\n                value='gilad'\\n              />\\n            }\\n            label='Gilad Gray'\\n          />\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={jason}\\n                onChange={handleChange('jason')}\\n                value='jason'\\n              />\\n            }\\n            label='Jason Killian'\\n          />\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={antoine}\\n                onChange={handleChange('antoine')}\\n                value='antoine'\\n              />\\n            }\\n            label='Antoine Llorca'\\n          />\\n        </FormGroup>\\n        <FormHelperText>Be careful</FormHelperText>\\n      </FormControl>\\n      <FormControl\\n        required\\n        error={error}\\n        component='fieldset'\\n        className={classes.formControl}>\\n        <FormLabel component='legend'>Pick two</FormLabel>\\n        <FormGroup>\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={gilad}\\n                onChange={handleChange('gilad')}\\n                value='gilad'\\n              />\\n            }\\n            label='Gilad Gray'\\n          />\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={jason}\\n                onChange={handleChange('jason')}\\n                value='jason'\\n              />\\n            }\\n            label='Jason Killian'\\n          />\\n          <FormControlLabel\\n            control={\\n              <Checkbox\\n                checked={antoine}\\n                onChange={handleChange('antoine')}\\n                value='antoine'\\n              />\\n            }\\n            label='Antoine Llorca'\\n          />\\n        </FormGroup>\\n        <FormHelperText>You can display an error</FormHelperText>\\n      </FormControl>\\n    </Box>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\n\\nfunction FormControlLabelPosition() {\\n  const [value, setValue] = React.useState('female');\\n\\n  function handleChange(event) {\\n    setValue(event.target.value);\\n  }\\n\\n  return (\\n    <FormControl component='fieldset'>\\n      <FormLabel component='legend'>labelPlacement</FormLabel>\\n      <FormGroup\\n        aria-label='position'\\n        name='position'\\n        value={value}\\n        onChange={handleChange}\\n        row>\\n        <FormControlLabel\\n          value='top'\\n          control={<Checkbox color='primary' />}\\n          label='Top'\\n          labelPlacement='top'\\n        />\\n        <FormControlLabel\\n          value='start'\\n          control={<Checkbox color='primary' />}\\n          label='Start'\\n          labelPlacement='start'\\n        />\\n        <FormControlLabel\\n          value='bottom'\\n          control={<Checkbox color='primary' />}\\n          label='Bottom'\\n          labelPlacement='bottom'\\n        />\\n        <FormControlLabel\\n          value='end'\\n          control={<Checkbox color='primary' />}\\n          label='End'\\n          labelPlacement='end'\\n        />\\n      </FormGroup>\\n    </FormControl>\\n  );\\n}\\n\\nexport default FormControlLabelPosition;\\n\";"],"sourceRoot":""}