{"version":3,"sources":["modules/thirdParty/recharts/Line/Components/data.js","modules/thirdParty/recharts/Line/Components/SimpleLineChart.js","modules/thirdParty/recharts/Line/Components/VerticalLineChart.js","modules/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js","modules/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js","modules/thirdParty/recharts/Line/Components/DashedLineChart.js","modules/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js","modules/thirdParty/recharts/Line/Components/LineChartConnectNulls.js","modules/thirdParty/recharts/Line/Components/SynchronizedLineChart.js","modules/thirdParty/recharts/Line/index.js","webpack:///./src/modules/thirdParty/recharts/Line/Components/SimpleLineChart.js?45cb","webpack:///./src/modules/thirdParty/recharts/Line/Components/VerticalLineChart.js?d058","webpack:///./src/modules/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js?0372","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js?1e39","webpack:///./src/modules/thirdParty/recharts/Line/Components/DashedLineChart.js?203b","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js?8bbd","webpack:///./src/modules/thirdParty/recharts/Line/Components/SynchronizedLineChart.js?0014","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartConnectNulls.js?0d20"],"names":["data","name","uv","pv","amt","SimpleLineChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","activeDot","r","VerticalLineChart","layout","CustomizedDot","this","props","cx","cy","value","x","y","fill","viewBox","d","Component","CustomizedDotLineChart","dot","LineChartWithReferenceLines","label","DashedLineChart","LineChartWithXAxisPading","padding","LineChartConnectNulls","Box","mb","connectNulls","SynchronizedLineChart","textAlign","component","syncId","LineChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source"],"mappings":"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","file":"static/js/180.23c33b7f.chunk.js","sourcesContent":["const data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\nexport default data;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst SimpleLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default SimpleLineChart;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst VerticalLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart\n      layout='vertical'\n      data={data}\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\n      <XAxis type='number' />\n      <YAxis dataKey='name' type='category' />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line dataKey='pv' stroke='#4299E1' />\n      <Line dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default VerticalLineChart;\n","import React, {Component} from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nclass CustomizedDot extends Component {\n  render() {\n    const {cx, cy, value} = this.props;\n\n    if (value > 2500) {\n      return (\n        <svg\n          x={cx - 10}\n          y={cy - 10}\n          width={20}\n          height={20}\n          fill='red'\n          viewBox='0 0 1024 1024'>\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\n        </svg>\n      );\n    }\n\n    return (\n      <svg\n        x={cx - 10}\n        y={cy - 10}\n        width={20}\n        height={20}\n        fill='green'\n        viewBox='0 0 1024 1024'>\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\n      </svg>\n    );\n  }\n}\n\nconst CustomizedDotLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line\n        type='monotone'\n        dataKey='pv'\n        stroke='#4299E1'\n        dot={<CustomizedDot />}\n      />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default CustomizedDotLineChart;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst LineChartWithReferenceLines = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <ReferenceLine x='Page C' stroke='red' label='Max PV PAGE' />\n      <ReferenceLine y={9800} label='Max' stroke='red' />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default LineChartWithReferenceLines;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst DashedLineChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line\n        type='monotone'\n        dataKey='pv'\n        stroke='#4299E1'\n        strokeDasharray='5 5'\n      />\n      <Line\n        type='monotone'\n        dataKey='uv'\n        stroke='#F04F47'\n        strokeDasharray='3 4 5 2'\n      />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default DashedLineChart;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst LineChartWithXAxisPading = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Legend />\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default LineChartWithXAxisPading;\n","import React from 'react';\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst LineChartConnectNulls = () => (\n  <ResponsiveContainer width='100%' height={600}>\n    <div>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              connectNulls={true}\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default LineChartConnectNulls;\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  Brush,\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst SynchronizedLineChart = () => (\n  <ResponsiveContainer width='100%' height={700}>\n    <Box>\n      <Box textAlign='center' component='p'>\n        A demo of synchronized AreaCharts\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box textAlign='center' component='p'>\n        Maybe some other content\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <LineChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Line\n              type='monotone'\n              dataKey='pv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='pv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n            <Brush />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </Box>\n  </ResponsiveContainer>\n);\n\nexport default SynchronizedLineChart;\n","import React from 'react';\nimport SimpleLineChart from './Components/SimpleLineChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleLineChartSource from '!raw-loader!./Components/SimpleLineChart';\nimport VerticalLineChart from './Components/VerticalLineChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport VerticalLineChartSource from '!raw-loader!./Components/VerticalLineChart';\nimport CustomizedDotLineChart from './Components/CustomizedDotLineChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedDotLineChartSource from '!raw-loader!./Components/CustomizedDotLineChart';\nimport LineChartWithReferenceLines from './Components/LineChartWithReferenceLines';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LineChartWithReferenceLinesSource from '!raw-loader!./Components/LineChartWithReferenceLines';\nimport DashedLineChart from './Components/DashedLineChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport DashedLineChartSource from '!raw-loader!./Components/DashedLineChart';\nimport LineChartWithXAxisPading from './Components/LineChartWithXAxisPading';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LineChartWithXAxisPadingSource from '!raw-loader!./Components/LineChartWithXAxisPading';\nimport LineChartConnectNulls from './Components/LineChartConnectNulls';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LineChartConnectNullsSource from '!raw-loader!./Components/LineChartConnectNulls';\nimport SynchronizedLineChart from './Components/SynchronizedLineChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SynchronizedLineChartSource from '!raw-loader!./Components/SynchronizedLineChart';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nconst LineChart = ({match}) => {\n  return (\n    <>\n      <ComponentHeader\n        title='Line Chart'\n        description='All svg elements can be added into the LineChart component, such as defs.'\n        refUrl='http://recharts.org/en-US/api/LineChart'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Line Chart'\n            component={SimpleLineChart}\n            source={SimpleLineChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Vertical Line Chart'\n            component={VerticalLineChart}\n            source={VerticalLineChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized Dot Line Chart'\n            component={CustomizedDotLineChart}\n            source={CustomizedDotLineChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Line Chart With Reference Lines'\n            component={LineChartWithReferenceLines}\n            source={LineChartWithReferenceLinesSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Dashed Line Chart'\n            component={DashedLineChart}\n            source={DashedLineChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Line Chart With X-Axis Padding'\n            component={LineChartWithXAxisPading}\n            source={LineChartWithXAxisPadingSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Synchronized Line Chart'\n            component={SynchronizedLineChart}\n            source={SynchronizedLineChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Line Chart Connect Nulls'\n            component={LineChartConnectNulls}\n            source={LineChartConnectNullsSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default LineChart;\n","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst SimpleLineChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default SimpleLineChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst VerticalLineChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart\\n      layout='vertical'\\n      data={data}\\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\\n      <XAxis type='number' />\\n      <YAxis dataKey='name' type='category' />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Line dataKey='pv' stroke='#4299E1' />\\n      <Line dataKey='uv' stroke='#F04F47' />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default VerticalLineChart;\\n\";","export default \"import React, {Component} from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nclass CustomizedDot extends Component {\\n  render() {\\n    const {cx, cy, value} = this.props;\\n\\n    if (value > 2500) {\\n      return (\\n        <svg\\n          x={cx - 10}\\n          y={cy - 10}\\n          width={20}\\n          height={20}\\n          fill='red'\\n          viewBox='0 0 1024 1024'>\\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\\n        </svg>\\n      );\\n    }\\n\\n    return (\\n      <svg\\n        x={cx - 10}\\n        y={cy - 10}\\n        width={20}\\n        height={20}\\n        fill='green'\\n        viewBox='0 0 1024 1024'>\\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\\n      </svg>\\n    );\\n  }\\n}\\n\\nconst CustomizedDotLineChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Line\\n        type='monotone'\\n        dataKey='pv'\\n        stroke='#4299E1'\\n        dot={<CustomizedDot />}\\n      />\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default CustomizedDotLineChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ReferenceLine,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst LineChartWithReferenceLines = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <ReferenceLine x='Page C' stroke='red' label='Max PV PAGE' />\\n      <ReferenceLine y={9800} label='Max' stroke='red' />\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default LineChartWithReferenceLines;\\n\";","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst DashedLineChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Line\\n        type='monotone'\\n        dataKey='pv'\\n        stroke='#4299E1'\\n        strokeDasharray='5 5'\\n      />\\n      <Line\\n        type='monotone'\\n        dataKey='uv'\\n        stroke='#F04F47'\\n        strokeDasharray='3 4 5 2'\\n      />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default DashedLineChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Legend,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst LineChartWithXAxisPading = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\\n      <YAxis />\\n      <CartesianGrid strokeDasharray='3 3' />\\n      <Tooltip />\\n      <Legend />\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\n    </LineChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default LineChartWithXAxisPading;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  AreaChart,\\n  Brush,\\n  CartesianGrid,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\nimport Box from '@material-ui/core/Box';\\n\\nconst SynchronizedLineChart = () => (\\n  <ResponsiveContainer width='100%' height={700}>\\n    <Box>\\n      <Box textAlign='center' component='p'>\\n        A demo of synchronized AreaCharts\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <LineChart\\n            data={data}\\n            syncId='anyId'\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Line\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </LineChart>\\n        </ResponsiveContainer>\\n      </Box>\\n      <Box textAlign='center' component='p'>\\n        Maybe some other content\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <LineChart\\n            data={data}\\n            syncId='anyId'\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Line\\n              type='monotone'\\n              dataKey='pv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </LineChart>\\n        </ResponsiveContainer>\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <AreaChart\\n            data={data}\\n            syncId='anyId'\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Area\\n              type='monotone'\\n              dataKey='pv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n            <Brush />\\n          </AreaChart>\\n        </ResponsiveContainer>\\n      </Box>\\n    </Box>\\n  </ResponsiveContainer>\\n);\\n\\nexport default SynchronizedLineChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  CartesianGrid,\\n  Line,\\n  LineChart,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\nimport Box from '@material-ui/core/Box';\\n\\nconst LineChartConnectNulls = () => (\\n  <ResponsiveContainer width='100%' height={600}>\\n    <div>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <LineChart\\n            data={data}\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Line\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </LineChart>\\n        </ResponsiveContainer>\\n      </Box>\\n      <Box mb={4}>\\n        <ResponsiveContainer width='100%' height={200}>\\n          <LineChart\\n            data={data}\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n            <XAxis dataKey='name' />\\n            <YAxis />\\n            <CartesianGrid strokeDasharray='3 3' />\\n            <Tooltip />\\n            <Line\\n              connectNulls={true}\\n              type='monotone'\\n              dataKey='uv'\\n              stroke='#4299E1'\\n              fill='#4299E1'\\n            />\\n          </LineChart>\\n        </ResponsiveContainer>\\n      </Box>\\n    </div>\\n  </ResponsiveContainer>\\n);\\n\\nexport default LineChartConnectNulls;\\n\";"],"sourceRoot":""}