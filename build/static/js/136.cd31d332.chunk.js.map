{"version":3,"sources":["modules/muiComponents/dataDisplay/Tooltip/SimpleTooltips.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/SimpleTooltips.js?c522","modules/muiComponents/dataDisplay/Tooltip/PositionedTooltips.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/PositionedTooltips.js?7c82","modules/muiComponents/dataDisplay/Tooltip/CustomizedTooltips.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/CustomizedTooltips.js?c954","modules/muiComponents/dataDisplay/Tooltip/TriggersTooltip.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/TriggersTooltip.js?174b","modules/muiComponents/dataDisplay/Tooltip/VariableWidth.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/VariableWidth.js?6af1","modules/muiComponents/dataDisplay/Tooltip/InteractiveTooltip.js","modules/muiComponents/dataDisplay/Tooltip/DisabledElements.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/DisabledElements.js?487f","modules/muiComponents/dataDisplay/Tooltip/TransitionsTooltip.js","modules/muiComponents/dataDisplay/Tooltip/ShowingHiding.js","modules/muiComponents/dataDisplay/Tooltip/index.js","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/InteractiveTooltip.js?7868","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/ShowingHiding.js?4950","webpack:///./src/modules/muiComponents/dataDisplay/Tooltip/TransitionsTooltip.js?eac4"],"names":["useStyles","makeStyles","theme","fab","margin","spacing","absolute","position","bottom","right","SimpleTooltips","classes","Tooltip","title","IconButton","aria-label","Fab","color","className","root","width","PositionedTooltips","Grid","container","justify","item","placement","Button","xs","lg","alignItems","direction","arrowGenerator","top","left","marginTop","height","borderWidth","borderColor","marginBottom","marginLeft","marginRight","LightTooltip","withStyles","tooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","useStylesArrow","arrow","content","display","borderStyle","popper","grey","ArrowTooltip","props","React","useState","arrowRef","setArrowRef","PopperProps","popperOptions","modifiers","enabled","Boolean","element","Fragment","ref","useStylesBootstrap","black","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","BootstrapTooltip","HtmlTooltip","maxWidth","typography","pxToRem","border","CustomizedTooltips","Typography","TriggersTooltips","open","setOpen","handleTooltipClose","disableFocusListener","disableHoverListener","disableTouchListener","ClickAwayListener","onClickAway","disablePortal","onClose","onClick","button","customWidth","noMaxWidth","longText","VariableWidth","InteractiveTooltips","interactive","DisabledTooltips","disabled","TransitionsTooltips","TransitionComponent","Fade","TransitionProps","timeout","Zoom","DelayTooltips","enterDelay","leaveDelay","Tooltips","ComponentHeader","description","refUrl","GridContainer","ComponentCard","component","source","TriggersTooltip","InteractiveTooltip","DisabledElements","ShowingHiding","TransitionsTooltip"],"mappings":"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","file":"static/js/136.cd31d332.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function SimpleTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title='Delete'>\n        <IconButton aria-label='delete'>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title='Add' aria-label='add'>\n        <Fab color='primary' className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title='Add' aria-label='add'>\n        <Fab color='secondary' className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport AddIcon from '@material-ui/icons/Add';\\nimport Fab from '@material-ui/core/Fab';\\nimport DeleteIcon from '@material-ui/icons/Delete';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  fab: {\\n    margin: theme.spacing(2),\\n  },\\n  absolute: {\\n    position: 'absolute',\\n    bottom: theme.spacing(2),\\n    right: theme.spacing(3),\\n  },\\n}));\\n\\nexport default function SimpleTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title='Delete'>\\n        <IconButton aria-label='delete'>\\n          <DeleteIcon />\\n        </IconButton>\\n      </Tooltip>\\n      <Tooltip title='Add' aria-label='add'>\\n        <Fab color='primary' className={classes.fab}>\\n          <AddIcon />\\n        </Fab>\\n      </Tooltip>\\n      <Tooltip title='Add' aria-label='add'>\\n        <Fab color='secondary' className={classes.absolute}>\\n          <AddIcon />\\n        </Fab>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function PositionedTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip title='Add' placement='top-start'>\n            <Button>top-start</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='top'>\n            <Button>top</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='top-end'>\n            <Button>top-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item xs={12} lg={6}>\n          <Tooltip title='Add' placement='left-start'>\n            <Button>left-start</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title='Add' placement='left'>\n            <Button>left</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title='Add' placement='left-end'>\n            <Button>left-end</Button>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          lg={6}\n          alignItems='flex-end'\n          direction='column'>\n          <Grid item>\n            <Tooltip title='Add' placement='right-start'>\n              <Button>right-start</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title='Add' placement='right'>\n              <Button>right</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title='Add' placement='right-end'>\n              <Button>right-end</Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip title='Add' placement='bottom-start'>\n            <Button>bottom-start</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='bottom'>\n            <Button>bottom</Button>\n          </Tooltip>\n          <Tooltip title='Add' placement='bottom-end'>\n            <Button>bottom-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    width: 500,\\n  },\\n});\\n\\nexport default function PositionedTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container justify='center'>\\n        <Grid item>\\n          <Tooltip title='Add' placement='top-start'>\\n            <Button>top-start</Button>\\n          </Tooltip>\\n          <Tooltip title='Add' placement='top'>\\n            <Button>top</Button>\\n          </Tooltip>\\n          <Tooltip title='Add' placement='top-end'>\\n            <Button>top-end</Button>\\n          </Tooltip>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify='center'>\\n        <Grid item xs={12} lg={6}>\\n          <Tooltip title='Add' placement='left-start'>\\n            <Button>left-start</Button>\\n          </Tooltip>\\n          <br />\\n          <Tooltip title='Add' placement='left'>\\n            <Button>left</Button>\\n          </Tooltip>\\n          <br />\\n          <Tooltip title='Add' placement='left-end'>\\n            <Button>left-end</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid\\n          item\\n          container\\n          xs={12}\\n          lg={6}\\n          alignItems='flex-end'\\n          direction='column'>\\n          <Grid item>\\n            <Tooltip title='Add' placement='right-start'>\\n              <Button>right-start</Button>\\n            </Tooltip>\\n          </Grid>\\n          <Grid item>\\n            <Tooltip title='Add' placement='right'>\\n              <Button>right</Button>\\n            </Tooltip>\\n          </Grid>\\n          <Grid item>\\n            <Tooltip title='Add' placement='right-end'>\\n              <Button>right-end</Button>\\n            </Tooltip>\\n          </Grid>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify='center'>\\n        <Grid item>\\n          <Tooltip title='Add' placement='bottom-start'>\\n            <Button>bottom-start</Button>\\n          </Tooltip>\\n          <Tooltip title='Add' placement='bottom'>\\n            <Button>bottom</Button>\\n          </Tooltip>\\n          <Tooltip title='Add' placement='bottom-end'>\\n            <Button>bottom-end</Button>\\n          </Tooltip>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStylesArrow = makeStyles((theme) => ({\n  tooltip: {\n    position: 'relative',\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.grey[700]),\n}));\n\nfunction ArrowTooltip(props) {\n  const {arrow, ...classes} = useStylesArrow();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nArrowTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.common.black),\n  tooltip: {\n    position: 'relative',\n    backgroundColor: theme.palette.common.black,\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px',\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px',\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0',\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0',\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const {arrow, ...classes} = useStylesBootstrap();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nBootstrapTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport default function CustomizedTooltips() {\n  return (\n    <div>\n      <LightTooltip title='Add'>\n        <Button>Light</Button>\n      </LightTooltip>\n      <ArrowTooltip title='Add'>\n        <Button>Arrow</Button>\n      </ArrowTooltip>\n      <BootstrapTooltip title='Add'>\n        <Button>Bootstrap</Button>\n      </BootstrapTooltip>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color='inherit'>Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.\n            {\"It's very engaging. Right?\"}\n          </React.Fragment>\n        }>\n        <Button>HTML</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport Typography from '@material-ui/core/Typography';\\n\\nfunction arrowGenerator(color) {\\n  return {\\n    '&[x-placement*=\\\"bottom\\\"] $arrow': {\\n      top: 0,\\n      left: 0,\\n      marginTop: '-0.95em',\\n      width: '2em',\\n      height: '1em',\\n      '&::before': {\\n        borderWidth: '0 1em 1em 1em',\\n        borderColor: `transparent transparent ${color} transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"top\\\"] $arrow': {\\n      bottom: 0,\\n      left: 0,\\n      marginBottom: '-0.95em',\\n      width: '2em',\\n      height: '1em',\\n      '&::before': {\\n        borderWidth: '1em 1em 0 1em',\\n        borderColor: `${color} transparent transparent transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"right\\\"] $arrow': {\\n      left: 0,\\n      marginLeft: '-0.95em',\\n      height: '2em',\\n      width: '1em',\\n      '&::before': {\\n        borderWidth: '1em 1em 1em 0',\\n        borderColor: `transparent ${color} transparent transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"left\\\"] $arrow': {\\n      right: 0,\\n      marginRight: '-0.95em',\\n      height: '2em',\\n      width: '1em',\\n      '&::before': {\\n        borderWidth: '1em 0 1em 1em',\\n        borderColor: `transparent transparent transparent ${color}`,\\n      },\\n    },\\n  };\\n}\\n\\nconst LightTooltip = withStyles((theme) => ({\\n  tooltip: {\\n    backgroundColor: theme.palette.common.white,\\n    color: 'rgba(0, 0, 0, 0.87)',\\n    boxShadow: theme.shadows[1],\\n    fontSize: 11,\\n  },\\n}))(Tooltip);\\n\\nconst useStylesArrow = makeStyles((theme) => ({\\n  tooltip: {\\n    position: 'relative',\\n  },\\n  arrow: {\\n    position: 'absolute',\\n    fontSize: 6,\\n    '&::before': {\\n      content: '\\\"\\\"',\\n      margin: 'auto',\\n      display: 'block',\\n      width: 0,\\n      height: 0,\\n      borderStyle: 'solid',\\n    },\\n  },\\n  popper: arrowGenerator(theme.palette.grey[700]),\\n}));\\n\\nfunction ArrowTooltip(props) {\\n  const {arrow, ...classes} = useStylesArrow();\\n  const [arrowRef, setArrowRef] = React.useState(null);\\n\\n  return (\\n    <Tooltip\\n      classes={classes}\\n      PopperProps={{\\n        popperOptions: {\\n          modifiers: {\\n            arrow: {\\n              enabled: Boolean(arrowRef),\\n              element: arrowRef,\\n            },\\n          },\\n        },\\n      }}\\n      {...props}\\n      title={\\n        <React.Fragment>\\n          {props.title}\\n          <span className={arrow} ref={setArrowRef} />\\n        </React.Fragment>\\n      }\\n    />\\n  );\\n}\\n\\nArrowTooltip.propTypes = {\\n  title: PropTypes.node,\\n};\\n\\nconst useStylesBootstrap = makeStyles((theme) => ({\\n  arrow: {\\n    position: 'absolute',\\n    fontSize: 6,\\n    '&::before': {\\n      content: '\\\"\\\"',\\n      margin: 'auto',\\n      display: 'block',\\n      width: 0,\\n      height: 0,\\n      borderStyle: 'solid',\\n    },\\n  },\\n  popper: arrowGenerator(theme.palette.common.black),\\n  tooltip: {\\n    position: 'relative',\\n    backgroundColor: theme.palette.common.black,\\n  },\\n  tooltipPlacementLeft: {\\n    margin: '0 8px',\\n  },\\n  tooltipPlacementRight: {\\n    margin: '0 8px',\\n  },\\n  tooltipPlacementTop: {\\n    margin: '8px 0',\\n  },\\n  tooltipPlacementBottom: {\\n    margin: '8px 0',\\n  },\\n}));\\n\\nfunction BootstrapTooltip(props) {\\n  const {arrow, ...classes} = useStylesBootstrap();\\n  const [arrowRef, setArrowRef] = React.useState(null);\\n\\n  return (\\n    <Tooltip\\n      classes={classes}\\n      PopperProps={{\\n        popperOptions: {\\n          modifiers: {\\n            arrow: {\\n              enabled: Boolean(arrowRef),\\n              element: arrowRef,\\n            },\\n          },\\n        },\\n      }}\\n      {...props}\\n      title={\\n        <React.Fragment>\\n          {props.title}\\n          <span className={arrow} ref={setArrowRef} />\\n        </React.Fragment>\\n      }\\n    />\\n  );\\n}\\n\\nBootstrapTooltip.propTypes = {\\n  title: PropTypes.node,\\n};\\n\\nconst HtmlTooltip = withStyles((theme) => ({\\n  tooltip: {\\n    backgroundColor: '#f5f5f9',\\n    color: 'rgba(0, 0, 0, 0.87)',\\n    maxWidth: 220,\\n    fontSize: theme.typography.pxToRem(12),\\n    border: '1px solid #dadde9',\\n  },\\n}))(Tooltip);\\n\\nexport default function CustomizedTooltips() {\\n  return (\\n    <div>\\n      <LightTooltip title='Add'>\\n        <Button>Light</Button>\\n      </LightTooltip>\\n      <ArrowTooltip title='Add'>\\n        <Button>Arrow</Button>\\n      </ArrowTooltip>\\n      <BootstrapTooltip title='Add'>\\n        <Button>Bootstrap</Button>\\n      </BootstrapTooltip>\\n      <HtmlTooltip\\n        title={\\n          <React.Fragment>\\n            <Typography color='inherit'>Tooltip with HTML</Typography>\\n            <em>{\\\"And here's\\\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.\\n            {\\\"It's very engaging. Right?\\\"}\\n          </React.Fragment>\\n        }>\\n        <Button>HTML</Button>\\n      </HtmlTooltip>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nexport default function TriggersTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <Grid container justify='center'>\n        <Grid item>\n          <Tooltip disableFocusListener title='Add'>\n            <Button>Hover or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableHoverListener title='Add'>\n            <Button>Focus or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableFocusListener disableTouchListener title='Add'>\n            <Button>Hover</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <div>\n              <Tooltip\n                PopperProps={{\n                  disablePortal: true,\n                }}\n                onClose={handleTooltipClose}\n                open={open}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                title='Add'>\n                <Button onClick={handleTooltipOpen}>Click</Button>\n              </Tooltip>\n            </div>\n          </ClickAwayListener>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport Grid from '@material-ui/core/Grid';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\\n\\nexport default function TriggersTooltips() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleTooltipClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleTooltipOpen() {\\n    setOpen(true);\\n  }\\n\\n  return (\\n    <div>\\n      <Grid container justify='center'>\\n        <Grid item>\\n          <Tooltip disableFocusListener title='Add'>\\n            <Button>Hover or touch</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <Tooltip disableHoverListener title='Add'>\\n            <Button>Focus or touch</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <Tooltip disableFocusListener disableTouchListener title='Add'>\\n            <Button>Hover</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <ClickAwayListener onClickAway={handleTooltipClose}>\\n            <div>\\n              <Tooltip\\n                PopperProps={{\\n                  disablePortal: true,\\n                }}\\n                onClose={handleTooltipClose}\\n                open={open}\\n                disableFocusListener\\n                disableHoverListener\\n                disableTouchListener\\n                title='Add'>\\n                <Button onClick={handleTooltipOpen}>Click</Button>\\n              </Tooltip>\\n            </div>\\n          </ClickAwayListener>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  customWidth: {\n    maxWidth: 500,\n  },\n  noMaxWidth: {\n    maxWidth: 'none',\n  },\n}));\n\nconst longText = `\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n`;\n\nexport default function VariableWidth() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title={longText}>\n        <Button className={classes.button}>Default Width [300px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{tooltip: classes.customWidth}}>\n        <Button className={classes.button}>Custom Width [500px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{tooltip: classes.noMaxWidth}}>\n        <Button className={classes.button}>No wrapping</Button>\n      </Tooltip>\n    </div>\n  );\n}\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  button: {\\n    margin: theme.spacing(1),\\n  },\\n  customWidth: {\\n    maxWidth: 500,\\n  },\\n  noMaxWidth: {\\n    maxWidth: 'none',\\n  },\\n}));\\n\\nconst longText = `\\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\\nPraesent non nunc mollis, fermentum neque at, semper arcu.\\nNullam eget est sed sem iaculis gravida eget vitae justo.\\n`;\\n\\nexport default function VariableWidth() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title={longText}>\\n        <Button className={classes.button}>Default Width [300px]</Button>\\n      </Tooltip>\\n      <Tooltip title={longText} classes={{tooltip: classes.customWidth}}>\\n        <Button className={classes.button}>Custom Width [500px]</Button>\\n      </Tooltip>\\n      <Tooltip title={longText} classes={{tooltip: classes.noMaxWidth}}>\\n        <Button className={classes.button}>No wrapping</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InteractiveTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title='Add' interactive>\n        <Button className={classes.button}>Interactive</Button>\n      </Tooltip>\n      <Tooltip title='Add'>\n        <Button className={classes.button}>Non Interactive</Button>\n      </Tooltip>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DisabledTooltips() {\n  return (\n    <Tooltip title=\"You don't have permission to do this\">\n      <span>\n        <Button disabled>A Disabled Button</Button>\n      </span>\n    </Tooltip>\n  );\n}\n","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nexport default function DisabledTooltips() {\\n  return (\\n    <Tooltip title=\\\"You don't have permission to do this\\\">\\n      <span>\\n        <Button disabled>A Disabled Button</Button>\\n      </span>\\n    </Tooltip>\\n  );\\n}\\n\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\n\nexport default function TransitionsTooltips() {\n  return (\n    <div>\n      <Tooltip title='Add'>\n        <Button>Grow</Button>\n      </Tooltip>\n      <Tooltip\n        TransitionComponent={Fade}\n        TransitionProps={{timeout: 600}}\n        title='Add'>\n        <Button>Fade</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Zoom} title='Add'>\n        <Button>Zoom</Button>\n      </Tooltip>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DelayTooltips() {\n  return (\n    <Tooltip title='Add' enterDelay={500} leaveDelay={200}>\n      <Button>[500ms, 200ms]</Button>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nimport SimpleTooltips from './SimpleTooltips';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SimpleTooltipsSource from '!raw-loader!./SimpleTooltips';\nimport PositionedTooltips from './PositionedTooltips';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PositionedTooltipsSource from '!raw-loader!./PositionedTooltips';\nimport CustomizedTooltips from './CustomizedTooltips';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport CustomizedTooltipsSource from '!raw-loader!./CustomizedTooltips';\nimport TriggersTooltip from './TriggersTooltip';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TriggersTooltipSource from '!raw-loader!./TriggersTooltip';\nimport VariableWidth from './VariableWidth';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport VariableWidthSource from '!raw-loader!./VariableWidth';\nimport InteractiveTooltip from './InteractiveTooltip';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport InteractiveTooltipSource from '!raw-loader!./InteractiveTooltip';\nimport DisabledElements from './DisabledElements';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport DisabledElementsSource from '!raw-loader!./DisabledElements';\nimport TransitionsTooltip from './TransitionsTooltip';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport TransitionsTooltipSource from '!raw-loader!./TransitionsTooltip';\nimport ShowingHiding from './ShowingHiding';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ShowingHidingSource from '!raw-loader!./ShowingHiding';\n\nconst Tooltips = () => {\n  return (\n    <>\n      <ComponentHeader\n        title='Tooltips'\n        description='Tooltips display informative text when users hover over, focus on, or tap an element'\n        refUrl='https://material-ui.com/components/tooltips/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Simple Tooltips'\n            component={SimpleTooltips}\n            source={SimpleTooltipsSource}\n            description='The Link component is built on top of the Typography component. You can leverage its properties.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Customized tooltips'\n            component={CustomizedTooltips}\n            source={CustomizedTooltipsSource}\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Triggers tooltips'\n            component={TriggersTooltip}\n            source={TriggersTooltipSource}\n            description='You can define the types of events that cause a tooltip to show.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Variable Width'\n            component={VariableWidth}\n            source={VariableWidthSource}\n            description='The Tooltip wraps long text by default to make it readable.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Interactive tooltips'\n            component={InteractiveTooltip}\n            source={InteractiveTooltipSource}\n            description=\"A tooltip can be interactive. It won't close when the user hovers over the tooltip before the leaveDelay is expired.\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Disabled Elements'\n            component={DisabledElements}\n            source={DisabledElementsSource}\n            description='By default disabled elements like <button> do not trigger user interactions so a Tooltip will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a span.'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Showing and hiding tooltips'\n            component={ShowingHiding}\n            source={ShowingHidingSource}\n            description=\"The tooltip is normally shown immediately when the user's mouse hovers over the element, and hides immediately when the user's mouse leaves. A delay in showing or hiding the tooltip can be added through the properties enterDelay and leaveDelay, as shown in the Controlled Tooltips demo above.\"\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Transitions tooltips'\n            component={TransitionsTooltip}\n            source={TransitionsTooltipSource}\n            description='Use a different transition..'\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Positioned Tooltips'\n            component={PositionedTooltips}\n            source={PositionedTooltipsSource}\n            description='The Tooltip has 12 placements choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.'\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Tooltips;\n","export default \"import React from 'react';\\nimport {makeStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  button: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function InteractiveTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title='Add' interactive>\\n        <Button className={classes.button}>Interactive</Button>\\n      </Tooltip>\\n      <Tooltip title='Add'>\\n        <Button className={classes.button}>Non Interactive</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nexport default function DelayTooltips() {\\n  return (\\n    <Tooltip title='Add' enterDelay={500} leaveDelay={200}>\\n      <Button>[500ms, 200ms]</Button>\\n    </Tooltip>\\n  );\\n}\\n\";","export default \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport Fade from '@material-ui/core/Fade';\\nimport Zoom from '@material-ui/core/Zoom';\\n\\nexport default function TransitionsTooltips() {\\n  return (\\n    <div>\\n      <Tooltip title='Add'>\\n        <Button>Grow</Button>\\n      </Tooltip>\\n      <Tooltip\\n        TransitionComponent={Fade}\\n        TransitionProps={{timeout: 600}}\\n        title='Add'>\\n        <Button>Fade</Button>\\n      </Tooltip>\\n      <Tooltip TransitionComponent={Zoom} title='Add'>\\n        <Button>Zoom</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";"],"sourceRoot":""}