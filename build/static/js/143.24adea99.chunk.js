(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[143],{3123:function(e,a,n){"use strict";n.r(a);var o=n(0),l=n.n(o),t=n(1081),r=n(306),c=n(305),m=n(304),i=n(22),d=n(164),u=n(1485),s=n(1336),b=n(1353),p=n(1279),f=n(1314),h=n(1450),g=Object(d.a)((function(e){return{formControl:{margin:e.spacing(3)}}}));function C(){var e=g(),a=l.a.useState("female"),n=Object(i.a)(a,2),o=n[0],t=n[1];function r(e){t(e.target.value)}return l.a.createElement("div",null,l.a.createElement(f.a,{component:"fieldset",className:e.formControl},l.a.createElement(h.a,{component:"legend"},"Gender"),l.a.createElement(s.a,{"aria-label":"gender",name:"gender1",value:o,onChange:r},l.a.createElement(p.a,{value:"female",control:l.a.createElement(u.a,null),label:"Female"}),l.a.createElement(p.a,{value:"male",control:l.a.createElement(u.a,null),label:"Male"}),l.a.createElement(p.a,{value:"other",control:l.a.createElement(u.a,null),label:"Other"}),l.a.createElement(p.a,{value:"disabled",disabled:!0,control:l.a.createElement(u.a,null),label:"(Disabled option)"}))),l.a.createElement(f.a,{component:"fieldset",className:e.formControl},l.a.createElement(h.a,{component:"legend"},"Gender"),l.a.createElement(s.a,{"aria-label":"gender",name:"gender2",value:o,onChange:r},l.a.createElement(p.a,{value:"female",control:l.a.createElement(u.a,{color:"primary"}),label:"Female",labelPlacement:"start"}),l.a.createElement(p.a,{value:"male",control:l.a.createElement(u.a,{color:"primary"}),label:"Male",labelPlacement:"start"}),l.a.createElement(p.a,{value:"other",control:l.a.createElement(u.a,{color:"primary"}),label:"Other",labelPlacement:"start"}),l.a.createElement(p.a,{value:"disabled",disabled:!0,control:l.a.createElement(u.a,null),label:"(Disabled option)",labelPlacement:"start"})),l.a.createElement(b.a,null,"labelPlacement start")))}var v=n(21),R=n(204),E=n(1625),F=n.n(E),k=n(1626),y=n.n(k),L=Object(v.a)({root:{color:R.a[400],"&$checked":{color:R.a[600]}},checked:{}})((function(e){return l.a.createElement(u.a,Object.assign({color:"default"},e))}));function S(){var e=l.a.useState("a"),a=Object(i.a)(e,2),n=a[0],o=a[1];function t(e){o(e.target.value)}return l.a.createElement("div",null,l.a.createElement(u.a,{checked:"a"===n,onChange:t,value:"a",name:"radio-button-demo",inputProps:{"aria-label":"A"}}),l.a.createElement(u.a,{checked:"b"===n,onChange:t,value:"b",name:"radio-button-demo",inputProps:{"aria-label":"B"}}),l.a.createElement(L,{checked:"c"===n,onChange:t,value:"c",name:"radio-button-demo",inputProps:{"aria-label":"C"}}),l.a.createElement(u.a,{checked:"d"===n,onChange:t,value:"d",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"D"}}),l.a.createElement(u.a,{checked:"e"===n,onChange:t,value:"e",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"E"},icon:l.a.createElement(F.a,{fontSize:"small"}),checkedIcon:l.a.createElement(y.a,{fontSize:"small"})}))}function P(){var e=l.a.useState("female"),a=Object(i.a)(e,2),n=a[0],o=a[1];return l.a.createElement(f.a,{component:"fieldset"},l.a.createElement(h.a,{component:"legend"},"labelPlacement"),l.a.createElement(s.a,{"aria-label":"position",name:"position",value:n,onChange:function(e){o(e.target.value)},row:!0},l.a.createElement(p.a,{value:"top",control:l.a.createElement(u.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),l.a.createElement(p.a,{value:"start",control:l.a.createElement(u.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),l.a.createElement(p.a,{value:"bottom",control:l.a.createElement(u.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),l.a.createElement(p.a,{value:"end",control:l.a.createElement(u.a,{color:"primary"}),label:"End",labelPlacement:"end"})))}var x=n(4),G=Object(d.a)({root:{"&:hover":{backgroundColor:"transparent"}},icon:{borderRadius:"50%",width:16,height:16,boxShadow:"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)",backgroundColor:"#f5f8fa",backgroundImage:"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))","$root.Mui-focusVisible &":{outline:"2px auto rgba(19,124,189,.6)",outlineOffset:2},"input:hover ~ &":{backgroundColor:"#ebf1f5"},"input:disabled ~ &":{boxShadow:"none",background:"rgba(206,217,224,.5)"}},checkedIcon:{backgroundColor:"#137cbd",backgroundImage:"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))","&:before":{display:"block",width:16,height:16,backgroundImage:"radial-gradient(#fff,#fff 28%,transparent 32%)",content:'""'},"input:hover ~ &":{backgroundColor:"#106ba3"}}});function I(e){var a=G();return l.a.createElement(u.a,Object.assign({className:a.root,disableRipple:!0,color:"default",checkedIcon:l.a.createElement("span",{className:Object(x.default)(a.icon,a.checkedIcon)}),icon:l.a.createElement("span",{className:a.icon})},e))}function w(){return l.a.createElement(f.a,{component:"fieldset"},l.a.createElement(h.a,{component:"legend"},"Gender"),l.a.createElement(s.a,{defaultValue:"female","aria-label":"gender",name:"customized-radios"},l.a.createElement(p.a,{value:"female",control:l.a.createElement(I,null),label:"Female"}),l.a.createElement(p.a,{value:"male",control:l.a.createElement(I,null),label:"Male"}),l.a.createElement(p.a,{value:"other",control:l.a.createElement(I,null),label:"Other"}),l.a.createElement(p.a,{value:"disabled",disabled:!0,control:l.a.createElement(I,null),label:"(Disabled option)"})))}a.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{title:"Radio buttons",description:"Radio buttons allow the user to select one option from a set.",refUrl:"https://material-ui.com/components/radio-buttons/"}),l.a.createElement(m.a,null,l.a.createElement(t.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Radio Buttons",component:C,source:"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function RadioButtonsGroup() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <FormControl component='fieldset' className={classes.formControl}>\n        <FormLabel component='legend'>Gender</FormLabel>\n        <RadioGroup\n          aria-label='gender'\n          name='gender1'\n          value={value}\n          onChange={handleChange}>\n          <FormControlLabel value='female' control={<Radio />} label='Female' />\n          <FormControlLabel value='male' control={<Radio />} label='Male' />\n          <FormControlLabel value='other' control={<Radio />} label='Other' />\n          <FormControlLabel\n            value='disabled'\n            disabled\n            control={<Radio />}\n            label='(Disabled option)'\n          />\n        </RadioGroup>\n      </FormControl>\n      <FormControl component='fieldset' className={classes.formControl}>\n        <FormLabel component='legend'>Gender</FormLabel>\n        <RadioGroup\n          aria-label='gender'\n          name='gender2'\n          value={value}\n          onChange={handleChange}>\n          <FormControlLabel\n            value='female'\n            control={<Radio color='primary' />}\n            label='Female'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='male'\n            control={<Radio color='primary' />}\n            label='Male'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='other'\n            control={<Radio color='primary' />}\n            label='Other'\n            labelPlacement='start'\n          />\n          <FormControlLabel\n            value='disabled'\n            disabled\n            control={<Radio />}\n            label='(Disabled option)'\n            labelPlacement='start'\n          />\n        </RadioGroup>\n        <FormHelperText>labelPlacement start</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n",description:"Radio buttons should have the most commonly used option selected by default.."})),l.a.createElement(t.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Customized radios",component:w,source:"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow:\n      'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n});\n\n// Inspired by blueprintjs\nfunction StyledRadio(props) {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color='default'\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\nexport default function CustomizedRadios() {\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>Gender</FormLabel>\n      <RadioGroup\n        defaultValue='female'\n        aria-label='gender'\n        name='customized-radios'>\n        <FormControlLabel\n          value='female'\n          control={<StyledRadio />}\n          label='Female'\n        />\n        <FormControlLabel value='male' control={<StyledRadio />} label='Male' />\n        <FormControlLabel\n          value='other'\n          control={<StyledRadio />}\n          label='Other'\n        />\n        <FormControlLabel\n          value='disabled'\n          disabled\n          control={<StyledRadio />}\n          label='(Disabled option)'\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n",description:"Radio buttons should have the most commonly used option selected by default.."})),l.a.createElement(t.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Label placement",component:P,source:"import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport default function FormControlLabelPosition() {\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>labelPlacement</FormLabel>\n      <RadioGroup\n        aria-label='position'\n        name='position'\n        value={value}\n        onChange={handleChange}\n        row>\n        <FormControlLabel\n          value='top'\n          control={<Radio color='primary' />}\n          label='Top'\n          labelPlacement='top'\n        />\n        <FormControlLabel\n          value='start'\n          control={<Radio color='primary' />}\n          label='Start'\n          labelPlacement='start'\n        />\n        <FormControlLabel\n          value='bottom'\n          control={<Radio color='primary' />}\n          label='Bottom'\n          labelPlacement='bottom'\n        />\n        <FormControlLabel\n          value='end'\n          control={<Radio color='primary' />}\n          label='End'\n          labelPlacement='end'\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n",description:"You can change the placement of the label"})),l.a.createElement(t.a,{item:!0,xs:12,lg:6},l.a.createElement(r.a,{title:"Standalone Radio Buttons",component:S,source:"import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {green} from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color='default' {...props} />);\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  function handleChange(event) {\n    setSelectedValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value='a'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'A'}}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value='b'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'B'}}\n      />\n      <GreenRadio\n        checked={selectedValue === 'c'}\n        onChange={handleChange}\n        value='c'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'C'}}\n      />\n      <Radio\n        checked={selectedValue === 'd'}\n        onChange={handleChange}\n        value='d'\n        color='default'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'D'}}\n      />\n      <Radio\n        checked={selectedValue === 'e'}\n        onChange={handleChange}\n        value='e'\n        color='default'\n        name='radio-button-demo'\n        inputProps={{'aria-label': 'E'}}\n        icon={<RadioButtonUncheckedIcon fontSize='small' />}\n        checkedIcon={<RadioButtonCheckedIcon fontSize='small' />}\n      />\n    </div>\n  );\n}\n",description:"Radio can also be used standalone, without the wrapper."}))))}}}]);
//# sourceMappingURL=143.24adea99.chunk.js.map