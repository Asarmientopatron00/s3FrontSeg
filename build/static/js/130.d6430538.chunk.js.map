{"version":3,"sources":["modules/auth/ForgetPassword/ForgetPasswordFirebase.js","modules/auth/ForgetPassword/ForgetPasswordAwsCognito.js","modules/auth/ForgetPassword/ForgetPasswordJwtAuth.js","modules/auth/ForgetPassword/index.js"],"names":["useStyles","makeStyles","theme","image","display","cursor","width","card","maxWidth","textAlign","padding","overflow","position","boxShadow","breakpoints","up","paddingLeft","paddingRight","content","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","marginRight","marginLeft","backgroundColor","palette","primary","main","form","textField","btnRoot","fontWeight","Fonts","REGULAR","textTransform","fontSize","paddingTop","paddingBottom","borderRadius","overrides","MuiCard","root","textSecondary","color","underlineNone","textDecoration","textGrey","grey","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","IntlMessages","id","required","ForgetPasswordFirebase","dispatch","useDispatch","classes","Box","flex","flexDirection","justifyContent","mb","xs","md","xl","className","src","alt","alignItems","Card","component","Typography","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","onForgetPasswordFirebaseUser","isSubmitting","lg","placeholder","name","label","variant","Button","disabled","type","pt","to","clsx","InfoView","ForgetPasswordAwsCognito","history","useHistory","onResetCognitoPassword","ForgetPasswordJwtAuth","ForgetPassword","location","useLocation","tab","state"],"mappings":"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","file":"static/js/130.d6430538.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Form, Formik, useField} from 'formik';\nimport * as yup from 'yup';\nimport {useDispatch} from 'react-redux';\nimport InfoView from '@crema/core/InfoView';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport {onForgetPasswordFirebaseUser} from '../../../redux/actions';\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\nimport {makeStyles} from '@material-ui/core';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport {Link} from 'react-router-dom';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    display: 'inline-block',\n    cursor: 'pointer',\n    width: 140,\n  },\n  card: {\n    maxWidth: 576,\n    width: '100%',\n    textAlign: 'center',\n    padding: 24,\n    overflow: 'hidden',\n    position: 'relative',\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n    [theme.breakpoints.up('sm')]: {\n      padding: 40,\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: 48,\n    },\n    [theme.breakpoints.up('xl')]: {\n      paddingLeft: 48,\n      paddingRight: 48,\n    },\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 130,\n      height: 9,\n      borderBottomRightRadius: 80,\n      borderBottomLeftRadius: 80,\n      marginRight: 'auto',\n      marginLeft: 'auto',\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  form: {\n    textAlign: 'left',\n  },\n  textField: {\n    width: '100%',\n  },\n  btnRoot: {\n    width: '100%',\n    fontWeight: Fonts.REGULAR,\n    textTransform: 'capitalize',\n    fontSize: 16,\n    paddingTop: 12,\n    paddingBottom: 12,\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\n  },\n  textSecondary: {\n    color: theme.palette.primary.main,\n    marginLeft: 10,\n  },\n  underlineNone: {\n    textDecoration: 'none',\n  },\n  textGrey: {\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst MyTextField = (props) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      {...props}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email(<IntlMessages id='validation.emailFormat' />)\n    .required(<IntlMessages id='validation.emailRequired' />),\n});\n\nconst ForgetPasswordFirebase = () => {\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  return (\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\n        <img\n          className={classes.image}\n          src={'/assets/images/logo-white-with-name.png'}\n          alt='crema-logo'\n        />\n      </Box>\n\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'>\n        <Card className={classes.card}>\n          <Box\n            component='h2'\n            mb={{xs: 6, xl: 8}}\n            color='text.primary'\n            fontWeight={Fonts.REGULAR}\n            fontSize={{xs: 24, xl: 26}}\n            textTransform='uppercase'>\n            <IntlMessages id='common.forgetPassword' />\n          </Box>\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\n            <Typography>\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\n              <IntlMessages id='common.forgetPasswordTextTwo' />\n            </Typography>\n          </Box>\n\n          <Formik\n            validateOnChange={true}\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, {setSubmitting, resetForm}) => {\n              setSubmitting(true);\n              dispatch(onForgetPasswordFirebaseUser(data.email));\n              setSubmitting(false);\n              resetForm();\n            }}>\n            {({isSubmitting}) => (\n              <Form className={classes.form}>\n                <Box mb={{xs: 5, lg: 8}}>\n                  <MyTextField\n                    placeholder='Email'\n                    name='email'\n                    label={<IntlMessages id='common.emailAddress' />}\n                    className={classes.textField}\n                    variant='outlined'\n                  />\n                </Box>\n                <Box mb={4}>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    disabled={isSubmitting}\n                    className={classes.btnRoot}\n                    type='submit'>\n                    <IntlMessages id='common.sendNewPassword' />\n                  </Button>\n                </Box>\n\n                <Box\n                  pt={3}\n                  textAlign='center'\n                  fontSize={15}\n                  className={classes.textGrey}>\n                  <IntlMessages id='common.alreadyHavePassword' />\n                  <Link\n                    to='/signin'\n                    className={clsx(\n                      classes.underlineNone,\n                      classes.textSecondary,\n                    )}>\n                    <IntlMessages id='common.signIn' />\n                  </Link>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n\n          <InfoView />\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgetPasswordFirebase;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Form, Formik, useField} from 'formik';\nimport * as yup from 'yup';\nimport {useDispatch} from 'react-redux';\nimport {onResetCognitoPassword} from '../../../redux/actions';\nimport {Link, useHistory} from 'react-router-dom';\nimport InfoView from '@crema/core/InfoView';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\nimport {makeStyles} from '@material-ui/core';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport clsx from 'clsx';\n\nconst MyTextField = (props) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      {...props}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email(<IntlMessages id='validation.emailFormat' />)\n    .required(<IntlMessages id='validation.emailRequired' />),\n});\n\nconst ForgetPasswordAwsCognito = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const useStyles = makeStyles((theme) => ({\n    image: {\n      display: 'inline-block',\n      cursor: 'pointer',\n      width: 140,\n    },\n    card: {\n      maxWidth: 576,\n      width: '100%',\n      textAlign: 'center',\n      padding: 24,\n      overflow: 'hidden',\n      position: 'relative',\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n      [theme.breakpoints.up('sm')]: {\n        padding: 40,\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: 48,\n      },\n      [theme.breakpoints.up('xl')]: {\n        paddingLeft: 48,\n        paddingRight: 48,\n      },\n      '&:before': {\n        content: \"''\",\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        width: 130,\n        height: 9,\n        borderBottomRightRadius: 80,\n        borderBottomLeftRadius: 80,\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n    form: {\n      textAlign: 'left',\n    },\n    textField: {\n      width: '100%',\n    },\n    btnRoot: {\n      width: '100%',\n      fontWeight: Fonts.REGULAR,\n      textTransform: 'capitalize',\n      fontSize: 16,\n      paddingTop: 12,\n      paddingBottom: 12,\n    },\n    textSecondary: {\n      color: theme.palette.primary.main,\n      marginLeft: 10,\n    },\n    underlineNone: {\n      textDecoration: 'none',\n    },\n    textGrey: {\n      color: theme.palette.grey[500],\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\n        <img\n          className={classes.image}\n          src={'/assets/images/logo-white-with-name.png'}\n          alt='crema-logo'\n        />\n      </Box>\n\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'>\n        <Card className={classes.card}>\n          <Box\n            component='h2'\n            mb={{xs: 6, xl: 8}}\n            color='text.primary'\n            fontWeight={Fonts.REGULAR}\n            fontSize={{xs: 24, xl: 26}}>\n            <IntlMessages id='common.forgetPassword' />\n          </Box>\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\n            <Typography>\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\n              <IntlMessages id='common.forgetPasswordTextTwo' />\n            </Typography>\n          </Box>\n\n          <Formik\n            validateOnChange={true}\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, {setSubmitting, resetForm}) => {\n              setSubmitting(true);\n              dispatch(onResetCognitoPassword(data.email, history));\n              setSubmitting(false);\n              resetForm();\n            }}>\n            {({isSubmitting}) => (\n              <Form className={classes.form}>\n                <Box mb={{xs: 5, lg: 8}}>\n                  <MyTextField\n                    placeholder='Email'\n                    name='email'\n                    label={<IntlMessages id='common.emailAddress' />}\n                    className={classes.textField}\n                    variant='outlined'\n                  />\n                </Box>\n\n                <Box mb={4}>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    disabled={isSubmitting}\n                    className={classes.btnRoot}\n                    type='submit'>\n                    <IntlMessages id='common.sendNewPassword' />\n                  </Button>\n                </Box>\n\n                <Box\n                  pt={3}\n                  textAlign='center'\n                  fontSize={15}\n                  className={classes.textGrey}>\n                  <IntlMessages id='common.alreadyHavePassword' />\n                  <Link\n                    to='/signin'\n                    className={clsx(\n                      classes.underlineNone,\n                      classes.textSecondary,\n                    )}>\n                    <IntlMessages id='common.signIn' />\n                  </Link>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n\n          <InfoView />\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgetPasswordAwsCognito;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Form, Formik, useField} from 'formik';\nimport * as yup from 'yup';\nimport {useDispatch} from 'react-redux';\nimport {onResetCognitoPassword} from '../../../redux/actions';\nimport {Link, useHistory} from 'react-router-dom';\nimport InfoView from '@crema/core/InfoView';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\nimport {makeStyles} from '@material-ui/core';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    display: 'inline-block',\n    cursor: 'pointer',\n    width: 140,\n  },\n  card: {\n    maxWidth: 576,\n    width: '100%',\n    textAlign: 'center',\n    padding: 24,\n    overflow: 'hidden',\n    position: 'relative',\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n    [theme.breakpoints.up('sm')]: {\n      padding: 40,\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: 48,\n    },\n    [theme.breakpoints.up('xl')]: {\n      paddingLeft: 48,\n      paddingRight: 48,\n    },\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 130,\n      height: 9,\n      borderBottomRightRadius: 80,\n      borderBottomLeftRadius: 80,\n      marginRight: 'auto',\n      marginLeft: 'auto',\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  form: {\n    textAlign: 'left',\n  },\n  textField: {\n    width: '100%',\n  },\n  btnRoot: {\n    width: '100%',\n    fontWeight: Fonts.REGULAR,\n    textTransform: 'capitalize',\n    fontSize: 16,\n    paddingTop: 12,\n    paddingBottom: 12,\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\n  },\n  textSecondary: {\n    color: theme.palette.primary.main,\n    marginLeft: 10,\n  },\n  underlineNone: {\n    textDecoration: 'none',\n  },\n  textGrey: {\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst MyTextField = (props) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      {...props}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email(<IntlMessages id='validation.emailFormat' />)\n    .required(<IntlMessages id='validation.emailRequired' />),\n});\n\nconst ForgetPasswordJwtAuth = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  return (\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\n        <img\n          className={classes.image}\n          src={'/assets/images/logo-white-with-name.png'}\n          alt='crema-logo'\n        />\n      </Box>\n\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'>\n        <Card className={classes.card}>\n          <Box\n            component='h2'\n            mb={{xs: 6, xl: 8}}\n            color='text.primary'\n            fontWeight={Fonts.REGULAR}\n            fontSize={{xs: 24, xl: 26}}\n            textTransform='uppercase'>\n            <IntlMessages id='common.forgetPassword' />\n          </Box>\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\n            <Typography>\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\n              <IntlMessages id='common.forgetPasswordTextTwo' />\n            </Typography>\n          </Box>\n\n          <Formik\n            validateOnChange={true}\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, {setSubmitting, resetForm}) => {\n              setSubmitting(true);\n              dispatch(onResetCognitoPassword(data.email, history));\n              setSubmitting(false);\n              resetForm();\n            }}>\n            {({isSubmitting}) => (\n              <Form className={classes.form}>\n                <Box mb={{xs: 5, lg: 8}}>\n                  <MyTextField\n                    placeholder='Email'\n                    name='email'\n                    label={<IntlMessages id='common.emailAddress' />}\n                    className={classes.textField}\n                    variant='outlined'\n                  />\n                </Box>\n\n                <Box mb={4}>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    disabled={isSubmitting}\n                    className={classes.btnRoot}\n                    type='submit'>\n                    <IntlMessages id='common.sendNewPassword' />\n                  </Button>\n                </Box>\n\n                <Box\n                  pt={3}\n                  textAlign='center'\n                  fontSize={15}\n                  className={classes.textGrey}>\n                  <IntlMessages id='common.alreadyHavePassword' />\n                  <Link\n                    to='/signin'\n                    className={clsx(\n                      classes.underlineNone,\n                      classes.textSecondary,\n                    )}>\n                    <IntlMessages id='common.signIn' />\n                  </Link>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n\n          <InfoView />\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgetPasswordJwtAuth;\n","import React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport ForgetPasswordFirebase from './ForgetPasswordFirebase';\nimport ForgetPasswordAwsCognito from './ForgetPasswordAwsCognito';\nimport ForgetPasswordJwtAuth from './ForgetPasswordJwtAuth';\n\nconst ForgetPassword = () => {\n  const location = useLocation();\n\n  const tab = (location.state && location.state.tab) || 'firebase';\n\n  return (\n    <>\n      {tab === 'firebase' && <ForgetPasswordFirebase />}\n      {tab === 'awsCognito' && <ForgetPasswordAwsCognito />}\n      {tab === 'jwtAuth' && <ForgetPasswordJwtAuth />}\n    </>\n  );\n};\n\nexport default ForgetPassword;\n"],"sourceRoot":""}