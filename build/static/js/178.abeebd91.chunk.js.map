{"version":3,"sources":["modules/thirdParty/recharts/Composed/Components/data.js","modules/thirdParty/recharts/Composed/Components/LineBarAreaComposedChart.js","modules/thirdParty/recharts/Composed/Components/VerticalComposedChart.js","modules/thirdParty/recharts/Composed/Components/SameDataComposedChart.js","modules/thirdParty/recharts/Composed/Components/ComposedChartWithAxisLabels.js","modules/thirdParty/recharts/Composed/index.js","webpack:///./src/modules/thirdParty/recharts/Composed/Components/LineBarAreaComposedChart.js?dd1d","webpack:///./src/modules/thirdParty/recharts/Composed/Components/VerticalComposedChart.js?18e4","webpack:///./src/modules/thirdParty/recharts/Composed/Components/SameDataComposedChart.js?bfc1","webpack:///./src/modules/thirdParty/recharts/Composed/Components/ComposedChartWithAxisLabels.js?d350"],"names":["data","name","uv","pv","amt","LineBarAreaComposedChart","width","height","margin","top","right","left","bottom","dataKey","stroke","type","fill","barSize","VerticalComposedChart","layout","SameDataComposedChart","ComposedChartWithAxisLabels","ComposedChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"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","file":"static/js/178.abeebd91.chunk.js","sourcesContent":["const data = [\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\nexport default data;\n","import React from 'react';\nimport {\n  Area,\n  Bar,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst LineBarAreaComposedChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <ComposedChart\n      data={data}\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <CartesianGrid stroke='#f5f5f5' />\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\n    </ComposedChart>\n  </ResponsiveContainer>\n);\n\nexport default LineBarAreaComposedChart;\n","import React from 'react';\nimport {\n  Area,\n  Bar,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst VerticalComposedChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <ComposedChart\n      layout='vertical'\n      data={data}\n      margin={{top: 10, right: 0, left: -12, bottom: 0}}>\n      <XAxis type='number' />\n      <YAxis dataKey='name' type='category' />\n      <Tooltip />\n      <Legend />\n      <CartesianGrid stroke='#f5f5f5' />\n      <Area dataKey='amt' fill='#F04F47' stroke='#F04F47' />\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\n      <Line dataKey='uv' stroke='#59AA2B' />\n    </ComposedChart>\n  </ResponsiveContainer>\n);\n\nexport default VerticalComposedChart;\n","import React from 'react';\nimport {\n  Bar,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst SameDataComposedChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <ComposedChart\n      data={data}\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <CartesianGrid stroke='#f5f5f5' />\n      <Bar dataKey='uv' barSize={20} fill='#4299E1' />\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\n    </ComposedChart>\n  </ResponsiveContainer>\n);\n\nexport default SameDataComposedChart;\n","import React from 'react';\nimport {\n  Area,\n  Bar,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst ComposedChartWithAxisLabels = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <ComposedChart\n      data={data}\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <CartesianGrid stroke='#f5f5f5' />\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\n    </ComposedChart>\n  </ResponsiveContainer>\n);\n\nexport default ComposedChartWithAxisLabels;\n","import React from 'react';\nimport LineBarAreaComposedChart from './Components/LineBarAreaComposedChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport LineBarAreaComposedChartSource from '!raw-loader!./Components/LineBarAreaComposedChart';\nimport VerticalComposedChart from './Components/VerticalComposedChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport VerticalComposedChartSource from '!raw-loader!./Components/VerticalComposedChart';\nimport SameDataComposedChart from './Components/SameDataComposedChart';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SameDataComposedChartSource from '!raw-loader!./Components/SameDataComposedChart';\nimport ComposedChartWithAxisLabels from './Components/ComposedChartWithAxisLabels';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ComposedChartWithAxisLabelsSource from '!raw-loader!./Components/ComposedChartWithAxisLabels';\nimport Grid from '@material-ui/core/Grid';\n\nimport ComponentCard from '@crema/core/ComponentCard';\nimport ComponentHeader from '@crema/core/ComponentHeader';\nimport GridContainer from '@crema/core/GridContainer';\n\nconst ComposedChart = ({match}) => {\n  return (\n    <>\n      <ComponentHeader\n        title='Composed Chart'\n        description='A chart composed of line, area, and bar charts. When you just want to draw a chart of a single type like line, then LineChart is recommended.'\n        refUrl='http://recharts.org/en-US/api/ComposedChart/'\n      />\n\n      <GridContainer>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Line Bar Area Composed Chart'\n            component={LineBarAreaComposedChart}\n            source={LineBarAreaComposedChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Line Bar Area Composed Chart'\n            component={VerticalComposedChart}\n            source={VerticalComposedChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Same Data Composed Chart'\n            component={SameDataComposedChart}\n            source={SameDataComposedChartSource}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ComponentCard\n            title='Composed Chart With Axis Labels'\n            component={ComposedChartWithAxisLabels}\n            source={ComposedChartWithAxisLabelsSource}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ComposedChart;\n","export default \"import React from 'react';\\nimport {\\n  Area,\\n  Bar,\\n  CartesianGrid,\\n  ComposedChart,\\n  Legend,\\n  Line,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst LineBarAreaComposedChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <ComposedChart\\n      data={data}\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <Tooltip />\\n      <Legend />\\n      <CartesianGrid stroke='#f5f5f5' />\\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\n    </ComposedChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default LineBarAreaComposedChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  Bar,\\n  CartesianGrid,\\n  ComposedChart,\\n  Legend,\\n  Line,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst VerticalComposedChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <ComposedChart\\n      layout='vertical'\\n      data={data}\\n      margin={{top: 10, right: 0, left: -12, bottom: 0}}>\\n      <XAxis type='number' />\\n      <YAxis dataKey='name' type='category' />\\n      <Tooltip />\\n      <Legend />\\n      <CartesianGrid stroke='#f5f5f5' />\\n      <Area dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\n      <Line dataKey='uv' stroke='#59AA2B' />\\n    </ComposedChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default VerticalComposedChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Bar,\\n  CartesianGrid,\\n  ComposedChart,\\n  Legend,\\n  Line,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst SameDataComposedChart = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <ComposedChart\\n      data={data}\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <Tooltip />\\n      <Legend />\\n      <CartesianGrid stroke='#f5f5f5' />\\n      <Bar dataKey='uv' barSize={20} fill='#4299E1' />\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\n    </ComposedChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default SameDataComposedChart;\\n\";","export default \"import React from 'react';\\nimport {\\n  Area,\\n  Bar,\\n  CartesianGrid,\\n  ComposedChart,\\n  Legend,\\n  Line,\\n  ResponsiveContainer,\\n  Tooltip,\\n  XAxis,\\n  YAxis,\\n} from 'recharts';\\nimport data from './data';\\n\\nconst ComposedChartWithAxisLabels = () => (\\n  <ResponsiveContainer width='100%' height={200}>\\n    <ComposedChart\\n      data={data}\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\n      <XAxis dataKey='name' />\\n      <YAxis />\\n      <Tooltip />\\n      <Legend />\\n      <CartesianGrid stroke='#f5f5f5' />\\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\n    </ComposedChart>\\n  </ResponsiveContainer>\\n);\\n\\nexport default ComposedChartWithAxisLabels;\\n\";"],"sourceRoot":""}