(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[181],{3118:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(1156),i=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],m=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))},l=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"uv",stackId:"1",stroke:"#4299E1",fill:"#4299E1"}),r.a.createElement(o.a,{type:"monotone",dataKey:"pv",stackId:"1",stroke:"#59AA2B",fill:"#59AA2B"}),r.a.createElement(o.a,{type:"monotone",dataKey:"amt",stackId:"1",stroke:"#F04F47",fill:"#F04F47"})))},c=[{month:"2015.01",a:4e3,b:2400,c:2400},{month:"2015.02",a:3e3,b:1398,c:2210},{month:"2015.03",a:2e3,b:9800,c:2290},{month:"2015.04",a:2780,b:3908,c:2e3},{month:"2015.05",a:1890,b:4800,c:2181},{month:"2015.06",a:2390,b:3800,c:2500},{month:"2015.07",a:3490,b:4300,c:2100}],s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return"".concat((100*e).toFixed(t),"%")},d=function(e){var t=e.payload,n=e.label,a=t.reduce((function(e,t){return e+t.value}),0);return r.a.createElement("div",{className:"customized-tooltip-content"},r.a.createElement("p",{className:"total"},"".concat(n," (Total: ").concat(a,")")),r.a.createElement("ul",{className:"list"},t.map((function(e,t){return r.a.createElement("li",{key:"item-".concat(t),style:{color:e.color}},"".concat(e.name,": ").concat(e.value,"(").concat(function(e,t){return s(t>0?e/t:0,2)}(e.value,a),")"))}))))},h=function(){return r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:c,stackOffset:"expand",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"month"}),r.a.createElement(o.F,{tickFormatter:s}),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,{content:d}),r.a.createElement(o.a,{type:"monotone",dataKey:"a",stackId:"1",stroke:"#4299E1",fill:"#4299E1"}),r.a.createElement(o.a,{type:"monotone",dataKey:"b",stackId:"1",stroke:"#59AA2B",fill:"#59AA2B"}),r.a.createElement(o.a,{type:"monotone",dataKey:"c",stackId:"1",stroke:"#F04F47",fill:"#F04F47"})))},p=n(67),E=[{name:"Page A",uv:4e3},{name:"Page B",uv:3e3},{name:"Page C",uv:2e3},{name:"Page D"},{name:"Page E",uv:1890},{name:"Page F",uv:2390},{name:"Page G",uv:3490}],u=function(){return r.a.createElement(o.y,{width:"100%"},r.a.createElement("div",null,r.a.createElement(p.a,{mb:5},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:E,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),r.a.createElement(p.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:E,margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{connectNulls:!0,type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"}))))))},y=function(){return r.a.createElement(o.y,{width:"100%"},r.a.createElement("div",null,r.a.createElement(p.a,{component:"p",mb:4},"A demo of synchronized AreaCharts"),r.a.createElement(p.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),r.a.createElement(p.a,{component:"p",mb:4},"Maybe some other content"),r.a.createElement(p.a,{mb:4},r.a.createElement(o.y,{width:"100%",height:200},r.a.createElement(o.b,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},r.a.createElement(o.E,{dataKey:"name"}),r.a.createElement(o.F,null),r.a.createElement(o.f,{strokeDasharray:"3 3"}),r.a.createElement(o.C,null),r.a.createElement(o.a,{type:"monotone",dataKey:"pv",stroke:"#F04F47",fill:"#F04F47"}))))))},A=n(1086),C=n(306),f=n(304),v=n(303);t.default=function(e){e.match;return r.a.createElement(r.a.Fragment,null,r.a.createElement(f.a,{title:"Area Chart",description:"All svg elements can be added into the AreaChart component, such as defs, linearGradient, etc.",refUrl:"http://recharts.org/en-US/api/AreaChart/"}),r.a.createElement(v.a,null,r.a.createElement(A.a,{item:!0,xs:12,lg:6},r.a.createElement(C.a,{title:"Simple modal",component:m,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst SimpleAreaChart = () => {\n  return (\n    <ResponsiveContainer width='100%' height={200}>\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n        <XAxis dataKey='name' />\n        <YAxis />\n        <CartesianGrid strokeDasharray='3 3' />\n        <Tooltip />\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SimpleAreaChart;\n"})),r.a.createElement(A.a,{item:!0,xs:12,lg:6},r.a.createElement(C.a,{title:"Stacked Area Chart",component:l,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\n\nconst StackedAreaChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='name' />\n      <YAxis />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip />\n      <Area\n        type='monotone'\n        dataKey='uv'\n        stackId='1'\n        stroke='#4299E1'\n        fill='#4299E1'\n      />\n      <Area\n        type='monotone'\n        dataKey='pv'\n        stackId='1'\n        stroke='#59AA2B'\n        fill='#59AA2B'\n      />\n      <Area\n        type='monotone'\n        dataKey='amt'\n        stackId='1'\n        stroke='#F04F47'\n        fill='#F04F47'\n      />\n    </AreaChart>\n  </ResponsiveContainer>\n);\n\nexport default StackedAreaChart;\n"})),r.a.createElement(A.a,{item:!0,xs:12,lg:6},r.a.createElement(C.a,{title:"AreaChart Connect Nulls",component:u,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport Box from '@material-ui/core/Box';\n\nconst data = [\n  {name: 'Page A', uv: 4000},\n  {name: 'Page B', uv: 3000},\n  {name: 'Page C', uv: 2000},\n  {name: 'Page D'},\n  {name: 'Page E', uv: 1890},\n  {name: 'Page F', uv: 2390},\n  {name: 'Page G', uv: 3490},\n];\nconst AreaChartConnectNulls = () => (\n  <ResponsiveContainer width='100%'>\n    <div>\n      <Box mb={5}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              connectNulls={true}\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default AreaChartConnectNulls;\n"})),r.a.createElement(A.a,{item:!0,xs:12,lg:6},r.a.createElement(C.a,{title:"Synchronized Area Chart",component:y,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport data from './data';\nimport Box from '@material-ui/core/Box';\n\nconst SynchronizedAreaChart = () => (\n  <ResponsiveContainer width='100%'>\n    <div>\n      <Box component='p' mb={4}>\n        A demo of synchronized AreaCharts\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='uv'\n              stroke='#4299E1'\n              fill='#4299E1'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n      <Box component='p' mb={4}>\n        Maybe some other content\n      </Box>\n      <Box mb={4}>\n        <ResponsiveContainer width='100%' height={200}>\n          <AreaChart\n            data={data}\n            syncId='anyId'\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n            <XAxis dataKey='name' />\n            <YAxis />\n            <CartesianGrid strokeDasharray='3 3' />\n            <Tooltip />\n            <Area\n              type='monotone'\n              dataKey='pv'\n              stroke='#F04F47'\n              fill='#F04F47'\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </div>\n  </ResponsiveContainer>\n);\n\nexport default SynchronizedAreaChart;\n"})),r.a.createElement(A.a,{item:!0,xs:12,lg:6},r.a.createElement(C.a,{title:"Percent Area Chart",component:h,source:"import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst data = [\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\n];\n\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\nconst renderTooltipContent = (o) => {\n  const {payload, label} = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n\n  return (\n    <div className='customized-tooltip-content'>\n      <p className='total'>{`${label} (Total: ${total})`}</p>\n      <ul className='list'>\n        {payload.map((entry, index) => (\n          <li key={`item-${index}`} style={{color: entry.color}}>\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nconst PercentAreaChart = () => (\n  <ResponsiveContainer width='100%' height={200}>\n    <AreaChart\n      data={data}\n      stackOffset='expand'\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\n      <XAxis dataKey='month' />\n      <YAxis tickFormatter={toPercent} />\n      <CartesianGrid strokeDasharray='3 3' />\n      <Tooltip content={renderTooltipContent} />\n      <Area\n        type='monotone'\n        dataKey='a'\n        stackId='1'\n        stroke='#4299E1'\n        fill='#4299E1'\n      />\n      <Area\n        type='monotone'\n        dataKey='b'\n        stackId='1'\n        stroke='#59AA2B'\n        fill='#59AA2B'\n      />\n      <Area\n        type='monotone'\n        dataKey='c'\n        stackId='1'\n        stroke='#F04F47'\n        fill='#F04F47'\n      />\n    </AreaChart>\n  </ResponsiveContainer>\n);\n\nexport default PercentAreaChart;\n"}))))}}}]);
//# sourceMappingURL=181.b43c32eb.chunk.js.map